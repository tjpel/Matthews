"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+standard-deviational-ellipse@6.5.0";
exports.ids = ["vendor-chunks/@turf+standard-deviational-ellipse@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+standard-deviational-ellipse@6.5.0/node_modules/@turf/standard-deviational-ellipse/dist/es/index.js":
/*!**************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+standard-deviational-ellipse@6.5.0/node_modules/@turf/standard-deviational-ellipse/dist/es/index.js ***!
  \**************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_center_mean__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/center-mean */ \"(ssr)/./node_modules/.pnpm/@turf+center-mean@6.5.0/node_modules/@turf/center-mean/dist/es/index.js\");\n/* harmony import */ var _turf_points_within_polygon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/points-within-polygon */ \"(ssr)/./node_modules/.pnpm/@turf+points-within-polygon@6.5.0/node_modules/@turf/points-within-polygon/dist/es/index.js\");\n/* harmony import */ var _turf_ellipse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @turf/ellipse */ \"(ssr)/./node_modules/.pnpm/@turf+ellipse@6.5.0/node_modules/@turf/ellipse/dist/es/index.js\");\n\n\n\n\n\n\n\n/**\n * Takes a {@link FeatureCollection} and returns a standard deviational ellipse,\n * also known as a “directional distribution.” The standard deviational ellipse\n * aims to show the direction and the distribution of a dataset by drawing\n * an ellipse that contains about one standard deviation’s worth (~ 70%) of the\n * data.\n *\n * This module mirrors the functionality of [Directional Distribution](http://desktop.arcgis.com/en/arcmap/10.3/tools/spatial-statistics-toolbox/directional-distribution.htm)\n * in ArcGIS and the [QGIS Standard Deviational Ellipse Plugin](http://arken.nmbu.no/~havatv/gis/qgisplugins/SDEllipse/)\n *\n * **Bibliography**\n *\n * • Robert S. Yuill, “The Standard Deviational Ellipse; An Updated Tool for\n * Spatial Description,” _Geografiska Annaler_ 53, no. 1 (1971): 28–39,\n * doi:{@link https://doi.org/10.2307/490885|10.2307/490885}.\n *\n * • Paul Hanly Furfey, “A Note on Lefever’s “Standard Deviational Ellipse,”\n * _American Journal of Sociology_ 33, no. 1 (1927): 94—98,\n * doi:{@link https://doi.org/10.1086/214336|10.1086/214336}.\n *\n *\n * @name standardDeviationalEllipse\n * @param {FeatureCollection<Point>} points GeoJSON points\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.weight] the property name used to weight the center\n * @param {number} [options.steps=64] number of steps for the polygon\n * @param {Object} [options.properties={}] properties to pass to the resulting ellipse\n * @returns {Feature<Polygon>} an elliptical Polygon that includes approximately 1 SD of the dataset within it.\n * @example\n *\n * var bbox = [-74, 40.72, -73.98, 40.74];\n * var points = turf.randomPoint(400, {bbox: bbox});\n * var sdEllipse = turf.standardDeviationalEllipse(points);\n *\n * //addToMap\n * var addToMap = [points, sdEllipse];\n *\n */\nfunction standardDeviationalEllipse(points, options) {\n  // Optional params\n  options = options || {};\n  if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.isObject)(options)) throw new Error(\"options is invalid\");\n  var steps = options.steps || 64;\n  var weightTerm = options.weight;\n  var properties = options.properties || {};\n\n  // Validation:\n  if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.isNumber)(steps)) throw new Error(\"steps must be a number\");\n  if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.isObject)(properties)) throw new Error(\"properties must be a number\");\n\n  // Calculate mean center & number of features:\n  var numberOfFeatures = (0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordAll)(points).length;\n  var meanCenter = (0,_turf_center_mean__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(points, { weight: weightTerm });\n\n  // Calculate angle of rotation:\n  // [X, Y] = mean center of all [x, y].\n  // theta = arctan( (A + B) / C )\n  // A = sum((x - X)^2) - sum((y - Y)^2)\n  // B = sqrt(A^2 + 4(sum((x - X)(y - Y))^2))\n  // C = 2(sum((x - X)(y - Y)))\n\n  var xDeviationSquaredSum = 0;\n  var yDeviationSquaredSum = 0;\n  var xyDeviationSum = 0;\n\n  (0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.featureEach)(points, function (point) {\n    var weight = point.properties[weightTerm] || 1;\n    var deviation = getDeviations((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(point), (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(meanCenter));\n    xDeviationSquaredSum += Math.pow(deviation.x, 2) * weight;\n    yDeviationSquaredSum += Math.pow(deviation.y, 2) * weight;\n    xyDeviationSum += deviation.x * deviation.y * weight;\n  });\n\n  var bigA = xDeviationSquaredSum - yDeviationSquaredSum;\n  var bigB = Math.sqrt(Math.pow(bigA, 2) + 4 * Math.pow(xyDeviationSum, 2));\n  var bigC = 2 * xyDeviationSum;\n  var theta = Math.atan((bigA + bigB) / bigC);\n  var thetaDeg = (theta * 180) / Math.PI;\n\n  // Calculate axes:\n  // sigmaX = sqrt((1 / n - 2) * sum((((x - X) * cos(theta)) - ((y - Y) * sin(theta)))^2))\n  // sigmaY = sqrt((1 / n - 2) * sum((((x - X) * sin(theta)) - ((y - Y) * cos(theta)))^2))\n  var sigmaXsum = 0;\n  var sigmaYsum = 0;\n  var weightsum = 0;\n  (0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.featureEach)(points, function (point) {\n    var weight = point.properties[weightTerm] || 1;\n    var deviation = getDeviations((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(point), (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(meanCenter));\n    sigmaXsum +=\n      Math.pow(\n        deviation.x * Math.cos(theta) - deviation.y * Math.sin(theta),\n        2\n      ) * weight;\n    sigmaYsum +=\n      Math.pow(\n        deviation.x * Math.sin(theta) + deviation.y * Math.cos(theta),\n        2\n      ) * weight;\n    weightsum += weight;\n  });\n\n  var sigmaX = Math.sqrt((2 * sigmaXsum) / weightsum);\n  var sigmaY = Math.sqrt((2 * sigmaYsum) / weightsum);\n\n  var theEllipse = (0,_turf_ellipse__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(meanCenter, sigmaX, sigmaY, {\n    units: \"degrees\",\n    angle: thetaDeg,\n    steps: steps,\n    properties: properties,\n  });\n  var pointsWithinEllipse = (0,_turf_points_within_polygon__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(\n    points,\n    (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.featureCollection)([theEllipse])\n  );\n  var standardDeviationalEllipseProperties = {\n    meanCenterCoordinates: (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(meanCenter),\n    semiMajorAxis: sigmaX,\n    semiMinorAxis: sigmaY,\n    numberOfFeatures: numberOfFeatures,\n    angle: thetaDeg,\n    percentageWithinEllipse:\n      (100 * (0,_turf_meta__WEBPACK_IMPORTED_MODULE_0__.coordAll)(pointsWithinEllipse).length) / numberOfFeatures,\n  };\n  theEllipse.properties.standardDeviationalEllipse = standardDeviationalEllipseProperties;\n\n  return theEllipse;\n}\n\n/**\n * Get x_i - X and y_i - Y\n *\n * @private\n * @param {Array} coordinates Array of [x_i, y_i]\n * @param {Array} center Array of [X, Y]\n * @returns {Object} { x: n, y: m }\n */\nfunction getDeviations(coordinates, center) {\n  return {\n    x: coordinates[0] - center[0],\n    y: coordinates[1] - center[1],\n  };\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (standardDeviationalEllipse);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+standard-deviational-ellipse@6.5.0/node_modules/@turf/standard-deviational-ellipse/dist/es/index.js\n");

/***/ })

};
;