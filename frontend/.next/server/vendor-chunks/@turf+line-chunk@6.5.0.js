"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+line-chunk@6.5.0";
exports.ids = ["vendor-chunks/@turf+line-chunk@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+line-chunk@6.5.0/node_modules/@turf/line-chunk/dist/es/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+line-chunk@6.5.0/node_modules/@turf/line-chunk/dist/es/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_length__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/length */ \"(ssr)/./node_modules/.pnpm/@turf+length@6.5.0/node_modules/@turf/length/dist/es/index.js\");\n/* harmony import */ var _turf_line_slice_along__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/line-slice-along */ \"(ssr)/./node_modules/.pnpm/@turf+line-slice-along@6.5.0/node_modules/@turf/line-slice-along/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n\n\n\n\n\n/**\n * Divides a {@link LineString} into chunks of a specified length.\n * If the line is shorter than the segment length then the original line is returned.\n *\n * @name lineChunk\n * @param {FeatureCollection|Geometry|Feature<LineString|MultiLineString>} geojson the lines to split\n * @param {number} segmentLength how long to make each segment\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] units can be degrees, radians, miles, or kilometers\n * @param {boolean} [options.reverse=false] reverses coordinates to start the first chunked segment at the end\n * @returns {FeatureCollection<LineString>} collection of line segments\n * @example\n * var line = turf.lineString([[-95, 40], [-93, 45], [-85, 50]]);\n *\n * var chunk = turf.lineChunk(line, 15, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [chunk];\n */\nfunction lineChunk(geojson, segmentLength, options) {\n  // Optional parameters\n  options = options || {};\n  if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isObject)(options)) throw new Error(\"options is invalid\");\n  var units = options.units;\n  var reverse = options.reverse;\n\n  // Validation\n  if (!geojson) throw new Error(\"geojson is required\");\n  if (segmentLength <= 0)\n    throw new Error(\"segmentLength must be greater than 0\");\n\n  // Container\n  var results = [];\n\n  // Flatten each feature to simple LineString\n  (0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.flattenEach)(geojson, function (feature) {\n    // reverses coordinates to start the first chunked segment at the end\n    if (reverse)\n      feature.geometry.coordinates = feature.geometry.coordinates.reverse();\n\n    sliceLineSegments(feature, segmentLength, units, function (segment) {\n      results.push(segment);\n    });\n  });\n  return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.featureCollection)(results);\n}\n\n/**\n * Slice Line Segments\n *\n * @private\n * @param {Feature<LineString>} line GeoJSON LineString\n * @param {number} segmentLength how long to make each segment\n * @param {string}[units='kilometers'] units can be degrees, radians, miles, or kilometers\n * @param {Function} callback iterate over sliced line segments\n * @returns {void}\n */\nfunction sliceLineSegments(line, segmentLength, units, callback) {\n  var lineLength = (0,_turf_length__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(line, { units: units });\n\n  // If the line is shorter than the segment length then the orginal line is returned.\n  if (lineLength <= segmentLength) return callback(line);\n\n  var numberOfSegments = lineLength / segmentLength;\n\n  // If numberOfSegments is integer, no need to plus 1\n  if (!Number.isInteger(numberOfSegments)) {\n    numberOfSegments = Math.floor(numberOfSegments) + 1;\n  }\n\n  for (var i = 0; i < numberOfSegments; i++) {\n    var outline = (0,_turf_line_slice_along__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\n      line,\n      segmentLength * i,\n      segmentLength * (i + 1),\n      { units: units }\n    );\n    callback(outline, i);\n  }\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lineChunk);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrbGluZS1jaHVua0A2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvbGluZS1jaHVuay9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7O0FBQWtDO0FBQ2tCO0FBQ1g7QUFDbUI7O0FBRTVEO0FBQ0EsY0FBYyxrQkFBa0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBZ0U7QUFDM0UsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUSxXQUFXO0FBQzlCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFNBQVM7QUFDcEIsYUFBYSwrQkFBK0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0EseUNBQXlDLGVBQWU7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPLHVEQUFRO0FBQ2Y7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsRUFBRSx1REFBVztBQUNiO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7QUFDSCxTQUFTLGdFQUFpQjtBQUMxQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcscUJBQXFCO0FBQ2hDLFdBQVcsUUFBUTtBQUNuQixXQUFXLE9BQU87QUFDbEIsV0FBVyxVQUFVO0FBQ3JCLGFBQWE7QUFDYjtBQUNBO0FBQ0EsbUJBQW1CLHdEQUFNLFNBQVMsY0FBYzs7QUFFaEQ7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxrQkFBa0Isc0JBQXNCO0FBQ3hDLGtCQUFrQixrRUFBYztBQUNoQztBQUNBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUVBQWUsU0FBUyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitsaW5lLWNodW5rQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9saW5lLWNodW5rL2Rpc3QvZXMvaW5kZXguanM/YzNiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbGVuZ3RoIGZyb20gJ0B0dXJmL2xlbmd0aCc7XG5pbXBvcnQgbGluZVNsaWNlQWxvbmcgZnJvbSAnQHR1cmYvbGluZS1zbGljZS1hbG9uZyc7XG5pbXBvcnQgeyBmbGF0dGVuRWFjaCB9IGZyb20gJ0B0dXJmL21ldGEnO1xuaW1wb3J0IHsgaXNPYmplY3QsIGZlYXR1cmVDb2xsZWN0aW9uIH0gZnJvbSAnQHR1cmYvaGVscGVycyc7XG5cbi8qKlxuICogRGl2aWRlcyBhIHtAbGluayBMaW5lU3RyaW5nfSBpbnRvIGNodW5rcyBvZiBhIHNwZWNpZmllZCBsZW5ndGguXG4gKiBJZiB0aGUgbGluZSBpcyBzaG9ydGVyIHRoYW4gdGhlIHNlZ21lbnQgbGVuZ3RoIHRoZW4gdGhlIG9yaWdpbmFsIGxpbmUgaXMgcmV0dXJuZWQuXG4gKlxuICogQG5hbWUgbGluZUNodW5rXG4gKiBAcGFyYW0ge0ZlYXR1cmVDb2xsZWN0aW9ufEdlb21ldHJ5fEZlYXR1cmU8TGluZVN0cmluZ3xNdWx0aUxpbmVTdHJpbmc+fSBnZW9qc29uIHRoZSBsaW5lcyB0byBzcGxpdFxuICogQHBhcmFtIHtudW1iZXJ9IHNlZ21lbnRMZW5ndGggaG93IGxvbmcgdG8gbWFrZSBlYWNoIHNlZ21lbnRcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gT3B0aW9uYWwgcGFyYW1ldGVyc1xuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnVuaXRzPSdraWxvbWV0ZXJzJ10gdW5pdHMgY2FuIGJlIGRlZ3JlZXMsIHJhZGlhbnMsIG1pbGVzLCBvciBraWxvbWV0ZXJzXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLnJldmVyc2U9ZmFsc2VdIHJldmVyc2VzIGNvb3JkaW5hdGVzIHRvIHN0YXJ0IHRoZSBmaXJzdCBjaHVua2VkIHNlZ21lbnQgYXQgdGhlIGVuZFxuICogQHJldHVybnMge0ZlYXR1cmVDb2xsZWN0aW9uPExpbmVTdHJpbmc+fSBjb2xsZWN0aW9uIG9mIGxpbmUgc2VnbWVudHNcbiAqIEBleGFtcGxlXG4gKiB2YXIgbGluZSA9IHR1cmYubGluZVN0cmluZyhbWy05NSwgNDBdLCBbLTkzLCA0NV0sIFstODUsIDUwXV0pO1xuICpcbiAqIHZhciBjaHVuayA9IHR1cmYubGluZUNodW5rKGxpbmUsIDE1LCB7dW5pdHM6ICdtaWxlcyd9KTtcbiAqXG4gKiAvL2FkZFRvTWFwXG4gKiB2YXIgYWRkVG9NYXAgPSBbY2h1bmtdO1xuICovXG5mdW5jdGlvbiBsaW5lQ2h1bmsoZ2VvanNvbiwgc2VnbWVudExlbmd0aCwgb3B0aW9ucykge1xuICAvLyBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBpZiAoIWlzT2JqZWN0KG9wdGlvbnMpKSB0aHJvdyBuZXcgRXJyb3IoXCJvcHRpb25zIGlzIGludmFsaWRcIik7XG4gIHZhciB1bml0cyA9IG9wdGlvbnMudW5pdHM7XG4gIHZhciByZXZlcnNlID0gb3B0aW9ucy5yZXZlcnNlO1xuXG4gIC8vIFZhbGlkYXRpb25cbiAgaWYgKCFnZW9qc29uKSB0aHJvdyBuZXcgRXJyb3IoXCJnZW9qc29uIGlzIHJlcXVpcmVkXCIpO1xuICBpZiAoc2VnbWVudExlbmd0aCA8PSAwKVxuICAgIHRocm93IG5ldyBFcnJvcihcInNlZ21lbnRMZW5ndGggbXVzdCBiZSBncmVhdGVyIHRoYW4gMFwiKTtcblxuICAvLyBDb250YWluZXJcbiAgdmFyIHJlc3VsdHMgPSBbXTtcblxuICAvLyBGbGF0dGVuIGVhY2ggZmVhdHVyZSB0byBzaW1wbGUgTGluZVN0cmluZ1xuICBmbGF0dGVuRWFjaChnZW9qc29uLCBmdW5jdGlvbiAoZmVhdHVyZSkge1xuICAgIC8vIHJldmVyc2VzIGNvb3JkaW5hdGVzIHRvIHN0YXJ0IHRoZSBmaXJzdCBjaHVua2VkIHNlZ21lbnQgYXQgdGhlIGVuZFxuICAgIGlmIChyZXZlcnNlKVxuICAgICAgZmVhdHVyZS5nZW9tZXRyeS5jb29yZGluYXRlcyA9IGZlYXR1cmUuZ2VvbWV0cnkuY29vcmRpbmF0ZXMucmV2ZXJzZSgpO1xuXG4gICAgc2xpY2VMaW5lU2VnbWVudHMoZmVhdHVyZSwgc2VnbWVudExlbmd0aCwgdW5pdHMsIGZ1bmN0aW9uIChzZWdtZW50KSB7XG4gICAgICByZXN1bHRzLnB1c2goc2VnbWVudCk7XG4gICAgfSk7XG4gIH0pO1xuICByZXR1cm4gZmVhdHVyZUNvbGxlY3Rpb24ocmVzdWx0cyk7XG59XG5cbi8qKlxuICogU2xpY2UgTGluZSBTZWdtZW50c1xuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0ZlYXR1cmU8TGluZVN0cmluZz59IGxpbmUgR2VvSlNPTiBMaW5lU3RyaW5nXG4gKiBAcGFyYW0ge251bWJlcn0gc2VnbWVudExlbmd0aCBob3cgbG9uZyB0byBtYWtlIGVhY2ggc2VnbWVudFxuICogQHBhcmFtIHtzdHJpbmd9W3VuaXRzPSdraWxvbWV0ZXJzJ10gdW5pdHMgY2FuIGJlIGRlZ3JlZXMsIHJhZGlhbnMsIG1pbGVzLCBvciBraWxvbWV0ZXJzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYWxsYmFjayBpdGVyYXRlIG92ZXIgc2xpY2VkIGxpbmUgc2VnbWVudHNcbiAqIEByZXR1cm5zIHt2b2lkfVxuICovXG5mdW5jdGlvbiBzbGljZUxpbmVTZWdtZW50cyhsaW5lLCBzZWdtZW50TGVuZ3RoLCB1bml0cywgY2FsbGJhY2spIHtcbiAgdmFyIGxpbmVMZW5ndGggPSBsZW5ndGgobGluZSwgeyB1bml0czogdW5pdHMgfSk7XG5cbiAgLy8gSWYgdGhlIGxpbmUgaXMgc2hvcnRlciB0aGFuIHRoZSBzZWdtZW50IGxlbmd0aCB0aGVuIHRoZSBvcmdpbmFsIGxpbmUgaXMgcmV0dXJuZWQuXG4gIGlmIChsaW5lTGVuZ3RoIDw9IHNlZ21lbnRMZW5ndGgpIHJldHVybiBjYWxsYmFjayhsaW5lKTtcblxuICB2YXIgbnVtYmVyT2ZTZWdtZW50cyA9IGxpbmVMZW5ndGggLyBzZWdtZW50TGVuZ3RoO1xuXG4gIC8vIElmIG51bWJlck9mU2VnbWVudHMgaXMgaW50ZWdlciwgbm8gbmVlZCB0byBwbHVzIDFcbiAgaWYgKCFOdW1iZXIuaXNJbnRlZ2VyKG51bWJlck9mU2VnbWVudHMpKSB7XG4gICAgbnVtYmVyT2ZTZWdtZW50cyA9IE1hdGguZmxvb3IobnVtYmVyT2ZTZWdtZW50cykgKyAxO1xuICB9XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBudW1iZXJPZlNlZ21lbnRzOyBpKyspIHtcbiAgICB2YXIgb3V0bGluZSA9IGxpbmVTbGljZUFsb25nKFxuICAgICAgbGluZSxcbiAgICAgIHNlZ21lbnRMZW5ndGggKiBpLFxuICAgICAgc2VnbWVudExlbmd0aCAqIChpICsgMSksXG4gICAgICB7IHVuaXRzOiB1bml0cyB9XG4gICAgKTtcbiAgICBjYWxsYmFjayhvdXRsaW5lLCBpKTtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBsaW5lQ2h1bms7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+line-chunk@6.5.0/node_modules/@turf/line-chunk/dist/es/index.js\n");

/***/ })

};
;