"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+center-of-mass@6.5.0";
exports.ids = ["vendor-chunks/@turf+center-of-mass@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+center-of-mass@6.5.0/node_modules/@turf/center-of-mass/dist/es/index.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+center-of-mass@6.5.0/node_modules/@turf/center-of-mass/dist/es/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_convex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/convex */ \"(ssr)/./node_modules/.pnpm/@turf+convex@6.5.0/node_modules/@turf/convex/dist/es/index.js\");\n/* harmony import */ var _turf_centroid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/centroid */ \"(ssr)/./node_modules/.pnpm/@turf+centroid@6.5.0/node_modules/@turf/centroid/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n\n\n\n\n\n/**\n * Takes any {@link Feature} or a {@link FeatureCollection} and returns its [center of mass](https://en.wikipedia.org/wiki/Center_of_mass) using this formula: [Centroid of Polygon](https://en.wikipedia.org/wiki/Centroid#Centroid_of_polygon).\n *\n * @name centerOfMass\n * @param {GeoJSON} geojson GeoJSON to be centered\n * @param {Object} [options={}] Optional Parameters\n * @param {Object} [options.properties={}] Translate Properties to Feature\n * @returns {Feature<Point>} the center of mass\n * @example\n * var polygon = turf.polygon([[[-81, 41], [-88, 36], [-84, 31], [-80, 33], [-77, 39], [-81, 41]]]);\n *\n * var center = turf.centerOfMass(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, center]\n */\nfunction centerOfMass(geojson, options) {\n    if (options === void 0) { options = {}; }\n    switch ((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getType)(geojson)) {\n        case \"Point\":\n            return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.point)((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_3__.getCoord)(geojson), options.properties);\n        case \"Polygon\":\n            var coords = [];\n            (0,_turf_meta__WEBPACK_IMPORTED_MODULE_4__.coordEach)(geojson, function (coord) {\n                coords.push(coord);\n            });\n            // First, we neutralize the feature (set it around coordinates [0,0]) to prevent rounding errors\n            // We take any point to translate all the points around 0\n            var centre = (0,_turf_centroid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(geojson, { properties: options.properties });\n            var translation = centre.geometry.coordinates;\n            var sx = 0;\n            var sy = 0;\n            var sArea = 0;\n            var i, pi, pj, xi, xj, yi, yj, a;\n            var neutralizedPoints = coords.map(function (point) {\n                return [point[0] - translation[0], point[1] - translation[1]];\n            });\n            for (i = 0; i < coords.length - 1; i++) {\n                // pi is the current point\n                pi = neutralizedPoints[i];\n                xi = pi[0];\n                yi = pi[1];\n                // pj is the next point (pi+1)\n                pj = neutralizedPoints[i + 1];\n                xj = pj[0];\n                yj = pj[1];\n                // a is the common factor to compute the signed area and the final coordinates\n                a = xi * yj - xj * yi;\n                // sArea is the sum used to compute the signed area\n                sArea += a;\n                // sx and sy are the sums used to compute the final coordinates\n                sx += (xi + xj) * a;\n                sy += (yi + yj) * a;\n            }\n            // Shape has no area: fallback on turf.centroid\n            if (sArea === 0) {\n                return centre;\n            }\n            else {\n                // Compute the signed area, and factorize 1/6A\n                var area = sArea * 0.5;\n                var areaFactor = 1 / (6 * area);\n                // Compute the final coordinates, adding back the values that have been neutralized\n                return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.point)([translation[0] + areaFactor * sx, translation[1] + areaFactor * sy], options.properties);\n            }\n        default:\n            // Not a polygon: Compute the convex hull and work with that\n            var hull = (0,_turf_convex__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(geojson);\n            if (hull)\n                return centerOfMass(hull, { properties: options.properties });\n            // Hull is empty: fallback on the centroid\n            else\n                return (0,_turf_centroid__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(geojson, { properties: options.properties });\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (centerOfMass);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY2VudGVyLW9mLW1hc3NANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL2NlbnRlci1vZi1tYXNzL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQWtDO0FBQ0k7QUFDQTtBQUNjO0FBQ2I7QUFDdkM7QUFDQSxjQUFjLGVBQWUsTUFBTSx5QkFBeUI7QUFDNUQ7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFFBQVEsc0JBQXNCO0FBQ3pDLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QixZQUFZLHdEQUFPO0FBQ25CO0FBQ0EsbUJBQW1CLG9EQUFLLENBQUMseURBQVE7QUFDakM7QUFDQTtBQUNBLFlBQVkscURBQVM7QUFDckI7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBLHlCQUF5QiwwREFBUSxZQUFZLGdDQUFnQztBQUM3RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYix3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsdUJBQXVCLG9EQUFLO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLHVCQUF1Qix3REFBTTtBQUM3QjtBQUNBLDRDQUE0QyxnQ0FBZ0M7QUFDNUU7QUFDQTtBQUNBLHVCQUF1QiwwREFBUSxZQUFZLGdDQUFnQztBQUMzRTtBQUNBO0FBQ0EsaUVBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitjZW50ZXItb2YtbWFzc0A2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvY2VudGVyLW9mLW1hc3MvZGlzdC9lcy9pbmRleC5qcz8zODU3Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjb252ZXggZnJvbSBcIkB0dXJmL2NvbnZleFwiO1xuaW1wb3J0IGNlbnRyb2lkIGZyb20gXCJAdHVyZi9jZW50cm9pZFwiO1xuaW1wb3J0IHsgcG9pbnQgfSBmcm9tIFwiQHR1cmYvaGVscGVyc1wiO1xuaW1wb3J0IHsgZ2V0VHlwZSwgZ2V0Q29vcmQgfSBmcm9tIFwiQHR1cmYvaW52YXJpYW50XCI7XG5pbXBvcnQgeyBjb29yZEVhY2ggfSBmcm9tIFwiQHR1cmYvbWV0YVwiO1xuLyoqXG4gKiBUYWtlcyBhbnkge0BsaW5rIEZlYXR1cmV9IG9yIGEge0BsaW5rIEZlYXR1cmVDb2xsZWN0aW9ufSBhbmQgcmV0dXJucyBpdHMgW2NlbnRlciBvZiBtYXNzXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9DZW50ZXJfb2ZfbWFzcykgdXNpbmcgdGhpcyBmb3JtdWxhOiBbQ2VudHJvaWQgb2YgUG9seWdvbl0oaHR0cHM6Ly9lbi53aWtpcGVkaWEub3JnL3dpa2kvQ2VudHJvaWQjQ2VudHJvaWRfb2ZfcG9seWdvbikuXG4gKlxuICogQG5hbWUgY2VudGVyT2ZNYXNzXG4gKiBAcGFyYW0ge0dlb0pTT059IGdlb2pzb24gR2VvSlNPTiB0byBiZSBjZW50ZXJlZFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBPcHRpb25hbCBQYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnMucHJvcGVydGllcz17fV0gVHJhbnNsYXRlIFByb3BlcnRpZXMgdG8gRmVhdHVyZVxuICogQHJldHVybnMge0ZlYXR1cmU8UG9pbnQ+fSB0aGUgY2VudGVyIG9mIG1hc3NcbiAqIEBleGFtcGxlXG4gKiB2YXIgcG9seWdvbiA9IHR1cmYucG9seWdvbihbW1stODEsIDQxXSwgWy04OCwgMzZdLCBbLTg0LCAzMV0sIFstODAsIDMzXSwgWy03NywgMzldLCBbLTgxLCA0MV1dXSk7XG4gKlxuICogdmFyIGNlbnRlciA9IHR1cmYuY2VudGVyT2ZNYXNzKHBvbHlnb24pO1xuICpcbiAqIC8vYWRkVG9NYXBcbiAqIHZhciBhZGRUb01hcCA9IFtwb2x5Z29uLCBjZW50ZXJdXG4gKi9cbmZ1bmN0aW9uIGNlbnRlck9mTWFzcyhnZW9qc29uLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICBzd2l0Y2ggKGdldFR5cGUoZ2VvanNvbikpIHtcbiAgICAgICAgY2FzZSBcIlBvaW50XCI6XG4gICAgICAgICAgICByZXR1cm4gcG9pbnQoZ2V0Q29vcmQoZ2VvanNvbiksIG9wdGlvbnMucHJvcGVydGllcyk7XG4gICAgICAgIGNhc2UgXCJQb2x5Z29uXCI6XG4gICAgICAgICAgICB2YXIgY29vcmRzID0gW107XG4gICAgICAgICAgICBjb29yZEVhY2goZ2VvanNvbiwgZnVuY3Rpb24gKGNvb3JkKSB7XG4gICAgICAgICAgICAgICAgY29vcmRzLnB1c2goY29vcmQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyBGaXJzdCwgd2UgbmV1dHJhbGl6ZSB0aGUgZmVhdHVyZSAoc2V0IGl0IGFyb3VuZCBjb29yZGluYXRlcyBbMCwwXSkgdG8gcHJldmVudCByb3VuZGluZyBlcnJvcnNcbiAgICAgICAgICAgIC8vIFdlIHRha2UgYW55IHBvaW50IHRvIHRyYW5zbGF0ZSBhbGwgdGhlIHBvaW50cyBhcm91bmQgMFxuICAgICAgICAgICAgdmFyIGNlbnRyZSA9IGNlbnRyb2lkKGdlb2pzb24sIHsgcHJvcGVydGllczogb3B0aW9ucy5wcm9wZXJ0aWVzIH0pO1xuICAgICAgICAgICAgdmFyIHRyYW5zbGF0aW9uID0gY2VudHJlLmdlb21ldHJ5LmNvb3JkaW5hdGVzO1xuICAgICAgICAgICAgdmFyIHN4ID0gMDtcbiAgICAgICAgICAgIHZhciBzeSA9IDA7XG4gICAgICAgICAgICB2YXIgc0FyZWEgPSAwO1xuICAgICAgICAgICAgdmFyIGksIHBpLCBwaiwgeGksIHhqLCB5aSwgeWosIGE7XG4gICAgICAgICAgICB2YXIgbmV1dHJhbGl6ZWRQb2ludHMgPSBjb29yZHMubWFwKGZ1bmN0aW9uIChwb2ludCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBbcG9pbnRbMF0gLSB0cmFuc2xhdGlvblswXSwgcG9pbnRbMV0gLSB0cmFuc2xhdGlvblsxXV07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBjb29yZHMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgICAgICAgICAgLy8gcGkgaXMgdGhlIGN1cnJlbnQgcG9pbnRcbiAgICAgICAgICAgICAgICBwaSA9IG5ldXRyYWxpemVkUG9pbnRzW2ldO1xuICAgICAgICAgICAgICAgIHhpID0gcGlbMF07XG4gICAgICAgICAgICAgICAgeWkgPSBwaVsxXTtcbiAgICAgICAgICAgICAgICAvLyBwaiBpcyB0aGUgbmV4dCBwb2ludCAocGkrMSlcbiAgICAgICAgICAgICAgICBwaiA9IG5ldXRyYWxpemVkUG9pbnRzW2kgKyAxXTtcbiAgICAgICAgICAgICAgICB4aiA9IHBqWzBdO1xuICAgICAgICAgICAgICAgIHlqID0gcGpbMV07XG4gICAgICAgICAgICAgICAgLy8gYSBpcyB0aGUgY29tbW9uIGZhY3RvciB0byBjb21wdXRlIHRoZSBzaWduZWQgYXJlYSBhbmQgdGhlIGZpbmFsIGNvb3JkaW5hdGVzXG4gICAgICAgICAgICAgICAgYSA9IHhpICogeWogLSB4aiAqIHlpO1xuICAgICAgICAgICAgICAgIC8vIHNBcmVhIGlzIHRoZSBzdW0gdXNlZCB0byBjb21wdXRlIHRoZSBzaWduZWQgYXJlYVxuICAgICAgICAgICAgICAgIHNBcmVhICs9IGE7XG4gICAgICAgICAgICAgICAgLy8gc3ggYW5kIHN5IGFyZSB0aGUgc3VtcyB1c2VkIHRvIGNvbXB1dGUgdGhlIGZpbmFsIGNvb3JkaW5hdGVzXG4gICAgICAgICAgICAgICAgc3ggKz0gKHhpICsgeGopICogYTtcbiAgICAgICAgICAgICAgICBzeSArPSAoeWkgKyB5aikgKiBhO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gU2hhcGUgaGFzIG5vIGFyZWE6IGZhbGxiYWNrIG9uIHR1cmYuY2VudHJvaWRcbiAgICAgICAgICAgIGlmIChzQXJlYSA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHJldHVybiBjZW50cmU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAvLyBDb21wdXRlIHRoZSBzaWduZWQgYXJlYSwgYW5kIGZhY3Rvcml6ZSAxLzZBXG4gICAgICAgICAgICAgICAgdmFyIGFyZWEgPSBzQXJlYSAqIDAuNTtcbiAgICAgICAgICAgICAgICB2YXIgYXJlYUZhY3RvciA9IDEgLyAoNiAqIGFyZWEpO1xuICAgICAgICAgICAgICAgIC8vIENvbXB1dGUgdGhlIGZpbmFsIGNvb3JkaW5hdGVzLCBhZGRpbmcgYmFjayB0aGUgdmFsdWVzIHRoYXQgaGF2ZSBiZWVuIG5ldXRyYWxpemVkXG4gICAgICAgICAgICAgICAgcmV0dXJuIHBvaW50KFt0cmFuc2xhdGlvblswXSArIGFyZWFGYWN0b3IgKiBzeCwgdHJhbnNsYXRpb25bMV0gKyBhcmVhRmFjdG9yICogc3ldLCBvcHRpb25zLnByb3BlcnRpZXMpO1xuICAgICAgICAgICAgfVxuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgLy8gTm90IGEgcG9seWdvbjogQ29tcHV0ZSB0aGUgY29udmV4IGh1bGwgYW5kIHdvcmsgd2l0aCB0aGF0XG4gICAgICAgICAgICB2YXIgaHVsbCA9IGNvbnZleChnZW9qc29uKTtcbiAgICAgICAgICAgIGlmIChodWxsKVxuICAgICAgICAgICAgICAgIHJldHVybiBjZW50ZXJPZk1hc3MoaHVsbCwgeyBwcm9wZXJ0aWVzOiBvcHRpb25zLnByb3BlcnRpZXMgfSk7XG4gICAgICAgICAgICAvLyBIdWxsIGlzIGVtcHR5OiBmYWxsYmFjayBvbiB0aGUgY2VudHJvaWRcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICByZXR1cm4gY2VudHJvaWQoZ2VvanNvbiwgeyBwcm9wZXJ0aWVzOiBvcHRpb25zLnByb3BlcnRpZXMgfSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgY2VudGVyT2ZNYXNzO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+center-of-mass@6.5.0/node_modules/@turf/center-of-mass/dist/es/index.js\n");

/***/ })

};
;