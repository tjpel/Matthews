"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+points-within-polygon@6.5.0";
exports.ids = ["vendor-chunks/@turf+points-within-polygon@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+points-within-polygon@6.5.0/node_modules/@turf/points-within-polygon/dist/es/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+points-within-polygon@6.5.0/node_modules/@turf/points-within-polygon/dist/es/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/boolean-point-in-polygon */ \"(ssr)/./node_modules/.pnpm/@turf+boolean-point-in-polygon@6.5.0/node_modules/@turf/boolean-point-in-polygon/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n\n\n\n\n/**\n * Finds {@link Points} or {@link MultiPoint} coordinate positions that fall within {@link (Multi)Polygon(s)}.\n *\n * @name pointsWithinPolygon\n * @param {Feature|FeatureCollection<Point|MultiPoint>} points Point(s) or MultiPoint(s) as input search\n * @param {FeatureCollection|Geometry|Feature<Polygon|MultiPolygon>} polygons (Multi)Polygon(s) to check if points are within\n * @returns {FeatureCollection<Point|MultiPoint>} Point(s) or MultiPoint(s) with positions that land within at least one polygon.  The geometry type will match what was passsed in\n * @example\n * var points = turf.points([\n *     [-46.6318, -23.5523],\n *     [-46.6246, -23.5325],\n *     [-46.6062, -23.5513],\n *     [-46.663, -23.554],\n *     [-46.643, -23.557]\n * ]);\n *\n * var searchWithin = turf.polygon([[\n *     [-46.653,-23.543],\n *     [-46.634,-23.5346],\n *     [-46.613,-23.543],\n *     [-46.614,-23.559],\n *     [-46.631,-23.567],\n *     [-46.653,-23.560],\n *     [-46.653,-23.543]\n * ]]);\n *\n * var ptsWithin = turf.pointsWithinPolygon(points, searchWithin);\n *\n * //addToMap\n * var addToMap = [points, searchWithin, ptsWithin]\n * turf.featureEach(ptsWithin, function (currentFeature) {\n *   currentFeature.properties['marker-size'] = 'large';\n *   currentFeature.properties['marker-color'] = '#000';\n * });\n */\nfunction pointsWithinPolygon(points, polygons) {\n  var results = [];\n  (0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(points, function (point) {\n    var contained = false;\n    if (point.geometry.type === \"Point\") {\n      (0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.geomEach)(polygons, function (polygon) {\n        if ((0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(point, polygon)) contained = true;\n      });\n      if (contained) {\n        results.push(point);\n      }\n    } else if (point.geometry.type === \"MultiPoint\") {\n      var pointsWithin = [];\n      (0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.geomEach)(polygons, function (polygon) {\n        (0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.coordEach)(point, function (pointCoord) {\n          if ((0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(pointCoord, polygon)) {\n            contained = true;\n            pointsWithin.push(pointCoord);\n          }\n        });\n      });\n      if (contained) {\n        results.push((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.multiPoint)(pointsWithin));\n      }\n    } else {\n      throw new Error(\"Input geometry must be a Point or MultiPoint\");\n    }\n  });\n  return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection)(results);\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pointsWithinPolygon);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrcG9pbnRzLXdpdGhpbi1wb2x5Z29uQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9wb2ludHMtd2l0aGluLXBvbHlnb24vZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQTREO0FBQ0U7QUFDQTs7QUFFOUQ7QUFDQSxVQUFVLGNBQWMsSUFBSSxrQkFBa0IsdUNBQXVDLHdCQUF3QjtBQUM3RztBQUNBO0FBQ0EsV0FBVyw2Q0FBNkM7QUFDeEQsV0FBVywwREFBMEQ7QUFDckUsYUFBYSxxQ0FBcUM7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSjtBQUNBO0FBQ0E7QUFDQSxFQUFFLHVEQUFXO0FBQ2I7QUFDQTtBQUNBLE1BQU0sb0RBQVE7QUFDZCxZQUFZLDBFQUFjO0FBQzFCLE9BQU87QUFDUDtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQSxNQUFNLG9EQUFRO0FBQ2QsUUFBUSxxREFBUztBQUNqQixjQUFjLDBFQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxPQUFPO0FBQ1A7QUFDQSxxQkFBcUIseURBQVU7QUFDL0I7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLEdBQUc7QUFDSCxTQUFTLGdFQUFpQjtBQUMxQjs7QUFFQSxpRUFBZSxtQkFBbUIsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21mdmFsdWUtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrcG9pbnRzLXdpdGhpbi1wb2x5Z29uQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9wb2ludHMtd2l0aGluLXBvbHlnb24vZGlzdC9lcy9pbmRleC5qcz84YjIxIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBwb2ludEluUG9seWdvbiBmcm9tICdAdHVyZi9ib29sZWFuLXBvaW50LWluLXBvbHlnb24nO1xuaW1wb3J0IHsgbXVsdGlQb2ludCwgZmVhdHVyZUNvbGxlY3Rpb24gfSBmcm9tICdAdHVyZi9oZWxwZXJzJztcbmltcG9ydCB7IGZlYXR1cmVFYWNoLCBnZW9tRWFjaCwgY29vcmRFYWNoIH0gZnJvbSAnQHR1cmYvbWV0YSc7XG5cbi8qKlxuICogRmluZHMge0BsaW5rIFBvaW50c30gb3Ige0BsaW5rIE11bHRpUG9pbnR9IGNvb3JkaW5hdGUgcG9zaXRpb25zIHRoYXQgZmFsbCB3aXRoaW4ge0BsaW5rIChNdWx0aSlQb2x5Z29uKHMpfS5cbiAqXG4gKiBAbmFtZSBwb2ludHNXaXRoaW5Qb2x5Z29uXG4gKiBAcGFyYW0ge0ZlYXR1cmV8RmVhdHVyZUNvbGxlY3Rpb248UG9pbnR8TXVsdGlQb2ludD59IHBvaW50cyBQb2ludChzKSBvciBNdWx0aVBvaW50KHMpIGFzIGlucHV0IHNlYXJjaFxuICogQHBhcmFtIHtGZWF0dXJlQ29sbGVjdGlvbnxHZW9tZXRyeXxGZWF0dXJlPFBvbHlnb258TXVsdGlQb2x5Z29uPn0gcG9seWdvbnMgKE11bHRpKVBvbHlnb24ocykgdG8gY2hlY2sgaWYgcG9pbnRzIGFyZSB3aXRoaW5cbiAqIEByZXR1cm5zIHtGZWF0dXJlQ29sbGVjdGlvbjxQb2ludHxNdWx0aVBvaW50Pn0gUG9pbnQocykgb3IgTXVsdGlQb2ludChzKSB3aXRoIHBvc2l0aW9ucyB0aGF0IGxhbmQgd2l0aGluIGF0IGxlYXN0IG9uZSBwb2x5Z29uLiAgVGhlIGdlb21ldHJ5IHR5cGUgd2lsbCBtYXRjaCB3aGF0IHdhcyBwYXNzc2VkIGluXG4gKiBAZXhhbXBsZVxuICogdmFyIHBvaW50cyA9IHR1cmYucG9pbnRzKFtcbiAqICAgICBbLTQ2LjYzMTgsIC0yMy41NTIzXSxcbiAqICAgICBbLTQ2LjYyNDYsIC0yMy41MzI1XSxcbiAqICAgICBbLTQ2LjYwNjIsIC0yMy41NTEzXSxcbiAqICAgICBbLTQ2LjY2MywgLTIzLjU1NF0sXG4gKiAgICAgWy00Ni42NDMsIC0yMy41NTddXG4gKiBdKTtcbiAqXG4gKiB2YXIgc2VhcmNoV2l0aGluID0gdHVyZi5wb2x5Z29uKFtbXG4gKiAgICAgWy00Ni42NTMsLTIzLjU0M10sXG4gKiAgICAgWy00Ni42MzQsLTIzLjUzNDZdLFxuICogICAgIFstNDYuNjEzLC0yMy41NDNdLFxuICogICAgIFstNDYuNjE0LC0yMy41NTldLFxuICogICAgIFstNDYuNjMxLC0yMy41NjddLFxuICogICAgIFstNDYuNjUzLC0yMy41NjBdLFxuICogICAgIFstNDYuNjUzLC0yMy41NDNdXG4gKiBdXSk7XG4gKlxuICogdmFyIHB0c1dpdGhpbiA9IHR1cmYucG9pbnRzV2l0aGluUG9seWdvbihwb2ludHMsIHNlYXJjaFdpdGhpbik7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW3BvaW50cywgc2VhcmNoV2l0aGluLCBwdHNXaXRoaW5dXG4gKiB0dXJmLmZlYXR1cmVFYWNoKHB0c1dpdGhpbiwgZnVuY3Rpb24gKGN1cnJlbnRGZWF0dXJlKSB7XG4gKiAgIGN1cnJlbnRGZWF0dXJlLnByb3BlcnRpZXNbJ21hcmtlci1zaXplJ10gPSAnbGFyZ2UnO1xuICogICBjdXJyZW50RmVhdHVyZS5wcm9wZXJ0aWVzWydtYXJrZXItY29sb3InXSA9ICcjMDAwJztcbiAqIH0pO1xuICovXG5mdW5jdGlvbiBwb2ludHNXaXRoaW5Qb2x5Z29uKHBvaW50cywgcG9seWdvbnMpIHtcbiAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgZmVhdHVyZUVhY2gocG9pbnRzLCBmdW5jdGlvbiAocG9pbnQpIHtcbiAgICB2YXIgY29udGFpbmVkID0gZmFsc2U7XG4gICAgaWYgKHBvaW50Lmdlb21ldHJ5LnR5cGUgPT09IFwiUG9pbnRcIikge1xuICAgICAgZ2VvbUVhY2gocG9seWdvbnMsIGZ1bmN0aW9uIChwb2x5Z29uKSB7XG4gICAgICAgIGlmIChwb2ludEluUG9seWdvbihwb2ludCwgcG9seWdvbikpIGNvbnRhaW5lZCA9IHRydWU7XG4gICAgICB9KTtcbiAgICAgIGlmIChjb250YWluZWQpIHtcbiAgICAgICAgcmVzdWx0cy5wdXNoKHBvaW50KTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKHBvaW50Lmdlb21ldHJ5LnR5cGUgPT09IFwiTXVsdGlQb2ludFwiKSB7XG4gICAgICB2YXIgcG9pbnRzV2l0aGluID0gW107XG4gICAgICBnZW9tRWFjaChwb2x5Z29ucywgZnVuY3Rpb24gKHBvbHlnb24pIHtcbiAgICAgICAgY29vcmRFYWNoKHBvaW50LCBmdW5jdGlvbiAocG9pbnRDb29yZCkge1xuICAgICAgICAgIGlmIChwb2ludEluUG9seWdvbihwb2ludENvb3JkLCBwb2x5Z29uKSkge1xuICAgICAgICAgICAgY29udGFpbmVkID0gdHJ1ZTtcbiAgICAgICAgICAgIHBvaW50c1dpdGhpbi5wdXNoKHBvaW50Q29vcmQpO1xuICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICAgIGlmIChjb250YWluZWQpIHtcbiAgICAgICAgcmVzdWx0cy5wdXNoKG11bHRpUG9pbnQocG9pbnRzV2l0aGluKSk7XG4gICAgICB9XG4gICAgfSBlbHNlIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIklucHV0IGdlb21ldHJ5IG11c3QgYmUgYSBQb2ludCBvciBNdWx0aVBvaW50XCIpO1xuICAgIH1cbiAgfSk7XG4gIHJldHVybiBmZWF0dXJlQ29sbGVjdGlvbihyZXN1bHRzKTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcG9pbnRzV2l0aGluUG9seWdvbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+points-within-polygon@6.5.0/node_modules/@turf/points-within-polygon/dist/es/index.js\n");

/***/ })

};
;