"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+concave@6.5.0";
exports.ids = ["vendor-chunks/@turf+concave@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_distance__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/distance */ \"(ssr)/./node_modules/.pnpm/@turf+distance@6.5.0/node_modules/@turf/distance/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var _turf_tin__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/tin */ \"(ssr)/./node_modules/.pnpm/@turf+tin@6.5.0/node_modules/@turf/tin/dist/es/index.js\");\n/* harmony import */ var _lib_turf_dissolve_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lib/turf-dissolve.js */ \"(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-dissolve.js\");\n\n\n\n\n\n/**\n * Takes a set of {@link Point|points} and returns a concave hull Polygon or MultiPolygon.\n * Internally, this uses [turf-tin](https://github.com/Turfjs/turf-tin) to generate geometries.\n *\n * @name concave\n * @param {FeatureCollection<Point>} points input points\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.maxEdge=Infinity] the length (in 'units') of an edge necessary for part of the\n * hull to become concave.\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<(Polygon|MultiPolygon)>|null} a concave hull (null value is returned if unable to compute hull)\n * @example\n * var points = turf.featureCollection([\n *   turf.point([-63.601226, 44.642643]),\n *   turf.point([-63.591442, 44.651436]),\n *   turf.point([-63.580799, 44.648749]),\n *   turf.point([-63.573589, 44.641788]),\n *   turf.point([-63.587665, 44.64533]),\n *   turf.point([-63.595218, 44.64765])\n * ]);\n * var options = {units: 'miles', maxEdge: 1};\n *\n * var hull = turf.concave(points, options);\n *\n * //addToMap\n * var addToMap = [points, hull]\n */\nfunction concave(points, options) {\n    if (options === void 0) { options = {}; }\n    var maxEdge = options.maxEdge || Infinity;\n    var cleaned = removeDuplicates(points);\n    var tinPolys = (0,_turf_tin__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(cleaned);\n    // calculate length of all edges and area of all triangles\n    // and remove triangles that fail the max length test\n    tinPolys.features = tinPolys.features.filter(function (triangle) {\n        var pt1 = triangle.geometry.coordinates[0][0];\n        var pt2 = triangle.geometry.coordinates[0][1];\n        var pt3 = triangle.geometry.coordinates[0][2];\n        var dist1 = (0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(pt1, pt2, options);\n        var dist2 = (0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(pt2, pt3, options);\n        var dist3 = (0,_turf_distance__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(pt1, pt3, options);\n        return dist1 <= maxEdge && dist2 <= maxEdge && dist3 <= maxEdge;\n    });\n    if (tinPolys.features.length < 1) {\n        return null;\n    }\n    // merge the adjacent triangles\n    var dissolved = (0,_lib_turf_dissolve_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(tinPolys);\n    // geojson-dissolve always returns a MultiPolygon\n    if (dissolved.coordinates.length === 1) {\n        dissolved.coordinates = dissolved.coordinates[0];\n        dissolved.type = \"Polygon\";\n    }\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.feature)(dissolved);\n}\n/**\n * Removes duplicated points in a collection returning a new collection\n *\n * @private\n * @param {FeatureCollection<Point>} points to be cleaned\n * @returns {FeatureCollection<Point>} cleaned set of points\n */\nfunction removeDuplicates(points) {\n    var cleaned = [];\n    var existing = {};\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_2__.featureEach)(points, function (pt) {\n        if (!pt.geometry) {\n            return;\n        }\n        var key = pt.geometry.coordinates.join(\"-\");\n        if (!Object.prototype.hasOwnProperty.call(existing, key)) {\n            cleaned.push(pt);\n            existing[key] = true;\n        }\n    });\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.featureCollection)(cleaned);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (concave);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY29uY2F2ZUA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvY29uY2F2ZS9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFzQztBQUNxQjtBQUNsQjtBQUNiO0FBQ2tCO0FBQzlDO0FBQ0EsbUJBQW1CLG9CQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQyxXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFFBQVE7QUFDbkI7QUFDQSxXQUFXLFFBQVE7QUFDbkIsYUFBYSxzQ0FBc0M7QUFDbkQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxtQkFBbUIscURBQUc7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLDBEQUFRO0FBQzVCLG9CQUFvQiwwREFBUTtBQUM1QixvQkFBb0IsMERBQVE7QUFDNUI7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsaUVBQVE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsc0RBQU87QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsMEJBQTBCO0FBQ3JDLGFBQWEsMEJBQTBCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBVztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsV0FBVyxnRUFBaUI7QUFDNUI7QUFDQSxpRUFBZSxPQUFPLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZnZhbHVlLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0dXJmK2NvbmNhdmVANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL2NvbmNhdmUvZGlzdC9lcy9pbmRleC5qcz82ZWIyIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBkaXN0YW5jZSBmcm9tIFwiQHR1cmYvZGlzdGFuY2VcIjtcbmltcG9ydCB7IGZlYXR1cmUsIGZlYXR1cmVDb2xsZWN0aW9uIH0gZnJvbSBcIkB0dXJmL2hlbHBlcnNcIjtcbmltcG9ydCB7IGZlYXR1cmVFYWNoIH0gZnJvbSBcIkB0dXJmL21ldGFcIjtcbmltcG9ydCB0aW4gZnJvbSBcIkB0dXJmL3RpblwiO1xuaW1wb3J0IGRpc3NvbHZlIGZyb20gXCIuL2xpYi90dXJmLWRpc3NvbHZlLmpzXCI7XG4vKipcbiAqIFRha2VzIGEgc2V0IG9mIHtAbGluayBQb2ludHxwb2ludHN9IGFuZCByZXR1cm5zIGEgY29uY2F2ZSBodWxsIFBvbHlnb24gb3IgTXVsdGlQb2x5Z29uLlxuICogSW50ZXJuYWxseSwgdGhpcyB1c2VzIFt0dXJmLXRpbl0oaHR0cHM6Ly9naXRodWIuY29tL1R1cmZqcy90dXJmLXRpbikgdG8gZ2VuZXJhdGUgZ2VvbWV0cmllcy5cbiAqXG4gKiBAbmFtZSBjb25jYXZlXG4gKiBAcGFyYW0ge0ZlYXR1cmVDb2xsZWN0aW9uPFBvaW50Pn0gcG9pbnRzIGlucHV0IHBvaW50c1xuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMubWF4RWRnZT1JbmZpbml0eV0gdGhlIGxlbmd0aCAoaW4gJ3VuaXRzJykgb2YgYW4gZWRnZSBuZWNlc3NhcnkgZm9yIHBhcnQgb2YgdGhlXG4gKiBodWxsIHRvIGJlY29tZSBjb25jYXZlLlxuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnVuaXRzPSdraWxvbWV0ZXJzJ10gY2FuIGJlIGRlZ3JlZXMsIHJhZGlhbnMsIG1pbGVzLCBvciBraWxvbWV0ZXJzXG4gKiBAcmV0dXJucyB7RmVhdHVyZTwoUG9seWdvbnxNdWx0aVBvbHlnb24pPnxudWxsfSBhIGNvbmNhdmUgaHVsbCAobnVsbCB2YWx1ZSBpcyByZXR1cm5lZCBpZiB1bmFibGUgdG8gY29tcHV0ZSBodWxsKVxuICogQGV4YW1wbGVcbiAqIHZhciBwb2ludHMgPSB0dXJmLmZlYXR1cmVDb2xsZWN0aW9uKFtcbiAqICAgdHVyZi5wb2ludChbLTYzLjYwMTIyNiwgNDQuNjQyNjQzXSksXG4gKiAgIHR1cmYucG9pbnQoWy02My41OTE0NDIsIDQ0LjY1MTQzNl0pLFxuICogICB0dXJmLnBvaW50KFstNjMuNTgwNzk5LCA0NC42NDg3NDldKSxcbiAqICAgdHVyZi5wb2ludChbLTYzLjU3MzU4OSwgNDQuNjQxNzg4XSksXG4gKiAgIHR1cmYucG9pbnQoWy02My41ODc2NjUsIDQ0LjY0NTMzXSksXG4gKiAgIHR1cmYucG9pbnQoWy02My41OTUyMTgsIDQ0LjY0NzY1XSlcbiAqIF0pO1xuICogdmFyIG9wdGlvbnMgPSB7dW5pdHM6ICdtaWxlcycsIG1heEVkZ2U6IDF9O1xuICpcbiAqIHZhciBodWxsID0gdHVyZi5jb25jYXZlKHBvaW50cywgb3B0aW9ucyk7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW3BvaW50cywgaHVsbF1cbiAqL1xuZnVuY3Rpb24gY29uY2F2ZShwb2ludHMsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciBtYXhFZGdlID0gb3B0aW9ucy5tYXhFZGdlIHx8IEluZmluaXR5O1xuICAgIHZhciBjbGVhbmVkID0gcmVtb3ZlRHVwbGljYXRlcyhwb2ludHMpO1xuICAgIHZhciB0aW5Qb2x5cyA9IHRpbihjbGVhbmVkKTtcbiAgICAvLyBjYWxjdWxhdGUgbGVuZ3RoIG9mIGFsbCBlZGdlcyBhbmQgYXJlYSBvZiBhbGwgdHJpYW5nbGVzXG4gICAgLy8gYW5kIHJlbW92ZSB0cmlhbmdsZXMgdGhhdCBmYWlsIHRoZSBtYXggbGVuZ3RoIHRlc3RcbiAgICB0aW5Qb2x5cy5mZWF0dXJlcyA9IHRpblBvbHlzLmZlYXR1cmVzLmZpbHRlcihmdW5jdGlvbiAodHJpYW5nbGUpIHtcbiAgICAgICAgdmFyIHB0MSA9IHRyaWFuZ2xlLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdWzBdO1xuICAgICAgICB2YXIgcHQyID0gdHJpYW5nbGUuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF1bMV07XG4gICAgICAgIHZhciBwdDMgPSB0cmlhbmdsZS5nZW9tZXRyeS5jb29yZGluYXRlc1swXVsyXTtcbiAgICAgICAgdmFyIGRpc3QxID0gZGlzdGFuY2UocHQxLCBwdDIsIG9wdGlvbnMpO1xuICAgICAgICB2YXIgZGlzdDIgPSBkaXN0YW5jZShwdDIsIHB0Mywgb3B0aW9ucyk7XG4gICAgICAgIHZhciBkaXN0MyA9IGRpc3RhbmNlKHB0MSwgcHQzLCBvcHRpb25zKTtcbiAgICAgICAgcmV0dXJuIGRpc3QxIDw9IG1heEVkZ2UgJiYgZGlzdDIgPD0gbWF4RWRnZSAmJiBkaXN0MyA8PSBtYXhFZGdlO1xuICAgIH0pO1xuICAgIGlmICh0aW5Qb2x5cy5mZWF0dXJlcy5sZW5ndGggPCAxKSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICAvLyBtZXJnZSB0aGUgYWRqYWNlbnQgdHJpYW5nbGVzXG4gICAgdmFyIGRpc3NvbHZlZCA9IGRpc3NvbHZlKHRpblBvbHlzKTtcbiAgICAvLyBnZW9qc29uLWRpc3NvbHZlIGFsd2F5cyByZXR1cm5zIGEgTXVsdGlQb2x5Z29uXG4gICAgaWYgKGRpc3NvbHZlZC5jb29yZGluYXRlcy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgZGlzc29sdmVkLmNvb3JkaW5hdGVzID0gZGlzc29sdmVkLmNvb3JkaW5hdGVzWzBdO1xuICAgICAgICBkaXNzb2x2ZWQudHlwZSA9IFwiUG9seWdvblwiO1xuICAgIH1cbiAgICByZXR1cm4gZmVhdHVyZShkaXNzb2x2ZWQpO1xufVxuLyoqXG4gKiBSZW1vdmVzIGR1cGxpY2F0ZWQgcG9pbnRzIGluIGEgY29sbGVjdGlvbiByZXR1cm5pbmcgYSBuZXcgY29sbGVjdGlvblxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0ZlYXR1cmVDb2xsZWN0aW9uPFBvaW50Pn0gcG9pbnRzIHRvIGJlIGNsZWFuZWRcbiAqIEByZXR1cm5zIHtGZWF0dXJlQ29sbGVjdGlvbjxQb2ludD59IGNsZWFuZWQgc2V0IG9mIHBvaW50c1xuICovXG5mdW5jdGlvbiByZW1vdmVEdXBsaWNhdGVzKHBvaW50cykge1xuICAgIHZhciBjbGVhbmVkID0gW107XG4gICAgdmFyIGV4aXN0aW5nID0ge307XG4gICAgZmVhdHVyZUVhY2gocG9pbnRzLCBmdW5jdGlvbiAocHQpIHtcbiAgICAgICAgaWYgKCFwdC5nZW9tZXRyeSkge1xuICAgICAgICAgICAgcmV0dXJuO1xuICAgICAgICB9XG4gICAgICAgIHZhciBrZXkgPSBwdC5nZW9tZXRyeS5jb29yZGluYXRlcy5qb2luKFwiLVwiKTtcbiAgICAgICAgaWYgKCFPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoZXhpc3RpbmcsIGtleSkpIHtcbiAgICAgICAgICAgIGNsZWFuZWQucHVzaChwdCk7XG4gICAgICAgICAgICBleGlzdGluZ1trZXldID0gdHJ1ZTtcbiAgICAgICAgfVxuICAgIH0pO1xuICAgIHJldHVybiBmZWF0dXJlQ29sbGVjdGlvbihjbGVhbmVkKTtcbn1cbmV4cG9ydCBkZWZhdWx0IGNvbmNhdmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-dissolve.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-dissolve.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_clone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/clone */ \"(ssr)/./node_modules/.pnpm/@turf+clone@6.5.0/node_modules/@turf/clone/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var _turf_line_dissolve_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./turf-line-dissolve.js */ \"(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-line-dissolve.js\");\n/* harmony import */ var _turf_polygon_dissolve_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./turf-polygon-dissolve.js */ \"(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-polygon-dissolve.js\");\n\n\n\n\n\n\n/**\n * Transform function: attempts to dissolve geojson objects where possible\n * [GeoJSON] -> GeoJSON geometry\n *\n * @private\n * @param {FeatureCollection<LineString|MultiLineString|Polygon|MultiPolygon>} geojson Features to dissolved\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<MultiLineString|MultiPolygon>} Dissolved Features\n */\nfunction dissolve(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Optional parameters\n    options = options || {};\n    if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.isObject)(options)) {\n        throw new Error(\"options is invalid\");\n    }\n    var mutate = options.mutate;\n    // Validation\n    if ((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getType)(geojson) !== \"FeatureCollection\") {\n        throw new Error(\"geojson must be a FeatureCollection\");\n    }\n    if (!geojson.features.length) {\n        throw new Error(\"geojson is empty\");\n    }\n    // Clone geojson to avoid side effects\n    // Topojson modifies in place, so we need to deep clone first\n    if (mutate === false || mutate === undefined) {\n        geojson = (0,_turf_clone__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(geojson);\n    }\n    // Assert homogenity\n    var type = getHomogenousType(geojson);\n    if (!type) {\n        throw new Error(\"geojson must be homogenous\");\n    }\n    // Data => Typescript hack\n    var data = geojson;\n    switch (type) {\n        case \"LineString\":\n            return (0,_turf_line_dissolve_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"])(data, options);\n        case \"Polygon\":\n            return (0,_turf_polygon_dissolve_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"])(data, options);\n        default:\n            throw new Error(type + \" is not supported\");\n    }\n}\n/**\n * Checks if GeoJSON is Homogenous\n *\n * @private\n * @param {GeoJSON} geojson GeoJSON\n * @returns {string|null} Homogenous type or null if multiple types\n */\nfunction getHomogenousType(geojson) {\n    var types = {};\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.flattenEach)(geojson, function (feature) {\n        types[feature.geometry.type] = true;\n    });\n    var keys = Object.keys(types);\n    if (keys.length === 1) {\n        return keys[0];\n    }\n    return null;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dissolve);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY29uY2F2ZUA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvY29uY2F2ZS9kaXN0L2VzL2xpYi90dXJmLWRpc3NvbHZlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7QUFBZ0M7QUFDUztBQUNDO0FBQ0Q7QUFDVTtBQUNNO0FBQ3pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLG9FQUFvRTtBQUMvRSxXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFNBQVM7QUFDcEIsYUFBYSx1Q0FBdUM7QUFDcEQ7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0EsU0FBUyx1REFBUTtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVEsd0RBQU87QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVEQUFLO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLGtFQUFZO0FBQy9CO0FBQ0EsbUJBQW1CLHFFQUFlO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsYUFBYSxhQUFhO0FBQzFCO0FBQ0E7QUFDQTtBQUNBLElBQUksdURBQVc7QUFDZjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBZSxRQUFRLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZnZhbHVlLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0dXJmK2NvbmNhdmVANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL2NvbmNhdmUvZGlzdC9lcy9saWIvdHVyZi1kaXNzb2x2ZS5qcz82OGI5Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbG9uZSBmcm9tIFwiQHR1cmYvY2xvbmVcIjtcbmltcG9ydCB7IGlzT2JqZWN0IH0gZnJvbSBcIkB0dXJmL2hlbHBlcnNcIjtcbmltcG9ydCB7IGdldFR5cGUgfSBmcm9tIFwiQHR1cmYvaW52YXJpYW50XCI7XG5pbXBvcnQgeyBmbGF0dGVuRWFjaCB9IGZyb20gXCJAdHVyZi9tZXRhXCI7XG5pbXBvcnQgbGluZURpc3NvbHZlIGZyb20gXCIuL3R1cmYtbGluZS1kaXNzb2x2ZS5qc1wiO1xuaW1wb3J0IHBvbHlnb25EaXNzb2x2ZSBmcm9tIFwiLi90dXJmLXBvbHlnb24tZGlzc29sdmUuanNcIjtcbi8qKlxuICogVHJhbnNmb3JtIGZ1bmN0aW9uOiBhdHRlbXB0cyB0byBkaXNzb2x2ZSBnZW9qc29uIG9iamVjdHMgd2hlcmUgcG9zc2libGVcbiAqIFtHZW9KU09OXSAtPiBHZW9KU09OIGdlb21ldHJ5XG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RmVhdHVyZUNvbGxlY3Rpb248TGluZVN0cmluZ3xNdWx0aUxpbmVTdHJpbmd8UG9seWdvbnxNdWx0aVBvbHlnb24+fSBnZW9qc29uIEZlYXR1cmVzIHRvIGRpc3NvbHZlZFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLm11dGF0ZT1mYWxzZV0gUHJldmVudCBpbnB1dCBtdXRhdGlvblxuICogQHJldHVybnMge0ZlYXR1cmU8TXVsdGlMaW5lU3RyaW5nfE11bHRpUG9seWdvbj59IERpc3NvbHZlZCBGZWF0dXJlc1xuICovXG5mdW5jdGlvbiBkaXNzb2x2ZShnZW9qc29uLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICAvLyBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgaWYgKCFpc09iamVjdChvcHRpb25zKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJvcHRpb25zIGlzIGludmFsaWRcIik7XG4gICAgfVxuICAgIHZhciBtdXRhdGUgPSBvcHRpb25zLm11dGF0ZTtcbiAgICAvLyBWYWxpZGF0aW9uXG4gICAgaWYgKGdldFR5cGUoZ2VvanNvbikgIT09IFwiRmVhdHVyZUNvbGxlY3Rpb25cIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZW9qc29uIG11c3QgYmUgYSBGZWF0dXJlQ29sbGVjdGlvblwiKTtcbiAgICB9XG4gICAgaWYgKCFnZW9qc29uLmZlYXR1cmVzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZW9qc29uIGlzIGVtcHR5XCIpO1xuICAgIH1cbiAgICAvLyBDbG9uZSBnZW9qc29uIHRvIGF2b2lkIHNpZGUgZWZmZWN0c1xuICAgIC8vIFRvcG9qc29uIG1vZGlmaWVzIGluIHBsYWNlLCBzbyB3ZSBuZWVkIHRvIGRlZXAgY2xvbmUgZmlyc3RcbiAgICBpZiAobXV0YXRlID09PSBmYWxzZSB8fCBtdXRhdGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICBnZW9qc29uID0gY2xvbmUoZ2VvanNvbik7XG4gICAgfVxuICAgIC8vIEFzc2VydCBob21vZ2VuaXR5XG4gICAgdmFyIHR5cGUgPSBnZXRIb21vZ2Vub3VzVHlwZShnZW9qc29uKTtcbiAgICBpZiAoIXR5cGUpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2VvanNvbiBtdXN0IGJlIGhvbW9nZW5vdXNcIik7XG4gICAgfVxuICAgIC8vIERhdGEgPT4gVHlwZXNjcmlwdCBoYWNrXG4gICAgdmFyIGRhdGEgPSBnZW9qc29uO1xuICAgIHN3aXRjaCAodHlwZSkge1xuICAgICAgICBjYXNlIFwiTGluZVN0cmluZ1wiOlxuICAgICAgICAgICAgcmV0dXJuIGxpbmVEaXNzb2x2ZShkYXRhLCBvcHRpb25zKTtcbiAgICAgICAgY2FzZSBcIlBvbHlnb25cIjpcbiAgICAgICAgICAgIHJldHVybiBwb2x5Z29uRGlzc29sdmUoZGF0YSwgb3B0aW9ucyk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IodHlwZSArIFwiIGlzIG5vdCBzdXBwb3J0ZWRcIik7XG4gICAgfVxufVxuLyoqXG4gKiBDaGVja3MgaWYgR2VvSlNPTiBpcyBIb21vZ2Vub3VzXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7R2VvSlNPTn0gZ2VvanNvbiBHZW9KU09OXG4gKiBAcmV0dXJucyB7c3RyaW5nfG51bGx9IEhvbW9nZW5vdXMgdHlwZSBvciBudWxsIGlmIG11bHRpcGxlIHR5cGVzXG4gKi9cbmZ1bmN0aW9uIGdldEhvbW9nZW5vdXNUeXBlKGdlb2pzb24pIHtcbiAgICB2YXIgdHlwZXMgPSB7fTtcbiAgICBmbGF0dGVuRWFjaChnZW9qc29uLCBmdW5jdGlvbiAoZmVhdHVyZSkge1xuICAgICAgICB0eXBlc1tmZWF0dXJlLmdlb21ldHJ5LnR5cGVdID0gdHJ1ZTtcbiAgICB9KTtcbiAgICB2YXIga2V5cyA9IE9iamVjdC5rZXlzKHR5cGVzKTtcbiAgICBpZiAoa2V5cy5sZW5ndGggPT09IDEpIHtcbiAgICAgICAgcmV0dXJuIGtleXNbMF07XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0IGRlZmF1bHQgZGlzc29sdmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-dissolve.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-line-dissolve.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-line-dissolve.js ***!
  \*************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_clone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/clone */ \"(ssr)/./node_modules/.pnpm/@turf+clone@6.5.0/node_modules/@turf/clone/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n\n\n\n\n/**\n * Merges all connected (non-forking, non-junctioning) line strings into single lineStrings.\n * [LineString] -> LineString|MultiLineString\n *\n * @param {FeatureCollection<LineString|MultiLineString>} geojson Lines to dissolve\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<LineString|MultiLineString>} Dissolved lines\n */\nfunction lineDissolve(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Optional parameters\n    options = options || {};\n    if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.isObject)(options)) {\n        throw new Error(\"options is invalid\");\n    }\n    var mutate = options.mutate;\n    // Validation\n    if ((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getType)(geojson) !== \"FeatureCollection\") {\n        throw new Error(\"geojson must be a FeatureCollection\");\n    }\n    if (!geojson.features.length) {\n        throw new Error(\"geojson is empty\");\n    }\n    // Clone geojson to avoid side effects\n    if (mutate === false || mutate === undefined) {\n        geojson = (0,_turf_clone__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(geojson);\n    }\n    var result = [];\n    var lastLine = (0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.lineReduce)(geojson, function (previousLine, currentLine) {\n        // Attempt to merge this LineString with the other LineStrings, updating\n        // the reference as it is merged with others and grows.\n        var merged = mergeLineStrings(previousLine, currentLine);\n        // Accumulate the merged LineString\n        if (merged) {\n            return merged;\n            // Put the unmerged LineString back into the list\n        }\n        else {\n            result.push(previousLine);\n            return currentLine;\n        }\n    });\n    // Append the last line\n    if (lastLine) {\n        result.push(lastLine);\n    }\n    // Return null if no lines were dissolved\n    if (!result.length) {\n        return null;\n        // Return LineString if only 1 line was dissolved\n    }\n    else if (result.length === 1) {\n        return result[0];\n        // Return MultiLineString if multiple lines were dissolved with gaps\n    }\n    else {\n        return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.multiLineString)(result.map(function (line) {\n            return line.coordinates;\n        }));\n    }\n}\n// [Number, Number] -> String\nfunction coordId(coord) {\n    return coord[0].toString() + \",\" + coord[1].toString();\n}\n/**\n * LineString, LineString -> LineString\n *\n * @private\n * @param {Feature<LineString>} a line1\n * @param {Feature<LineString>} b line2\n * @returns {Feature<LineString>|null} Merged LineString\n */\nfunction mergeLineStrings(a, b) {\n    var coords1 = a.geometry.coordinates;\n    var coords2 = b.geometry.coordinates;\n    var s1 = coordId(coords1[0]);\n    var e1 = coordId(coords1[coords1.length - 1]);\n    var s2 = coordId(coords2[0]);\n    var e2 = coordId(coords2[coords2.length - 1]);\n    // TODO: handle case where more than one of these is true!\n    var coords;\n    if (s1 === e2) {\n        coords = coords2.concat(coords1.slice(1));\n    }\n    else if (s2 === e1) {\n        coords = coords1.concat(coords2.slice(1));\n    }\n    else if (s1 === s2) {\n        coords = coords1.slice(1).reverse().concat(coords2);\n    }\n    else if (e1 === e2) {\n        coords = coords1.concat(coords2.reverse().slice(1));\n    }\n    else {\n        return null;\n    }\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.lineString)(coords);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lineDissolve);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY29uY2F2ZUA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvY29uY2F2ZS9kaXN0L2VzL2xpYi90dXJmLWxpbmUtZGlzc29sdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0M7QUFDc0M7QUFDNUI7QUFDRjtBQUN4QztBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsK0NBQStDO0FBQzFELFdBQVcsUUFBUSxXQUFXO0FBQzlCLFdBQVcsU0FBUztBQUNwQixhQUFhLHFDQUFxQztBQUNsRDtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxTQUFTLHVEQUFRO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSx3REFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLHVEQUFLO0FBQ3ZCO0FBQ0E7QUFDQSxtQkFBbUIsc0RBQVU7QUFDN0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLDhEQUFlO0FBQzlCO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEMsV0FBVyxxQkFBcUI7QUFDaEMsYUFBYSwwQkFBMEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHlEQUFVO0FBQ3JCO0FBQ0EsaUVBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitjb25jYXZlQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9jb25jYXZlL2Rpc3QvZXMvbGliL3R1cmYtbGluZS1kaXNzb2x2ZS5qcz84Y2ZmIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbG9uZSBmcm9tIFwiQHR1cmYvY2xvbmVcIjtcbmltcG9ydCB7IGlzT2JqZWN0LCBsaW5lU3RyaW5nLCBtdWx0aUxpbmVTdHJpbmcgfSBmcm9tIFwiQHR1cmYvaGVscGVyc1wiO1xuaW1wb3J0IHsgZ2V0VHlwZSB9IGZyb20gXCJAdHVyZi9pbnZhcmlhbnRcIjtcbmltcG9ydCB7IGxpbmVSZWR1Y2UgfSBmcm9tIFwiQHR1cmYvbWV0YVwiO1xuLyoqXG4gKiBNZXJnZXMgYWxsIGNvbm5lY3RlZCAobm9uLWZvcmtpbmcsIG5vbi1qdW5jdGlvbmluZykgbGluZSBzdHJpbmdzIGludG8gc2luZ2xlIGxpbmVTdHJpbmdzLlxuICogW0xpbmVTdHJpbmddIC0+IExpbmVTdHJpbmd8TXVsdGlMaW5lU3RyaW5nXG4gKlxuICogQHBhcmFtIHtGZWF0dXJlQ29sbGVjdGlvbjxMaW5lU3RyaW5nfE11bHRpTGluZVN0cmluZz59IGdlb2pzb24gTGluZXMgdG8gZGlzc29sdmVcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gT3B0aW9uYWwgcGFyYW1ldGVyc1xuICogQHBhcmFtIHtib29sZWFufSBbb3B0aW9ucy5tdXRhdGU9ZmFsc2VdIFByZXZlbnQgaW5wdXQgbXV0YXRpb25cbiAqIEByZXR1cm5zIHtGZWF0dXJlPExpbmVTdHJpbmd8TXVsdGlMaW5lU3RyaW5nPn0gRGlzc29sdmVkIGxpbmVzXG4gKi9cbmZ1bmN0aW9uIGxpbmVEaXNzb2x2ZShnZW9qc29uLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICAvLyBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gICAgb3B0aW9ucyA9IG9wdGlvbnMgfHwge307XG4gICAgaWYgKCFpc09iamVjdChvcHRpb25zKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJvcHRpb25zIGlzIGludmFsaWRcIik7XG4gICAgfVxuICAgIHZhciBtdXRhdGUgPSBvcHRpb25zLm11dGF0ZTtcbiAgICAvLyBWYWxpZGF0aW9uXG4gICAgaWYgKGdldFR5cGUoZ2VvanNvbikgIT09IFwiRmVhdHVyZUNvbGxlY3Rpb25cIikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZW9qc29uIG11c3QgYmUgYSBGZWF0dXJlQ29sbGVjdGlvblwiKTtcbiAgICB9XG4gICAgaWYgKCFnZW9qc29uLmZlYXR1cmVzLmxlbmd0aCkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJnZW9qc29uIGlzIGVtcHR5XCIpO1xuICAgIH1cbiAgICAvLyBDbG9uZSBnZW9qc29uIHRvIGF2b2lkIHNpZGUgZWZmZWN0c1xuICAgIGlmIChtdXRhdGUgPT09IGZhbHNlIHx8IG11dGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGdlb2pzb24gPSBjbG9uZShnZW9qc29uKTtcbiAgICB9XG4gICAgdmFyIHJlc3VsdCA9IFtdO1xuICAgIHZhciBsYXN0TGluZSA9IGxpbmVSZWR1Y2UoZ2VvanNvbiwgZnVuY3Rpb24gKHByZXZpb3VzTGluZSwgY3VycmVudExpbmUpIHtcbiAgICAgICAgLy8gQXR0ZW1wdCB0byBtZXJnZSB0aGlzIExpbmVTdHJpbmcgd2l0aCB0aGUgb3RoZXIgTGluZVN0cmluZ3MsIHVwZGF0aW5nXG4gICAgICAgIC8vIHRoZSByZWZlcmVuY2UgYXMgaXQgaXMgbWVyZ2VkIHdpdGggb3RoZXJzIGFuZCBncm93cy5cbiAgICAgICAgdmFyIG1lcmdlZCA9IG1lcmdlTGluZVN0cmluZ3MocHJldmlvdXNMaW5lLCBjdXJyZW50TGluZSk7XG4gICAgICAgIC8vIEFjY3VtdWxhdGUgdGhlIG1lcmdlZCBMaW5lU3RyaW5nXG4gICAgICAgIGlmIChtZXJnZWQpIHtcbiAgICAgICAgICAgIHJldHVybiBtZXJnZWQ7XG4gICAgICAgICAgICAvLyBQdXQgdGhlIHVubWVyZ2VkIExpbmVTdHJpbmcgYmFjayBpbnRvIHRoZSBsaXN0XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXN1bHQucHVzaChwcmV2aW91c0xpbmUpO1xuICAgICAgICAgICAgcmV0dXJuIGN1cnJlbnRMaW5lO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgLy8gQXBwZW5kIHRoZSBsYXN0IGxpbmVcbiAgICBpZiAobGFzdExpbmUpIHtcbiAgICAgICAgcmVzdWx0LnB1c2gobGFzdExpbmUpO1xuICAgIH1cbiAgICAvLyBSZXR1cm4gbnVsbCBpZiBubyBsaW5lcyB3ZXJlIGRpc3NvbHZlZFxuICAgIGlmICghcmVzdWx0Lmxlbmd0aCkge1xuICAgICAgICByZXR1cm4gbnVsbDtcbiAgICAgICAgLy8gUmV0dXJuIExpbmVTdHJpbmcgaWYgb25seSAxIGxpbmUgd2FzIGRpc3NvbHZlZFxuICAgIH1cbiAgICBlbHNlIGlmIChyZXN1bHQubGVuZ3RoID09PSAxKSB7XG4gICAgICAgIHJldHVybiByZXN1bHRbMF07XG4gICAgICAgIC8vIFJldHVybiBNdWx0aUxpbmVTdHJpbmcgaWYgbXVsdGlwbGUgbGluZXMgd2VyZSBkaXNzb2x2ZWQgd2l0aCBnYXBzXG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gbXVsdGlMaW5lU3RyaW5nKHJlc3VsdC5tYXAoZnVuY3Rpb24gKGxpbmUpIHtcbiAgICAgICAgICAgIHJldHVybiBsaW5lLmNvb3JkaW5hdGVzO1xuICAgICAgICB9KSk7XG4gICAgfVxufVxuLy8gW051bWJlciwgTnVtYmVyXSAtPiBTdHJpbmdcbmZ1bmN0aW9uIGNvb3JkSWQoY29vcmQpIHtcbiAgICByZXR1cm4gY29vcmRbMF0udG9TdHJpbmcoKSArIFwiLFwiICsgY29vcmRbMV0udG9TdHJpbmcoKTtcbn1cbi8qKlxuICogTGluZVN0cmluZywgTGluZVN0cmluZyAtPiBMaW5lU3RyaW5nXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSB7RmVhdHVyZTxMaW5lU3RyaW5nPn0gYSBsaW5lMVxuICogQHBhcmFtIHtGZWF0dXJlPExpbmVTdHJpbmc+fSBiIGxpbmUyXG4gKiBAcmV0dXJucyB7RmVhdHVyZTxMaW5lU3RyaW5nPnxudWxsfSBNZXJnZWQgTGluZVN0cmluZ1xuICovXG5mdW5jdGlvbiBtZXJnZUxpbmVTdHJpbmdzKGEsIGIpIHtcbiAgICB2YXIgY29vcmRzMSA9IGEuZ2VvbWV0cnkuY29vcmRpbmF0ZXM7XG4gICAgdmFyIGNvb3JkczIgPSBiLmdlb21ldHJ5LmNvb3JkaW5hdGVzO1xuICAgIHZhciBzMSA9IGNvb3JkSWQoY29vcmRzMVswXSk7XG4gICAgdmFyIGUxID0gY29vcmRJZChjb29yZHMxW2Nvb3JkczEubGVuZ3RoIC0gMV0pO1xuICAgIHZhciBzMiA9IGNvb3JkSWQoY29vcmRzMlswXSk7XG4gICAgdmFyIGUyID0gY29vcmRJZChjb29yZHMyW2Nvb3JkczIubGVuZ3RoIC0gMV0pO1xuICAgIC8vIFRPRE86IGhhbmRsZSBjYXNlIHdoZXJlIG1vcmUgdGhhbiBvbmUgb2YgdGhlc2UgaXMgdHJ1ZSFcbiAgICB2YXIgY29vcmRzO1xuICAgIGlmIChzMSA9PT0gZTIpIHtcbiAgICAgICAgY29vcmRzID0gY29vcmRzMi5jb25jYXQoY29vcmRzMS5zbGljZSgxKSk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHMyID09PSBlMSkge1xuICAgICAgICBjb29yZHMgPSBjb29yZHMxLmNvbmNhdChjb29yZHMyLnNsaWNlKDEpKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoczEgPT09IHMyKSB7XG4gICAgICAgIGNvb3JkcyA9IGNvb3JkczEuc2xpY2UoMSkucmV2ZXJzZSgpLmNvbmNhdChjb29yZHMyKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoZTEgPT09IGUyKSB7XG4gICAgICAgIGNvb3JkcyA9IGNvb3JkczEuY29uY2F0KGNvb3JkczIucmV2ZXJzZSgpLnNsaWNlKDEpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBudWxsO1xuICAgIH1cbiAgICByZXR1cm4gbGluZVN0cmluZyhjb29yZHMpO1xufVxuZXhwb3J0IGRlZmF1bHQgbGluZURpc3NvbHZlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-line-dissolve.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-polygon-dissolve.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-polygon-dissolve.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ polygonDissolve)\n/* harmony export */ });\n/* harmony import */ var _turf_clone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/clone */ \"(ssr)/./node_modules/.pnpm/@turf+clone@6.5.0/node_modules/@turf/clone/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var topojson_client__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! topojson-client */ \"(ssr)/./node_modules/.pnpm/topojson-client@3.1.0/node_modules/topojson-client/dist/topojson-client.js\");\n/* harmony import */ var topojson_server__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! topojson-server */ \"(ssr)/./node_modules/.pnpm/topojson-server@3.0.1/node_modules/topojson-server/dist/topojson-server.js\");\n\n\n\n\n\n\n/**\n * Dissolves all overlapping (Multi)Polygon\n *\n * @param {FeatureCollection<Polygon|MultiPolygon>} geojson Polygons to dissolve\n * @param {Object} [options={}] Optional parameters\n * @param {boolean} [options.mutate=false] Prevent input mutation\n * @returns {Feature<Polygon|MultiPolygon>} Dissolved Polygons\n */\nfunction polygonDissolve(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Validation\n    if ((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_2__.getType)(geojson) !== \"FeatureCollection\") {\n        throw new Error(\"geojson must be a FeatureCollection\");\n    }\n    if (!geojson.features.length) {\n        throw new Error(\"geojson is empty\");\n    }\n    // Clone geojson to avoid side effects\n    // Topojson modifies in place, so we need to deep clone first\n    if (options.mutate === false || options.mutate === undefined) {\n        geojson = (0,_turf_clone__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(geojson);\n    }\n    var geoms = [];\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.flattenEach)(geojson, function (feature) {\n        geoms.push(feature.geometry);\n    });\n    var topo = (0,topojson_server__WEBPACK_IMPORTED_MODULE_5__.topology)({ geoms: (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_1__.geometryCollection)(geoms).geometry });\n    var merged = (0,topojson_client__WEBPACK_IMPORTED_MODULE_4__.merge)(topo, topo.objects.geoms.geometries);\n    return merged;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY29uY2F2ZUA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvY29uY2F2ZS9kaXN0L2VzL2xpYi90dXJmLXBvbHlnb24tZGlzc29sdmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFnQztBQUNtQjtBQUNUO0FBQ0Q7QUFDRDtBQUNHO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLFdBQVcseUNBQXlDO0FBQ3BELFdBQVcsUUFBUSxXQUFXO0FBQzlCLFdBQVcsU0FBUztBQUNwQixhQUFhLCtCQUErQjtBQUM1QztBQUNlO0FBQ2YsOEJBQThCO0FBQzlCO0FBQ0EsUUFBUSx3REFBTztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsdURBQUs7QUFDdkI7QUFDQTtBQUNBLElBQUksdURBQVc7QUFDZjtBQUNBLEtBQUs7QUFDTCxlQUFlLHlEQUFRLEdBQUcsT0FBTyxpRUFBa0Isa0JBQWtCO0FBQ3JFLGlCQUFpQixzREFBSztBQUN0QjtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitjb25jYXZlQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9jb25jYXZlL2Rpc3QvZXMvbGliL3R1cmYtcG9seWdvbi1kaXNzb2x2ZS5qcz9hMGIwIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBjbG9uZSBmcm9tIFwiQHR1cmYvY2xvbmVcIjtcbmltcG9ydCB7IGdlb21ldHJ5Q29sbGVjdGlvbiB9IGZyb20gXCJAdHVyZi9oZWxwZXJzXCI7XG5pbXBvcnQgeyBnZXRUeXBlIH0gZnJvbSBcIkB0dXJmL2ludmFyaWFudFwiO1xuaW1wb3J0IHsgZmxhdHRlbkVhY2ggfSBmcm9tIFwiQHR1cmYvbWV0YVwiO1xuaW1wb3J0IHsgbWVyZ2UgfSBmcm9tIFwidG9wb2pzb24tY2xpZW50XCI7XG5pbXBvcnQgeyB0b3BvbG9neSB9IGZyb20gXCJ0b3BvanNvbi1zZXJ2ZXJcIjtcbi8qKlxuICogRGlzc29sdmVzIGFsbCBvdmVybGFwcGluZyAoTXVsdGkpUG9seWdvblxuICpcbiAqIEBwYXJhbSB7RmVhdHVyZUNvbGxlY3Rpb248UG9seWdvbnxNdWx0aVBvbHlnb24+fSBnZW9qc29uIFBvbHlnb25zIHRvIGRpc3NvbHZlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIE9wdGlvbmFsIHBhcmFtZXRlcnNcbiAqIEBwYXJhbSB7Ym9vbGVhbn0gW29wdGlvbnMubXV0YXRlPWZhbHNlXSBQcmV2ZW50IGlucHV0IG11dGF0aW9uXG4gKiBAcmV0dXJucyB7RmVhdHVyZTxQb2x5Z29ufE11bHRpUG9seWdvbj59IERpc3NvbHZlZCBQb2x5Z29uc1xuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwb2x5Z29uRGlzc29sdmUoZ2VvanNvbiwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgLy8gVmFsaWRhdGlvblxuICAgIGlmIChnZXRUeXBlKGdlb2pzb24pICE9PSBcIkZlYXR1cmVDb2xsZWN0aW9uXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2VvanNvbiBtdXN0IGJlIGEgRmVhdHVyZUNvbGxlY3Rpb25cIik7XG4gICAgfVxuICAgIGlmICghZ2VvanNvbi5mZWF0dXJlcy5sZW5ndGgpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiZ2VvanNvbiBpcyBlbXB0eVwiKTtcbiAgICB9XG4gICAgLy8gQ2xvbmUgZ2VvanNvbiB0byBhdm9pZCBzaWRlIGVmZmVjdHNcbiAgICAvLyBUb3BvanNvbiBtb2RpZmllcyBpbiBwbGFjZSwgc28gd2UgbmVlZCB0byBkZWVwIGNsb25lIGZpcnN0XG4gICAgaWYgKG9wdGlvbnMubXV0YXRlID09PSBmYWxzZSB8fCBvcHRpb25zLm11dGF0ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGdlb2pzb24gPSBjbG9uZShnZW9qc29uKTtcbiAgICB9XG4gICAgdmFyIGdlb21zID0gW107XG4gICAgZmxhdHRlbkVhY2goZ2VvanNvbiwgZnVuY3Rpb24gKGZlYXR1cmUpIHtcbiAgICAgICAgZ2VvbXMucHVzaChmZWF0dXJlLmdlb21ldHJ5KTtcbiAgICB9KTtcbiAgICB2YXIgdG9wbyA9IHRvcG9sb2d5KHsgZ2VvbXM6IGdlb21ldHJ5Q29sbGVjdGlvbihnZW9tcykuZ2VvbWV0cnkgfSk7XG4gICAgdmFyIG1lcmdlZCA9IG1lcmdlKHRvcG8sIHRvcG8ub2JqZWN0cy5nZW9tcy5nZW9tZXRyaWVzKTtcbiAgICByZXR1cm4gbWVyZ2VkO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+concave@6.5.0/node_modules/@turf/concave/dist/es/lib/turf-polygon-dissolve.js\n");

/***/ })

};
;