"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+line-intersect@6.5.0";
exports.ids = ["vendor-chunks/@turf+line-intersect@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+line-intersect@6.5.0/node_modules/@turf/line-intersect/dist/es/index.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+line-intersect@6.5.0/node_modules/@turf/line-intersect/dist/es/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n/* harmony import */ var _turf_line_segment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/line-segment */ \"(ssr)/./node_modules/.pnpm/@turf+line-segment@6.5.0/node_modules/@turf/line-segment/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var geojson_rbush__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! geojson-rbush */ \"(ssr)/./node_modules/.pnpm/geojson-rbush@3.2.0/node_modules/geojson-rbush/index.js\");\n\n\n\n\n\n/**\n * Takes any LineString or Polygon GeoJSON and returns the intersecting point(s).\n *\n * @name lineIntersect\n * @param {GeoJSON} line1 any LineString or Polygon\n * @param {GeoJSON} line2 any LineString or Polygon\n * @returns {FeatureCollection<Point>} point(s) that intersect both\n * @example\n * var line1 = turf.lineString([[126, -11], [129, -21]]);\n * var line2 = turf.lineString([[123, -18], [131, -14]]);\n * var intersects = turf.lineIntersect(line1, line2);\n *\n * //addToMap\n * var addToMap = [line1, line2, intersects]\n */\nfunction lineIntersect(line1, line2) {\n    var unique = {};\n    var results = [];\n    // First, normalize geometries to features\n    // Then, handle simple 2-vertex segments\n    if (line1.type === \"LineString\") {\n        line1 = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.feature)(line1);\n    }\n    if (line2.type === \"LineString\") {\n        line2 = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.feature)(line2);\n    }\n    if (line1.type === \"Feature\" &&\n        line2.type === \"Feature\" &&\n        line1.geometry !== null &&\n        line2.geometry !== null &&\n        line1.geometry.type === \"LineString\" &&\n        line2.geometry.type === \"LineString\" &&\n        line1.geometry.coordinates.length === 2 &&\n        line2.geometry.coordinates.length === 2) {\n        var intersect = intersects(line1, line2);\n        if (intersect) {\n            results.push(intersect);\n        }\n        return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection)(results);\n    }\n    // Handles complex GeoJSON Geometries\n    var tree = geojson_rbush__WEBPACK_IMPORTED_MODULE_4__();\n    tree.load((0,_turf_line_segment__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(line2));\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.featureEach)((0,_turf_line_segment__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(line1), function (segment) {\n        (0,_turf_meta__WEBPACK_IMPORTED_MODULE_3__.featureEach)(tree.search(segment), function (match) {\n            var intersect = intersects(segment, match);\n            if (intersect) {\n                // prevent duplicate points https://github.com/Turfjs/turf/issues/688\n                var key = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(intersect).join(\",\");\n                if (!unique[key]) {\n                    unique[key] = true;\n                    results.push(intersect);\n                }\n            }\n        });\n    });\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.featureCollection)(results);\n}\n/**\n * Find a point that intersects LineStrings with two coordinates each\n *\n * @private\n * @param {Feature<LineString>} line1 GeoJSON LineString (Must only contain 2 coordinates)\n * @param {Feature<LineString>} line2 GeoJSON LineString (Must only contain 2 coordinates)\n * @returns {Feature<Point>} intersecting GeoJSON Point\n */\nfunction intersects(line1, line2) {\n    var coords1 = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(line1);\n    var coords2 = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoords)(line2);\n    if (coords1.length !== 2) {\n        throw new Error(\"<intersects> line1 must only contain 2 coordinates\");\n    }\n    if (coords2.length !== 2) {\n        throw new Error(\"<intersects> line2 must only contain 2 coordinates\");\n    }\n    var x1 = coords1[0][0];\n    var y1 = coords1[0][1];\n    var x2 = coords1[1][0];\n    var y2 = coords1[1][1];\n    var x3 = coords2[0][0];\n    var y3 = coords2[0][1];\n    var x4 = coords2[1][0];\n    var y4 = coords2[1][1];\n    var denom = (y4 - y3) * (x2 - x1) - (x4 - x3) * (y2 - y1);\n    var numeA = (x4 - x3) * (y1 - y3) - (y4 - y3) * (x1 - x3);\n    var numeB = (x2 - x1) * (y1 - y3) - (y2 - y1) * (x1 - x3);\n    if (denom === 0) {\n        if (numeA === 0 && numeB === 0) {\n            return null;\n        }\n        return null;\n    }\n    var uA = numeA / denom;\n    var uB = numeB / denom;\n    if (uA >= 0 && uA <= 1 && uB >= 0 && uB <= 1) {\n        var x = x1 + uA * (x2 - x1);\n        var y = y1 + uA * (y2 - y1);\n        return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)([x, y]);\n    }\n    return null;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (lineIntersect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrbGluZS1pbnRlcnNlY3RANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL2xpbmUtaW50ZXJzZWN0L2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1FO0FBQ3ZCO0FBQ0M7QUFDSjtBQUNQO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxTQUFTO0FBQ3BCLFdBQVcsU0FBUztBQUNwQixhQUFhLDBCQUEwQjtBQUN2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLHNEQUFPO0FBQ3ZCO0FBQ0E7QUFDQSxnQkFBZ0Isc0RBQU87QUFDdkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdFQUFpQjtBQUNoQztBQUNBO0FBQ0EsZUFBZSwwQ0FBSztBQUNwQixjQUFjLDhEQUFXO0FBQ3pCLElBQUksdURBQVcsQ0FBQyw4REFBVztBQUMzQixRQUFRLHVEQUFXO0FBQ25CO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwREFBUztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNULEtBQUs7QUFDTCxXQUFXLGdFQUFpQjtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxxQkFBcUI7QUFDaEMsV0FBVyxxQkFBcUI7QUFDaEMsYUFBYSxnQkFBZ0I7QUFDN0I7QUFDQTtBQUNBLGtCQUFrQiwwREFBUztBQUMzQixrQkFBa0IsMERBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLG9EQUFLO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGFBQWEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21mdmFsdWUtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrbGluZS1pbnRlcnNlY3RANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL2xpbmUtaW50ZXJzZWN0L2Rpc3QvZXMvaW5kZXguanM/ZWNiYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBmZWF0dXJlLCBmZWF0dXJlQ29sbGVjdGlvbiwgcG9pbnQsIH0gZnJvbSBcIkB0dXJmL2hlbHBlcnNcIjtcbmltcG9ydCB7IGdldENvb3JkcyB9IGZyb20gXCJAdHVyZi9pbnZhcmlhbnRcIjtcbmltcG9ydCBsaW5lU2VnbWVudCBmcm9tIFwiQHR1cmYvbGluZS1zZWdtZW50XCI7XG5pbXBvcnQgeyBmZWF0dXJlRWFjaCB9IGZyb20gXCJAdHVyZi9tZXRhXCI7XG5pbXBvcnQgcmJ1c2ggZnJvbSBcImdlb2pzb24tcmJ1c2hcIjtcbi8qKlxuICogVGFrZXMgYW55IExpbmVTdHJpbmcgb3IgUG9seWdvbiBHZW9KU09OIGFuZCByZXR1cm5zIHRoZSBpbnRlcnNlY3RpbmcgcG9pbnQocykuXG4gKlxuICogQG5hbWUgbGluZUludGVyc2VjdFxuICogQHBhcmFtIHtHZW9KU09OfSBsaW5lMSBhbnkgTGluZVN0cmluZyBvciBQb2x5Z29uXG4gKiBAcGFyYW0ge0dlb0pTT059IGxpbmUyIGFueSBMaW5lU3RyaW5nIG9yIFBvbHlnb25cbiAqIEByZXR1cm5zIHtGZWF0dXJlQ29sbGVjdGlvbjxQb2ludD59IHBvaW50KHMpIHRoYXQgaW50ZXJzZWN0IGJvdGhcbiAqIEBleGFtcGxlXG4gKiB2YXIgbGluZTEgPSB0dXJmLmxpbmVTdHJpbmcoW1sxMjYsIC0xMV0sIFsxMjksIC0yMV1dKTtcbiAqIHZhciBsaW5lMiA9IHR1cmYubGluZVN0cmluZyhbWzEyMywgLTE4XSwgWzEzMSwgLTE0XV0pO1xuICogdmFyIGludGVyc2VjdHMgPSB0dXJmLmxpbmVJbnRlcnNlY3QobGluZTEsIGxpbmUyKTtcbiAqXG4gKiAvL2FkZFRvTWFwXG4gKiB2YXIgYWRkVG9NYXAgPSBbbGluZTEsIGxpbmUyLCBpbnRlcnNlY3RzXVxuICovXG5mdW5jdGlvbiBsaW5lSW50ZXJzZWN0KGxpbmUxLCBsaW5lMikge1xuICAgIHZhciB1bmlxdWUgPSB7fTtcbiAgICB2YXIgcmVzdWx0cyA9IFtdO1xuICAgIC8vIEZpcnN0LCBub3JtYWxpemUgZ2VvbWV0cmllcyB0byBmZWF0dXJlc1xuICAgIC8vIFRoZW4sIGhhbmRsZSBzaW1wbGUgMi12ZXJ0ZXggc2VnbWVudHNcbiAgICBpZiAobGluZTEudHlwZSA9PT0gXCJMaW5lU3RyaW5nXCIpIHtcbiAgICAgICAgbGluZTEgPSBmZWF0dXJlKGxpbmUxKTtcbiAgICB9XG4gICAgaWYgKGxpbmUyLnR5cGUgPT09IFwiTGluZVN0cmluZ1wiKSB7XG4gICAgICAgIGxpbmUyID0gZmVhdHVyZShsaW5lMik7XG4gICAgfVxuICAgIGlmIChsaW5lMS50eXBlID09PSBcIkZlYXR1cmVcIiAmJlxuICAgICAgICBsaW5lMi50eXBlID09PSBcIkZlYXR1cmVcIiAmJlxuICAgICAgICBsaW5lMS5nZW9tZXRyeSAhPT0gbnVsbCAmJlxuICAgICAgICBsaW5lMi5nZW9tZXRyeSAhPT0gbnVsbCAmJlxuICAgICAgICBsaW5lMS5nZW9tZXRyeS50eXBlID09PSBcIkxpbmVTdHJpbmdcIiAmJlxuICAgICAgICBsaW5lMi5nZW9tZXRyeS50eXBlID09PSBcIkxpbmVTdHJpbmdcIiAmJlxuICAgICAgICBsaW5lMS5nZW9tZXRyeS5jb29yZGluYXRlcy5sZW5ndGggPT09IDIgJiZcbiAgICAgICAgbGluZTIuZ2VvbWV0cnkuY29vcmRpbmF0ZXMubGVuZ3RoID09PSAyKSB7XG4gICAgICAgIHZhciBpbnRlcnNlY3QgPSBpbnRlcnNlY3RzKGxpbmUxLCBsaW5lMik7XG4gICAgICAgIGlmIChpbnRlcnNlY3QpIHtcbiAgICAgICAgICAgIHJlc3VsdHMucHVzaChpbnRlcnNlY3QpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmZWF0dXJlQ29sbGVjdGlvbihyZXN1bHRzKTtcbiAgICB9XG4gICAgLy8gSGFuZGxlcyBjb21wbGV4IEdlb0pTT04gR2VvbWV0cmllc1xuICAgIHZhciB0cmVlID0gcmJ1c2goKTtcbiAgICB0cmVlLmxvYWQobGluZVNlZ21lbnQobGluZTIpKTtcbiAgICBmZWF0dXJlRWFjaChsaW5lU2VnbWVudChsaW5lMSksIGZ1bmN0aW9uIChzZWdtZW50KSB7XG4gICAgICAgIGZlYXR1cmVFYWNoKHRyZWUuc2VhcmNoKHNlZ21lbnQpLCBmdW5jdGlvbiAobWF0Y2gpIHtcbiAgICAgICAgICAgIHZhciBpbnRlcnNlY3QgPSBpbnRlcnNlY3RzKHNlZ21lbnQsIG1hdGNoKTtcbiAgICAgICAgICAgIGlmIChpbnRlcnNlY3QpIHtcbiAgICAgICAgICAgICAgICAvLyBwcmV2ZW50IGR1cGxpY2F0ZSBwb2ludHMgaHR0cHM6Ly9naXRodWIuY29tL1R1cmZqcy90dXJmL2lzc3Vlcy82ODhcbiAgICAgICAgICAgICAgICB2YXIga2V5ID0gZ2V0Q29vcmRzKGludGVyc2VjdCkuam9pbihcIixcIik7XG4gICAgICAgICAgICAgICAgaWYgKCF1bmlxdWVba2V5XSkge1xuICAgICAgICAgICAgICAgICAgICB1bmlxdWVba2V5XSA9IHRydWU7XG4gICAgICAgICAgICAgICAgICAgIHJlc3VsdHMucHVzaChpbnRlcnNlY3QpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfSk7XG4gICAgcmV0dXJuIGZlYXR1cmVDb2xsZWN0aW9uKHJlc3VsdHMpO1xufVxuLyoqXG4gKiBGaW5kIGEgcG9pbnQgdGhhdCBpbnRlcnNlY3RzIExpbmVTdHJpbmdzIHdpdGggdHdvIGNvb3JkaW5hdGVzIGVhY2hcbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtGZWF0dXJlPExpbmVTdHJpbmc+fSBsaW5lMSBHZW9KU09OIExpbmVTdHJpbmcgKE11c3Qgb25seSBjb250YWluIDIgY29vcmRpbmF0ZXMpXG4gKiBAcGFyYW0ge0ZlYXR1cmU8TGluZVN0cmluZz59IGxpbmUyIEdlb0pTT04gTGluZVN0cmluZyAoTXVzdCBvbmx5IGNvbnRhaW4gMiBjb29yZGluYXRlcylcbiAqIEByZXR1cm5zIHtGZWF0dXJlPFBvaW50Pn0gaW50ZXJzZWN0aW5nIEdlb0pTT04gUG9pbnRcbiAqL1xuZnVuY3Rpb24gaW50ZXJzZWN0cyhsaW5lMSwgbGluZTIpIHtcbiAgICB2YXIgY29vcmRzMSA9IGdldENvb3JkcyhsaW5lMSk7XG4gICAgdmFyIGNvb3JkczIgPSBnZXRDb29yZHMobGluZTIpO1xuICAgIGlmIChjb29yZHMxLmxlbmd0aCAhPT0gMikge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCI8aW50ZXJzZWN0cz4gbGluZTEgbXVzdCBvbmx5IGNvbnRhaW4gMiBjb29yZGluYXRlc1wiKTtcbiAgICB9XG4gICAgaWYgKGNvb3JkczIubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIjxpbnRlcnNlY3RzPiBsaW5lMiBtdXN0IG9ubHkgY29udGFpbiAyIGNvb3JkaW5hdGVzXCIpO1xuICAgIH1cbiAgICB2YXIgeDEgPSBjb29yZHMxWzBdWzBdO1xuICAgIHZhciB5MSA9IGNvb3JkczFbMF1bMV07XG4gICAgdmFyIHgyID0gY29vcmRzMVsxXVswXTtcbiAgICB2YXIgeTIgPSBjb29yZHMxWzFdWzFdO1xuICAgIHZhciB4MyA9IGNvb3JkczJbMF1bMF07XG4gICAgdmFyIHkzID0gY29vcmRzMlswXVsxXTtcbiAgICB2YXIgeDQgPSBjb29yZHMyWzFdWzBdO1xuICAgIHZhciB5NCA9IGNvb3JkczJbMV1bMV07XG4gICAgdmFyIGRlbm9tID0gKHk0IC0geTMpICogKHgyIC0geDEpIC0gKHg0IC0geDMpICogKHkyIC0geTEpO1xuICAgIHZhciBudW1lQSA9ICh4NCAtIHgzKSAqICh5MSAtIHkzKSAtICh5NCAtIHkzKSAqICh4MSAtIHgzKTtcbiAgICB2YXIgbnVtZUIgPSAoeDIgLSB4MSkgKiAoeTEgLSB5MykgLSAoeTIgLSB5MSkgKiAoeDEgLSB4Myk7XG4gICAgaWYgKGRlbm9tID09PSAwKSB7XG4gICAgICAgIGlmIChudW1lQSA9PT0gMCAmJiBudW1lQiA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciB1QSA9IG51bWVBIC8gZGVub207XG4gICAgdmFyIHVCID0gbnVtZUIgLyBkZW5vbTtcbiAgICBpZiAodUEgPj0gMCAmJiB1QSA8PSAxICYmIHVCID49IDAgJiYgdUIgPD0gMSkge1xuICAgICAgICB2YXIgeCA9IHgxICsgdUEgKiAoeDIgLSB4MSk7XG4gICAgICAgIHZhciB5ID0geTEgKyB1QSAqICh5MiAtIHkxKTtcbiAgICAgICAgcmV0dXJuIHBvaW50KFt4LCB5XSk7XG4gICAgfVxuICAgIHJldHVybiBudWxsO1xufVxuZXhwb3J0IGRlZmF1bHQgbGluZUludGVyc2VjdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+line-intersect@6.5.0/node_modules/@turf/line-intersect/dist/es/index.js\n");

/***/ })

};
;