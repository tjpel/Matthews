"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+rectangle-grid@6.5.0";
exports.ids = ["vendor-chunks/@turf+rectangle-grid@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+rectangle-grid@6.5.0/node_modules/@turf/rectangle-grid/dist/es/index.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+rectangle-grid@6.5.0/node_modules/@turf/rectangle-grid/dist/es/index.js ***!
  \**********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_boolean_intersects__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/boolean-intersects */ \"(ssr)/./node_modules/.pnpm/@turf+boolean-intersects@6.5.0/node_modules/@turf/boolean-intersects/dist/es/index.js\");\n/* harmony import */ var _turf_distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/distance */ \"(ssr)/./node_modules/.pnpm/@turf+distance@6.5.0/node_modules/@turf/distance/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n\n\n\n/**\n * Creates a grid of rectangles from a bounding box, {@link Feature} or {@link FeatureCollection}.\n *\n * @name rectangleGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellWidth of each cell, in units\n * @param {number} cellHeight of each cell, in units\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] units (\"degrees\", \"radians\", \"miles\", \"kilometers\") that the given cellWidth\n * and cellHeight are expressed in. Converted at the southern border.\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon,\n * the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Polygon>} a grid of polygons\n * @example\n * var bbox = [-95, 30 ,-85, 40];\n * var cellWidth = 50;\n * var cellHeight = 20;\n * var options = {units: 'miles'};\n *\n * var rectangleGrid = turf.rectangleGrid(bbox, cellWidth, cellHeight, options);\n *\n * //addToMap\n * var addToMap = [rectangleGrid]\n */\nfunction rectangleGrid(bbox, cellWidth, cellHeight, options) {\n    if (options === void 0) { options = {}; }\n    // Containers\n    var results = [];\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n    var xFraction = cellWidth / (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([west, south], [east, south], options);\n    var cellWidthDeg = xFraction * (east - west);\n    var yFraction = cellHeight / (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([west, south], [west, north], options);\n    var cellHeightDeg = yFraction * (north - south);\n    // rows & columns\n    var bboxWidth = east - west;\n    var bboxHeight = north - south;\n    var columns = Math.floor(bboxWidth / cellWidthDeg);\n    var rows = Math.floor(bboxHeight / cellHeightDeg);\n    // if the grid does not fill the bbox perfectly, center it.\n    var deltaX = (bboxWidth - columns * cellWidthDeg) / 2;\n    var deltaY = (bboxHeight - rows * cellHeightDeg) / 2;\n    // iterate over columns & rows\n    var currentX = west + deltaX;\n    for (var column = 0; column < columns; column++) {\n        var currentY = south + deltaY;\n        for (var row = 0; row < rows; row++) {\n            var cellPoly = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.polygon)([\n                [\n                    [currentX, currentY],\n                    [currentX, currentY + cellHeightDeg],\n                    [currentX + cellWidthDeg, currentY + cellHeightDeg],\n                    [currentX + cellWidthDeg, currentY],\n                    [currentX, currentY],\n                ],\n            ], options.properties);\n            if (options.mask) {\n                if ((0,_turf_boolean_intersects__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(options.mask, cellPoly)) {\n                    results.push(cellPoly);\n                }\n            }\n            else {\n                results.push(cellPoly);\n            }\n            currentY += cellHeightDeg;\n        }\n        currentX += cellWidthDeg;\n    }\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.featureCollection)(results);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rectangleGrid);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrcmVjdGFuZ2xlLWdyaWRANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL3JlY3RhbmdsZS1ncmlkL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRDtBQUNYO0FBQ3NCO0FBQzVEO0FBQ0Esc0RBQXNELGVBQWUsSUFBSSx3QkFBd0I7QUFDakc7QUFDQTtBQUNBLFdBQVcsZUFBZTtBQUMxQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUSxXQUFXO0FBQzlCLFdBQVcsUUFBUTtBQUNuQjtBQUNBLFdBQVcsK0JBQStCO0FBQzFDO0FBQ0EsV0FBVyxRQUFRLHNCQUFzQjtBQUN6QyxhQUFhLDRCQUE0QjtBQUN6QztBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsMERBQVE7QUFDeEM7QUFDQSxpQ0FBaUMsMERBQVE7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlCQUF5QixrQkFBa0I7QUFDM0M7QUFDQSwwQkFBMEIsWUFBWTtBQUN0QywyQkFBMkIsc0RBQU87QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLG9FQUFTO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxnRUFBaUI7QUFDNUI7QUFDQSxpRUFBZSxhQUFhLEVBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9tZnZhbHVlLWZyb250ZW5kLy4vbm9kZV9tb2R1bGVzLy5wbnBtL0B0dXJmK3JlY3RhbmdsZS1ncmlkQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9yZWN0YW5nbGUtZ3JpZC9kaXN0L2VzL2luZGV4LmpzPzg5ZGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGludGVyc2VjdCBmcm9tIFwiQHR1cmYvYm9vbGVhbi1pbnRlcnNlY3RzXCI7XG5pbXBvcnQgZGlzdGFuY2UgZnJvbSBcIkB0dXJmL2Rpc3RhbmNlXCI7XG5pbXBvcnQgeyBmZWF0dXJlQ29sbGVjdGlvbiwgcG9seWdvbiwgfSBmcm9tIFwiQHR1cmYvaGVscGVyc1wiO1xuLyoqXG4gKiBDcmVhdGVzIGEgZ3JpZCBvZiByZWN0YW5nbGVzIGZyb20gYSBib3VuZGluZyBib3gsIHtAbGluayBGZWF0dXJlfSBvciB7QGxpbmsgRmVhdHVyZUNvbGxlY3Rpb259LlxuICpcbiAqIEBuYW1lIHJlY3RhbmdsZUdyaWRcbiAqIEBwYXJhbSB7QXJyYXk8bnVtYmVyPn0gYmJveCBleHRlbnQgaW4gW21pblgsIG1pblksIG1heFgsIG1heFldIG9yZGVyXG4gKiBAcGFyYW0ge251bWJlcn0gY2VsbFdpZHRoIG9mIGVhY2ggY2VsbCwgaW4gdW5pdHNcbiAqIEBwYXJhbSB7bnVtYmVyfSBjZWxsSGVpZ2h0IG9mIGVhY2ggY2VsbCwgaW4gdW5pdHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gT3B0aW9uYWwgcGFyYW1ldGVyc1xuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnVuaXRzPSdraWxvbWV0ZXJzJ10gdW5pdHMgKFwiZGVncmVlc1wiLCBcInJhZGlhbnNcIiwgXCJtaWxlc1wiLCBcImtpbG9tZXRlcnNcIikgdGhhdCB0aGUgZ2l2ZW4gY2VsbFdpZHRoXG4gKiBhbmQgY2VsbEhlaWdodCBhcmUgZXhwcmVzc2VkIGluLiBDb252ZXJ0ZWQgYXQgdGhlIHNvdXRoZXJuIGJvcmRlci5cbiAqIEBwYXJhbSB7RmVhdHVyZTxQb2x5Z29ufE11bHRpUG9seWdvbj59IFtvcHRpb25zLm1hc2tdIGlmIHBhc3NlZCBhIFBvbHlnb24gb3IgTXVsdGlQb2x5Z29uLFxuICogdGhlIGdyaWQgUG9pbnRzIHdpbGwgYmUgY3JlYXRlZCBvbmx5IGluc2lkZSBpdFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLnByb3BlcnRpZXM9e31dIHBhc3NlZCB0byBlYWNoIHBvaW50IG9mIHRoZSBncmlkXG4gKiBAcmV0dXJucyB7RmVhdHVyZUNvbGxlY3Rpb248UG9seWdvbj59IGEgZ3JpZCBvZiBwb2x5Z29uc1xuICogQGV4YW1wbGVcbiAqIHZhciBiYm94ID0gWy05NSwgMzAgLC04NSwgNDBdO1xuICogdmFyIGNlbGxXaWR0aCA9IDUwO1xuICogdmFyIGNlbGxIZWlnaHQgPSAyMDtcbiAqIHZhciBvcHRpb25zID0ge3VuaXRzOiAnbWlsZXMnfTtcbiAqXG4gKiB2YXIgcmVjdGFuZ2xlR3JpZCA9IHR1cmYucmVjdGFuZ2xlR3JpZChiYm94LCBjZWxsV2lkdGgsIGNlbGxIZWlnaHQsIG9wdGlvbnMpO1xuICpcbiAqIC8vYWRkVG9NYXBcbiAqIHZhciBhZGRUb01hcCA9IFtyZWN0YW5nbGVHcmlkXVxuICovXG5mdW5jdGlvbiByZWN0YW5nbGVHcmlkKGJib3gsIGNlbGxXaWR0aCwgY2VsbEhlaWdodCwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgLy8gQ29udGFpbmVyc1xuICAgIHZhciByZXN1bHRzID0gW107XG4gICAgdmFyIHdlc3QgPSBiYm94WzBdO1xuICAgIHZhciBzb3V0aCA9IGJib3hbMV07XG4gICAgdmFyIGVhc3QgPSBiYm94WzJdO1xuICAgIHZhciBub3J0aCA9IGJib3hbM107XG4gICAgdmFyIHhGcmFjdGlvbiA9IGNlbGxXaWR0aCAvIGRpc3RhbmNlKFt3ZXN0LCBzb3V0aF0sIFtlYXN0LCBzb3V0aF0sIG9wdGlvbnMpO1xuICAgIHZhciBjZWxsV2lkdGhEZWcgPSB4RnJhY3Rpb24gKiAoZWFzdCAtIHdlc3QpO1xuICAgIHZhciB5RnJhY3Rpb24gPSBjZWxsSGVpZ2h0IC8gZGlzdGFuY2UoW3dlc3QsIHNvdXRoXSwgW3dlc3QsIG5vcnRoXSwgb3B0aW9ucyk7XG4gICAgdmFyIGNlbGxIZWlnaHREZWcgPSB5RnJhY3Rpb24gKiAobm9ydGggLSBzb3V0aCk7XG4gICAgLy8gcm93cyAmIGNvbHVtbnNcbiAgICB2YXIgYmJveFdpZHRoID0gZWFzdCAtIHdlc3Q7XG4gICAgdmFyIGJib3hIZWlnaHQgPSBub3J0aCAtIHNvdXRoO1xuICAgIHZhciBjb2x1bW5zID0gTWF0aC5mbG9vcihiYm94V2lkdGggLyBjZWxsV2lkdGhEZWcpO1xuICAgIHZhciByb3dzID0gTWF0aC5mbG9vcihiYm94SGVpZ2h0IC8gY2VsbEhlaWdodERlZyk7XG4gICAgLy8gaWYgdGhlIGdyaWQgZG9lcyBub3QgZmlsbCB0aGUgYmJveCBwZXJmZWN0bHksIGNlbnRlciBpdC5cbiAgICB2YXIgZGVsdGFYID0gKGJib3hXaWR0aCAtIGNvbHVtbnMgKiBjZWxsV2lkdGhEZWcpIC8gMjtcbiAgICB2YXIgZGVsdGFZID0gKGJib3hIZWlnaHQgLSByb3dzICogY2VsbEhlaWdodERlZykgLyAyO1xuICAgIC8vIGl0ZXJhdGUgb3ZlciBjb2x1bW5zICYgcm93c1xuICAgIHZhciBjdXJyZW50WCA9IHdlc3QgKyBkZWx0YVg7XG4gICAgZm9yICh2YXIgY29sdW1uID0gMDsgY29sdW1uIDwgY29sdW1uczsgY29sdW1uKyspIHtcbiAgICAgICAgdmFyIGN1cnJlbnRZID0gc291dGggKyBkZWx0YVk7XG4gICAgICAgIGZvciAodmFyIHJvdyA9IDA7IHJvdyA8IHJvd3M7IHJvdysrKSB7XG4gICAgICAgICAgICB2YXIgY2VsbFBvbHkgPSBwb2x5Z29uKFtcbiAgICAgICAgICAgICAgICBbXG4gICAgICAgICAgICAgICAgICAgIFtjdXJyZW50WCwgY3VycmVudFldLFxuICAgICAgICAgICAgICAgICAgICBbY3VycmVudFgsIGN1cnJlbnRZICsgY2VsbEhlaWdodERlZ10sXG4gICAgICAgICAgICAgICAgICAgIFtjdXJyZW50WCArIGNlbGxXaWR0aERlZywgY3VycmVudFkgKyBjZWxsSGVpZ2h0RGVnXSxcbiAgICAgICAgICAgICAgICAgICAgW2N1cnJlbnRYICsgY2VsbFdpZHRoRGVnLCBjdXJyZW50WV0sXG4gICAgICAgICAgICAgICAgICAgIFtjdXJyZW50WCwgY3VycmVudFldLFxuICAgICAgICAgICAgICAgIF0sXG4gICAgICAgICAgICBdLCBvcHRpb25zLnByb3BlcnRpZXMpO1xuICAgICAgICAgICAgaWYgKG9wdGlvbnMubWFzaykge1xuICAgICAgICAgICAgICAgIGlmIChpbnRlcnNlY3Qob3B0aW9ucy5tYXNrLCBjZWxsUG9seSkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGNlbGxQb2x5KTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goY2VsbFBvbHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgY3VycmVudFkgKz0gY2VsbEhlaWdodERlZztcbiAgICAgICAgfVxuICAgICAgICBjdXJyZW50WCArPSBjZWxsV2lkdGhEZWc7XG4gICAgfVxuICAgIHJldHVybiBmZWF0dXJlQ29sbGVjdGlvbihyZXN1bHRzKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHJlY3RhbmdsZUdyaWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+rectangle-grid@6.5.0/node_modules/@turf/rectangle-grid/dist/es/index.js\n");

/***/ })

};
;