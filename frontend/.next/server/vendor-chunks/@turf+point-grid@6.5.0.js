"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+point-grid@6.5.0";
exports.ids = ["vendor-chunks/@turf+point-grid@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+point-grid@6.5.0/node_modules/@turf/point-grid/dist/es/index.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+point-grid@6.5.0/node_modules/@turf/point-grid/dist/es/index.js ***!
  \**************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_boolean_within__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/boolean-within */ \"(ssr)/./node_modules/.pnpm/@turf+boolean-within@6.5.0/node_modules/@turf/boolean-within/dist/es/index.js\");\n/* harmony import */ var _turf_distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/distance */ \"(ssr)/./node_modules/.pnpm/@turf+distance@6.5.0/node_modules/@turf/distance/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n\n\n\n/**\n * Creates a {@link Point} grid from a bounding box, {@link FeatureCollection} or {@link Feature}.\n *\n * @name pointGrid\n * @param {Array<number>} bbox extent in [minX, minY, maxX, maxY] order\n * @param {number} cellSide the distance between points, in units\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] used in calculating cellSide, can be degrees, radians, miles, or kilometers\n * @param {Feature<Polygon|MultiPolygon>} [options.mask] if passed a Polygon or MultiPolygon, the grid Points will be created only inside it\n * @param {Object} [options.properties={}] passed to each point of the grid\n * @returns {FeatureCollection<Point>} grid of points\n * @example\n * var extent = [-70.823364, -33.553984, -70.473175, -33.302986];\n * var cellSide = 3;\n * var options = {units: 'miles'};\n *\n * var grid = turf.pointGrid(extent, cellSide, options);\n *\n * //addToMap\n * var addToMap = [grid];\n */\nfunction pointGrid(bbox, cellSide, options) {\n    if (options === void 0) { options = {}; }\n    // Default parameters\n    if (options.mask && !options.units)\n        options.units = \"kilometers\";\n    // Containers\n    var results = [];\n    // Typescript handles the Type Validation\n    // if (cellSide === null || cellSide === undefined) throw new Error('cellSide is required');\n    // if (!isNumber(cellSide)) throw new Error('cellSide is invalid');\n    // if (!bbox) throw new Error('bbox is required');\n    // if (!Array.isArray(bbox)) throw new Error('bbox must be array');\n    // if (bbox.length !== 4) throw new Error('bbox must contain 4 numbers');\n    // if (mask && ['Polygon', 'MultiPolygon'].indexOf(getType(mask)) === -1) throw new Error('options.mask must be a (Multi)Polygon');\n    var west = bbox[0];\n    var south = bbox[1];\n    var east = bbox[2];\n    var north = bbox[3];\n    var xFraction = cellSide / (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([west, south], [east, south], options);\n    var cellWidth = xFraction * (east - west);\n    var yFraction = cellSide / (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([west, south], [west, north], options);\n    var cellHeight = yFraction * (north - south);\n    var bboxWidth = east - west;\n    var bboxHeight = north - south;\n    var columns = Math.floor(bboxWidth / cellWidth);\n    var rows = Math.floor(bboxHeight / cellHeight);\n    // adjust origin of the grid\n    var deltaX = (bboxWidth - columns * cellWidth) / 2;\n    var deltaY = (bboxHeight - rows * cellHeight) / 2;\n    var currentX = west + deltaX;\n    while (currentX <= east) {\n        var currentY = south + deltaY;\n        while (currentY <= north) {\n            var cellPt = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.point)([currentX, currentY], options.properties);\n            if (options.mask) {\n                if ((0,_turf_boolean_within__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(cellPt, options.mask))\n                    results.push(cellPt);\n            }\n            else {\n                results.push(cellPt);\n            }\n            currentY += cellHeight;\n        }\n        currentX += cellWidth;\n    }\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_2__.featureCollection)(results);\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pointGrid);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrcG9pbnQtZ3JpZEA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvcG9pbnQtZ3JpZC9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBMEM7QUFDSjtBQUNvQjtBQUMxRDtBQUNBLGNBQWMsYUFBYSwyQkFBMkIseUJBQXlCLElBQUksY0FBYztBQUNqRztBQUNBO0FBQ0EsV0FBVyxlQUFlO0FBQzFCLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFFBQVE7QUFDbkIsV0FBVywrQkFBK0I7QUFDMUMsV0FBVyxRQUFRLHNCQUFzQjtBQUN6QyxhQUFhLDBCQUEwQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQkFBK0IsMERBQVE7QUFDdkM7QUFDQSwrQkFBK0IsMERBQVE7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLG9EQUFLO0FBQzlCO0FBQ0Esb0JBQW9CLGdFQUFNO0FBQzFCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsZ0VBQWlCO0FBQzVCO0FBQ0EsaUVBQWUsU0FBUyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitwb2ludC1ncmlkQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9wb2ludC1ncmlkL2Rpc3QvZXMvaW5kZXguanM/YmZmYiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgd2l0aGluIGZyb20gXCJAdHVyZi9ib29sZWFuLXdpdGhpblwiO1xuaW1wb3J0IGRpc3RhbmNlIGZyb20gXCJAdHVyZi9kaXN0YW5jZVwiO1xuaW1wb3J0IHsgcG9pbnQsIGZlYXR1cmVDb2xsZWN0aW9uLCB9IGZyb20gXCJAdHVyZi9oZWxwZXJzXCI7XG4vKipcbiAqIENyZWF0ZXMgYSB7QGxpbmsgUG9pbnR9IGdyaWQgZnJvbSBhIGJvdW5kaW5nIGJveCwge0BsaW5rIEZlYXR1cmVDb2xsZWN0aW9ufSBvciB7QGxpbmsgRmVhdHVyZX0uXG4gKlxuICogQG5hbWUgcG9pbnRHcmlkXG4gKiBAcGFyYW0ge0FycmF5PG51bWJlcj59IGJib3ggZXh0ZW50IGluIFttaW5YLCBtaW5ZLCBtYXhYLCBtYXhZXSBvcmRlclxuICogQHBhcmFtIHtudW1iZXJ9IGNlbGxTaWRlIHRoZSBkaXN0YW5jZSBiZXR3ZWVuIHBvaW50cywgaW4gdW5pdHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucz17fV0gT3B0aW9uYWwgcGFyYW1ldGVyc1xuICogQHBhcmFtIHtzdHJpbmd9IFtvcHRpb25zLnVuaXRzPSdraWxvbWV0ZXJzJ10gdXNlZCBpbiBjYWxjdWxhdGluZyBjZWxsU2lkZSwgY2FuIGJlIGRlZ3JlZXMsIHJhZGlhbnMsIG1pbGVzLCBvciBraWxvbWV0ZXJzXG4gKiBAcGFyYW0ge0ZlYXR1cmU8UG9seWdvbnxNdWx0aVBvbHlnb24+fSBbb3B0aW9ucy5tYXNrXSBpZiBwYXNzZWQgYSBQb2x5Z29uIG9yIE11bHRpUG9seWdvbiwgdGhlIGdyaWQgUG9pbnRzIHdpbGwgYmUgY3JlYXRlZCBvbmx5IGluc2lkZSBpdFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLnByb3BlcnRpZXM9e31dIHBhc3NlZCB0byBlYWNoIHBvaW50IG9mIHRoZSBncmlkXG4gKiBAcmV0dXJucyB7RmVhdHVyZUNvbGxlY3Rpb248UG9pbnQ+fSBncmlkIG9mIHBvaW50c1xuICogQGV4YW1wbGVcbiAqIHZhciBleHRlbnQgPSBbLTcwLjgyMzM2NCwgLTMzLjU1Mzk4NCwgLTcwLjQ3MzE3NSwgLTMzLjMwMjk4Nl07XG4gKiB2YXIgY2VsbFNpZGUgPSAzO1xuICogdmFyIG9wdGlvbnMgPSB7dW5pdHM6ICdtaWxlcyd9O1xuICpcbiAqIHZhciBncmlkID0gdHVyZi5wb2ludEdyaWQoZXh0ZW50LCBjZWxsU2lkZSwgb3B0aW9ucyk7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW2dyaWRdO1xuICovXG5mdW5jdGlvbiBwb2ludEdyaWQoYmJveCwgY2VsbFNpZGUsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIC8vIERlZmF1bHQgcGFyYW1ldGVyc1xuICAgIGlmIChvcHRpb25zLm1hc2sgJiYgIW9wdGlvbnMudW5pdHMpXG4gICAgICAgIG9wdGlvbnMudW5pdHMgPSBcImtpbG9tZXRlcnNcIjtcbiAgICAvLyBDb250YWluZXJzXG4gICAgdmFyIHJlc3VsdHMgPSBbXTtcbiAgICAvLyBUeXBlc2NyaXB0IGhhbmRsZXMgdGhlIFR5cGUgVmFsaWRhdGlvblxuICAgIC8vIGlmIChjZWxsU2lkZSA9PT0gbnVsbCB8fCBjZWxsU2lkZSA9PT0gdW5kZWZpbmVkKSB0aHJvdyBuZXcgRXJyb3IoJ2NlbGxTaWRlIGlzIHJlcXVpcmVkJyk7XG4gICAgLy8gaWYgKCFpc051bWJlcihjZWxsU2lkZSkpIHRocm93IG5ldyBFcnJvcignY2VsbFNpZGUgaXMgaW52YWxpZCcpO1xuICAgIC8vIGlmICghYmJveCkgdGhyb3cgbmV3IEVycm9yKCdiYm94IGlzIHJlcXVpcmVkJyk7XG4gICAgLy8gaWYgKCFBcnJheS5pc0FycmF5KGJib3gpKSB0aHJvdyBuZXcgRXJyb3IoJ2Jib3ggbXVzdCBiZSBhcnJheScpO1xuICAgIC8vIGlmIChiYm94Lmxlbmd0aCAhPT0gNCkgdGhyb3cgbmV3IEVycm9yKCdiYm94IG11c3QgY29udGFpbiA0IG51bWJlcnMnKTtcbiAgICAvLyBpZiAobWFzayAmJiBbJ1BvbHlnb24nLCAnTXVsdGlQb2x5Z29uJ10uaW5kZXhPZihnZXRUeXBlKG1hc2spKSA9PT0gLTEpIHRocm93IG5ldyBFcnJvcignb3B0aW9ucy5tYXNrIG11c3QgYmUgYSAoTXVsdGkpUG9seWdvbicpO1xuICAgIHZhciB3ZXN0ID0gYmJveFswXTtcbiAgICB2YXIgc291dGggPSBiYm94WzFdO1xuICAgIHZhciBlYXN0ID0gYmJveFsyXTtcbiAgICB2YXIgbm9ydGggPSBiYm94WzNdO1xuICAgIHZhciB4RnJhY3Rpb24gPSBjZWxsU2lkZSAvIGRpc3RhbmNlKFt3ZXN0LCBzb3V0aF0sIFtlYXN0LCBzb3V0aF0sIG9wdGlvbnMpO1xuICAgIHZhciBjZWxsV2lkdGggPSB4RnJhY3Rpb24gKiAoZWFzdCAtIHdlc3QpO1xuICAgIHZhciB5RnJhY3Rpb24gPSBjZWxsU2lkZSAvIGRpc3RhbmNlKFt3ZXN0LCBzb3V0aF0sIFt3ZXN0LCBub3J0aF0sIG9wdGlvbnMpO1xuICAgIHZhciBjZWxsSGVpZ2h0ID0geUZyYWN0aW9uICogKG5vcnRoIC0gc291dGgpO1xuICAgIHZhciBiYm94V2lkdGggPSBlYXN0IC0gd2VzdDtcbiAgICB2YXIgYmJveEhlaWdodCA9IG5vcnRoIC0gc291dGg7XG4gICAgdmFyIGNvbHVtbnMgPSBNYXRoLmZsb29yKGJib3hXaWR0aCAvIGNlbGxXaWR0aCk7XG4gICAgdmFyIHJvd3MgPSBNYXRoLmZsb29yKGJib3hIZWlnaHQgLyBjZWxsSGVpZ2h0KTtcbiAgICAvLyBhZGp1c3Qgb3JpZ2luIG9mIHRoZSBncmlkXG4gICAgdmFyIGRlbHRhWCA9IChiYm94V2lkdGggLSBjb2x1bW5zICogY2VsbFdpZHRoKSAvIDI7XG4gICAgdmFyIGRlbHRhWSA9IChiYm94SGVpZ2h0IC0gcm93cyAqIGNlbGxIZWlnaHQpIC8gMjtcbiAgICB2YXIgY3VycmVudFggPSB3ZXN0ICsgZGVsdGFYO1xuICAgIHdoaWxlIChjdXJyZW50WCA8PSBlYXN0KSB7XG4gICAgICAgIHZhciBjdXJyZW50WSA9IHNvdXRoICsgZGVsdGFZO1xuICAgICAgICB3aGlsZSAoY3VycmVudFkgPD0gbm9ydGgpIHtcbiAgICAgICAgICAgIHZhciBjZWxsUHQgPSBwb2ludChbY3VycmVudFgsIGN1cnJlbnRZXSwgb3B0aW9ucy5wcm9wZXJ0aWVzKTtcbiAgICAgICAgICAgIGlmIChvcHRpb25zLm1hc2spIHtcbiAgICAgICAgICAgICAgICBpZiAod2l0aGluKGNlbGxQdCwgb3B0aW9ucy5tYXNrKSlcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0cy5wdXNoKGNlbGxQdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXN1bHRzLnB1c2goY2VsbFB0KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGN1cnJlbnRZICs9IGNlbGxIZWlnaHQ7XG4gICAgICAgIH1cbiAgICAgICAgY3VycmVudFggKz0gY2VsbFdpZHRoO1xuICAgIH1cbiAgICByZXR1cm4gZmVhdHVyZUNvbGxlY3Rpb24ocmVzdWx0cyk7XG59XG5leHBvcnQgZGVmYXVsdCBwb2ludEdyaWQ7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+point-grid@6.5.0/node_modules/@turf/point-grid/dist/es/index.js\n");

/***/ })

};
;