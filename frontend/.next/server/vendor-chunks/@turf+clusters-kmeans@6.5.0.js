"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+clusters-kmeans@6.5.0";
exports.ids = ["vendor-chunks/@turf+clusters-kmeans@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+clusters-kmeans@6.5.0/node_modules/@turf/clusters-kmeans/dist/es/index.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+clusters-kmeans@6.5.0/node_modules/@turf/clusters-kmeans/dist/es/index.js ***!
  \************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_clone__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/clone */ \"(ssr)/./node_modules/.pnpm/@turf+clone@6.5.0/node_modules/@turf/clone/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var skmeans__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! skmeans */ \"(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/main.js\");\n\n\n\n/**\n * Takes a set of {@link Point|points} and partition them into clusters using the k-mean .\n * It uses the [k-means algorithm](https://en.wikipedia.org/wiki/K-means_clustering)\n *\n * @name clustersKmeans\n * @param {FeatureCollection<Point>} points to be clustered\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.numberOfClusters=Math.sqrt(numberOfPoints/2)] numberOfClusters that will be generated\n * @param {boolean} [options.mutate=false] allows GeoJSON input to be mutated (significant performance increase if true)\n * @returns {FeatureCollection<Point>} Clustered Points with an additional two properties associated to each Feature:\n * - {number} cluster - the associated clusterId\n * - {[number, number]} centroid - Centroid of the cluster [Longitude, Latitude]\n * @example\n * // create random points with random z-values in their properties\n * var points = turf.randomPoint(100, {bbox: [0, 30, 20, 50]});\n * var options = {numberOfClusters: 7};\n * var clustered = turf.clustersKmeans(points, options);\n *\n * //addToMap\n * var addToMap = [clustered];\n */\nfunction clustersKmeans(points, options) {\n    if (options === void 0) { options = {}; }\n    // Default Params\n    var count = points.features.length;\n    options.numberOfClusters =\n        options.numberOfClusters || Math.round(Math.sqrt(count / 2));\n    // numberOfClusters can't be greater than the number of points\n    // fallbacks to count\n    if (options.numberOfClusters > count)\n        options.numberOfClusters = count;\n    // Clone points to prevent any mutations (enabled by default)\n    if (options.mutate !== true)\n        points = (0,_turf_clone__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(points);\n    // collect points coordinates\n    var data = (0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.coordAll)(points);\n    // create seed to avoid skmeans to drift\n    var initialCentroids = data.slice(0, options.numberOfClusters);\n    // create skmeans clusters\n    var skmeansResult = skmeans__WEBPACK_IMPORTED_MODULE_2__(data, options.numberOfClusters, initialCentroids);\n    // store centroids {clusterId: [number, number]}\n    var centroids = {};\n    skmeansResult.centroids.forEach(function (coord, idx) {\n        centroids[idx] = coord;\n    });\n    // add associated cluster number\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.featureEach)(points, function (point, index) {\n        var clusterId = skmeansResult.idxs[index];\n        point.properties.cluster = clusterId;\n        point.properties.centroid = centroids[clusterId];\n    });\n    return points;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (clustersKmeans);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY2x1c3RlcnMta21lYW5zQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9jbHVzdGVycy1rbWVhbnMvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdDO0FBQ21CO0FBQ3JCO0FBQzlCO0FBQ0EsbUJBQW1CLG9CQUFvQjtBQUN2QztBQUNBO0FBQ0E7QUFDQSxXQUFXLDBCQUEwQjtBQUNyQyxXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxTQUFTO0FBQ3BCLGFBQWEsMEJBQTBCO0FBQ3ZDLE1BQU0sUUFBUTtBQUNkLE1BQU0sa0JBQWtCO0FBQ3hCO0FBQ0E7QUFDQSx1Q0FBdUMsc0JBQXNCO0FBQzdELGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsdURBQUs7QUFDdEI7QUFDQSxlQUFlLG9EQUFRO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixvQ0FBTztBQUMvQix3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsSUFBSSx1REFBVztBQUNmO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsaUVBQWUsY0FBYyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitjbHVzdGVycy1rbWVhbnNANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL2NsdXN0ZXJzLWttZWFucy9kaXN0L2VzL2luZGV4LmpzPzdhNDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGNsb25lIGZyb20gXCJAdHVyZi9jbG9uZVwiO1xuaW1wb3J0IHsgY29vcmRBbGwsIGZlYXR1cmVFYWNoIH0gZnJvbSBcIkB0dXJmL21ldGFcIjtcbmltcG9ydCBza21lYW5zIGZyb20gXCJza21lYW5zXCI7XG4vKipcbiAqIFRha2VzIGEgc2V0IG9mIHtAbGluayBQb2ludHxwb2ludHN9IGFuZCBwYXJ0aXRpb24gdGhlbSBpbnRvIGNsdXN0ZXJzIHVzaW5nIHRoZSBrLW1lYW4gLlxuICogSXQgdXNlcyB0aGUgW2stbWVhbnMgYWxnb3JpdGhtXShodHRwczovL2VuLndpa2lwZWRpYS5vcmcvd2lraS9LLW1lYW5zX2NsdXN0ZXJpbmcpXG4gKlxuICogQG5hbWUgY2x1c3RlcnNLbWVhbnNcbiAqIEBwYXJhbSB7RmVhdHVyZUNvbGxlY3Rpb248UG9pbnQ+fSBwb2ludHMgdG8gYmUgY2x1c3RlcmVkXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIE9wdGlvbmFsIHBhcmFtZXRlcnNcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5udW1iZXJPZkNsdXN0ZXJzPU1hdGguc3FydChudW1iZXJPZlBvaW50cy8yKV0gbnVtYmVyT2ZDbHVzdGVycyB0aGF0IHdpbGwgYmUgZ2VuZXJhdGVkXG4gKiBAcGFyYW0ge2Jvb2xlYW59IFtvcHRpb25zLm11dGF0ZT1mYWxzZV0gYWxsb3dzIEdlb0pTT04gaW5wdXQgdG8gYmUgbXV0YXRlZCAoc2lnbmlmaWNhbnQgcGVyZm9ybWFuY2UgaW5jcmVhc2UgaWYgdHJ1ZSlcbiAqIEByZXR1cm5zIHtGZWF0dXJlQ29sbGVjdGlvbjxQb2ludD59IENsdXN0ZXJlZCBQb2ludHMgd2l0aCBhbiBhZGRpdGlvbmFsIHR3byBwcm9wZXJ0aWVzIGFzc29jaWF0ZWQgdG8gZWFjaCBGZWF0dXJlOlxuICogLSB7bnVtYmVyfSBjbHVzdGVyIC0gdGhlIGFzc29jaWF0ZWQgY2x1c3RlcklkXG4gKiAtIHtbbnVtYmVyLCBudW1iZXJdfSBjZW50cm9pZCAtIENlbnRyb2lkIG9mIHRoZSBjbHVzdGVyIFtMb25naXR1ZGUsIExhdGl0dWRlXVxuICogQGV4YW1wbGVcbiAqIC8vIGNyZWF0ZSByYW5kb20gcG9pbnRzIHdpdGggcmFuZG9tIHotdmFsdWVzIGluIHRoZWlyIHByb3BlcnRpZXNcbiAqIHZhciBwb2ludHMgPSB0dXJmLnJhbmRvbVBvaW50KDEwMCwge2Jib3g6IFswLCAzMCwgMjAsIDUwXX0pO1xuICogdmFyIG9wdGlvbnMgPSB7bnVtYmVyT2ZDbHVzdGVyczogN307XG4gKiB2YXIgY2x1c3RlcmVkID0gdHVyZi5jbHVzdGVyc0ttZWFucyhwb2ludHMsIG9wdGlvbnMpO1xuICpcbiAqIC8vYWRkVG9NYXBcbiAqIHZhciBhZGRUb01hcCA9IFtjbHVzdGVyZWRdO1xuICovXG5mdW5jdGlvbiBjbHVzdGVyc0ttZWFucyhwb2ludHMsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIC8vIERlZmF1bHQgUGFyYW1zXG4gICAgdmFyIGNvdW50ID0gcG9pbnRzLmZlYXR1cmVzLmxlbmd0aDtcbiAgICBvcHRpb25zLm51bWJlck9mQ2x1c3RlcnMgPVxuICAgICAgICBvcHRpb25zLm51bWJlck9mQ2x1c3RlcnMgfHwgTWF0aC5yb3VuZChNYXRoLnNxcnQoY291bnQgLyAyKSk7XG4gICAgLy8gbnVtYmVyT2ZDbHVzdGVycyBjYW4ndCBiZSBncmVhdGVyIHRoYW4gdGhlIG51bWJlciBvZiBwb2ludHNcbiAgICAvLyBmYWxsYmFja3MgdG8gY291bnRcbiAgICBpZiAob3B0aW9ucy5udW1iZXJPZkNsdXN0ZXJzID4gY291bnQpXG4gICAgICAgIG9wdGlvbnMubnVtYmVyT2ZDbHVzdGVycyA9IGNvdW50O1xuICAgIC8vIENsb25lIHBvaW50cyB0byBwcmV2ZW50IGFueSBtdXRhdGlvbnMgKGVuYWJsZWQgYnkgZGVmYXVsdClcbiAgICBpZiAob3B0aW9ucy5tdXRhdGUgIT09IHRydWUpXG4gICAgICAgIHBvaW50cyA9IGNsb25lKHBvaW50cyk7XG4gICAgLy8gY29sbGVjdCBwb2ludHMgY29vcmRpbmF0ZXNcbiAgICB2YXIgZGF0YSA9IGNvb3JkQWxsKHBvaW50cyk7XG4gICAgLy8gY3JlYXRlIHNlZWQgdG8gYXZvaWQgc2ttZWFucyB0byBkcmlmdFxuICAgIHZhciBpbml0aWFsQ2VudHJvaWRzID0gZGF0YS5zbGljZSgwLCBvcHRpb25zLm51bWJlck9mQ2x1c3RlcnMpO1xuICAgIC8vIGNyZWF0ZSBza21lYW5zIGNsdXN0ZXJzXG4gICAgdmFyIHNrbWVhbnNSZXN1bHQgPSBza21lYW5zKGRhdGEsIG9wdGlvbnMubnVtYmVyT2ZDbHVzdGVycywgaW5pdGlhbENlbnRyb2lkcyk7XG4gICAgLy8gc3RvcmUgY2VudHJvaWRzIHtjbHVzdGVySWQ6IFtudW1iZXIsIG51bWJlcl19XG4gICAgdmFyIGNlbnRyb2lkcyA9IHt9O1xuICAgIHNrbWVhbnNSZXN1bHQuY2VudHJvaWRzLmZvckVhY2goZnVuY3Rpb24gKGNvb3JkLCBpZHgpIHtcbiAgICAgICAgY2VudHJvaWRzW2lkeF0gPSBjb29yZDtcbiAgICB9KTtcbiAgICAvLyBhZGQgYXNzb2NpYXRlZCBjbHVzdGVyIG51bWJlclxuICAgIGZlYXR1cmVFYWNoKHBvaW50cywgZnVuY3Rpb24gKHBvaW50LCBpbmRleCkge1xuICAgICAgICB2YXIgY2x1c3RlcklkID0gc2ttZWFuc1Jlc3VsdC5pZHhzW2luZGV4XTtcbiAgICAgICAgcG9pbnQucHJvcGVydGllcy5jbHVzdGVyID0gY2x1c3RlcklkO1xuICAgICAgICBwb2ludC5wcm9wZXJ0aWVzLmNlbnRyb2lkID0gY2VudHJvaWRzW2NsdXN0ZXJJZF07XG4gICAgfSk7XG4gICAgcmV0dXJuIHBvaW50cztcbn1cbmV4cG9ydCBkZWZhdWx0IGNsdXN0ZXJzS21lYW5zO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+clusters-kmeans@6.5.0/node_modules/@turf/clusters-kmeans/dist/es/index.js\n");

/***/ })

};
;