"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+center-median@6.5.0";
exports.ids = ["vendor-chunks/@turf+center-median@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+center-median@6.5.0/node_modules/@turf/center-median/dist/es/index.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+center-median@6.5.0/node_modules/@turf/center-median/dist/es/index.js ***!
  \********************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_center_mean__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/center-mean */ \"(ssr)/./node_modules/.pnpm/@turf+center-mean@6.5.0/node_modules/@turf/center-mean/dist/es/index.js\");\n/* harmony import */ var _turf_distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/distance */ \"(ssr)/./node_modules/.pnpm/@turf+distance@6.5.0/node_modules/@turf/distance/dist/es/index.js\");\n/* harmony import */ var _turf_centroid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/centroid */ \"(ssr)/./node_modules/.pnpm/@turf+centroid@6.5.0/node_modules/@turf/centroid/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n\n\n\n\n\n/**\n * Takes a {@link FeatureCollection} of points and calculates the median center,\n * algorithimically. The median center is understood as the point that is\n * requires the least total travel from all other points.\n *\n * Turfjs has four different functions for calculating the center of a set of\n * data. Each is useful depending on circumstance.\n *\n * `@turf/center` finds the simple center of a dataset, by finding the\n * midpoint between the extents of the data. That is, it divides in half the\n * farthest east and farthest west point as well as the farthest north and\n * farthest south.\n *\n * `@turf/center-of-mass` imagines that the dataset is a sheet of paper.\n * The center of mass is where the sheet would balance on a fingertip.\n *\n * `@turf/center-mean` takes the averages of all the coordinates and\n * produces a value that respects that. Unlike `@turf/center`, it is\n * sensitive to clusters and outliers. It lands in the statistical middle of a\n * dataset, not the geographical. It can also be weighted, meaning certain\n * points are more important than others.\n *\n * `@turf/center-median` takes the mean center and tries to find, iteratively,\n * a new point that requires the least amount of travel from all the points in\n * the dataset. It is not as sensitive to outliers as `@turf/center-mean`, but it is\n * attracted to clustered data. It, too, can be weighted.\n *\n * **Bibliography**\n *\n * Harold W. Kuhn and Robert E. Kuenne, “An Efficient Algorithm for the\n * Numerical Solution of the Generalized Weber Problem in Spatial\n * Economics,” _Journal of Regional Science_ 4, no. 2 (1962): 21–33,\n * doi:{@link https://doi.org/10.1111/j.1467-9787.1962.tb00902.x}.\n *\n * James E. Burt, Gerald M. Barber, and David L. Rigby, _Elementary\n * Statistics for Geographers_, 3rd ed., New York: The Guilford\n * Press, 2009, 150–151.\n *\n * @name centerMedian\n * @param {FeatureCollection<any>} features Any GeoJSON Feature Collection\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.weight] the property name used to weight the center\n * @param {number} [options.tolerance=0.001] the difference in distance between candidate medians at which point the algorighim stops iterating.\n * @param {number} [options.counter=10] how many attempts to find the median, should the tolerance be insufficient.\n * @returns {Feature<Point>} The median center of the collection\n * @example\n * var points = turf.points([[0, 0], [1, 0], [0, 1], [5, 8]]);\n * var medianCenter = turf.centerMedian(points);\n *\n * //addToMap\n * var addToMap = [points, medianCenter]\n */\nfunction centerMedian(features, options) {\n    if (options === void 0) { options = {}; }\n    // Optional params\n    options = options || {};\n    if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isObject)(options))\n        throw new Error(\"options is invalid\");\n    var counter = options.counter || 10;\n    if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isNumber)(counter))\n        throw new Error(\"counter must be a number\");\n    var weightTerm = options.weight;\n    // Calculate mean center:\n    var meanCenter = (0,_turf_center_mean__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(features, { weight: options.weight });\n    // Calculate center of every feature:\n    var centroids = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.featureCollection)([]);\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_4__.featureEach)(features, function (feature) {\n        var _a;\n        centroids.features.push((0,_turf_centroid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(feature, {\n            properties: { weight: (_a = feature.properties) === null || _a === void 0 ? void 0 : _a[weightTerm] },\n        }));\n    });\n    var properties = {\n        tolerance: options.tolerance,\n        medianCandidates: [],\n    };\n    return findMedian(meanCenter.geometry.coordinates, [0, 0], centroids, properties, counter);\n}\n/**\n * Recursive function to find new candidate medians.\n *\n * @private\n * @param {Position} candidateMedian current candidate median\n * @param {Position} previousCandidate the previous candidate median\n * @param {FeatureCollection<Point>} centroids the collection of centroids whose median we are determining\n * @param {number} counter how many attempts to try before quitting.\n * @returns {Feature<Point>} the median center of the dataset.\n */\nfunction findMedian(candidateMedian, previousCandidate, centroids, properties, counter) {\n    var tolerance = properties.tolerance || 0.001;\n    var candidateXsum = 0;\n    var candidateYsum = 0;\n    var kSum = 0;\n    var centroidCount = 0;\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_4__.featureEach)(centroids, function (theCentroid) {\n        var _a;\n        var weightValue = (_a = theCentroid.properties) === null || _a === void 0 ? void 0 : _a.weight;\n        var weight = weightValue === undefined || weightValue === null ? 1 : weightValue;\n        weight = Number(weight);\n        if (!(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.isNumber)(weight))\n            throw new Error(\"weight value must be a number\");\n        if (weight > 0) {\n            centroidCount += 1;\n            var distanceFromCandidate = weight * (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(theCentroid, candidateMedian);\n            if (distanceFromCandidate === 0)\n                distanceFromCandidate = 1;\n            var k = weight / distanceFromCandidate;\n            candidateXsum += theCentroid.geometry.coordinates[0] * k;\n            candidateYsum += theCentroid.geometry.coordinates[1] * k;\n            kSum += k;\n        }\n    });\n    if (centroidCount < 1)\n        throw new Error(\"no features to measure\");\n    var candidateX = candidateXsum / kSum;\n    var candidateY = candidateYsum / kSum;\n    if (centroidCount === 1 ||\n        counter === 0 ||\n        (Math.abs(candidateX - previousCandidate[0]) < tolerance &&\n            Math.abs(candidateY - previousCandidate[1]) < tolerance)) {\n        return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_3__.point)([candidateX, candidateY], {\n            medianCandidates: properties.medianCandidates,\n        });\n    }\n    else {\n        properties.medianCandidates.push([candidateX, candidateY]);\n        return findMedian([candidateX, candidateY], candidateMedian, centroids, properties, counter - 1);\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (centerMedian);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY2VudGVyLW1lZGlhbkA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvY2VudGVyLW1lZGlhbi9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUEyQztBQUNMO0FBQ0E7QUFDd0M7QUFDckM7QUFDekM7QUFDQSxZQUFZLHlCQUF5QjtBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHlEQUF5RDtBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLHdCQUF3QjtBQUNuQyxXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQSxTQUFTLHVEQUFRO0FBQ2pCO0FBQ0E7QUFDQSxTQUFTLHVEQUFRO0FBQ2pCO0FBQ0E7QUFDQTtBQUNBLHFCQUFxQiw2REFBVSxhQUFhLHdCQUF3QjtBQUNwRTtBQUNBLG9CQUFvQixnRUFBaUI7QUFDckMsSUFBSSx1REFBVztBQUNmO0FBQ0EsZ0NBQWdDLDBEQUFRO0FBQ3hDLDBCQUEwQix1RkFBdUY7QUFDakgsU0FBUztBQUNULEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsVUFBVTtBQUNyQixXQUFXLFVBQVU7QUFDckIsV0FBVywwQkFBMEI7QUFDckMsV0FBVyxRQUFRO0FBQ25CLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSSx1REFBVztBQUNmO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsYUFBYSx1REFBUTtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxpREFBaUQsMERBQVE7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsb0RBQUs7QUFDcEI7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUVBQWUsWUFBWSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitjZW50ZXItbWVkaWFuQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9jZW50ZXItbWVkaWFuL2Rpc3QvZXMvaW5kZXguanM/ZWE4NSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgY2VudGVyTWVhbiBmcm9tIFwiQHR1cmYvY2VudGVyLW1lYW5cIjtcbmltcG9ydCBkaXN0YW5jZSBmcm9tIFwiQHR1cmYvZGlzdGFuY2VcIjtcbmltcG9ydCBjZW50cm9pZCBmcm9tIFwiQHR1cmYvY2VudHJvaWRcIjtcbmltcG9ydCB7IGlzTnVtYmVyLCBwb2ludCwgaXNPYmplY3QsIGZlYXR1cmVDb2xsZWN0aW9uLCB9IGZyb20gXCJAdHVyZi9oZWxwZXJzXCI7XG5pbXBvcnQgeyBmZWF0dXJlRWFjaCB9IGZyb20gXCJAdHVyZi9tZXRhXCI7XG4vKipcbiAqIFRha2VzIGEge0BsaW5rIEZlYXR1cmVDb2xsZWN0aW9ufSBvZiBwb2ludHMgYW5kIGNhbGN1bGF0ZXMgdGhlIG1lZGlhbiBjZW50ZXIsXG4gKiBhbGdvcml0aGltaWNhbGx5LiBUaGUgbWVkaWFuIGNlbnRlciBpcyB1bmRlcnN0b29kIGFzIHRoZSBwb2ludCB0aGF0IGlzXG4gKiByZXF1aXJlcyB0aGUgbGVhc3QgdG90YWwgdHJhdmVsIGZyb20gYWxsIG90aGVyIHBvaW50cy5cbiAqXG4gKiBUdXJmanMgaGFzIGZvdXIgZGlmZmVyZW50IGZ1bmN0aW9ucyBmb3IgY2FsY3VsYXRpbmcgdGhlIGNlbnRlciBvZiBhIHNldCBvZlxuICogZGF0YS4gRWFjaCBpcyB1c2VmdWwgZGVwZW5kaW5nIG9uIGNpcmN1bXN0YW5jZS5cbiAqXG4gKiBgQHR1cmYvY2VudGVyYCBmaW5kcyB0aGUgc2ltcGxlIGNlbnRlciBvZiBhIGRhdGFzZXQsIGJ5IGZpbmRpbmcgdGhlXG4gKiBtaWRwb2ludCBiZXR3ZWVuIHRoZSBleHRlbnRzIG9mIHRoZSBkYXRhLiBUaGF0IGlzLCBpdCBkaXZpZGVzIGluIGhhbGYgdGhlXG4gKiBmYXJ0aGVzdCBlYXN0IGFuZCBmYXJ0aGVzdCB3ZXN0IHBvaW50IGFzIHdlbGwgYXMgdGhlIGZhcnRoZXN0IG5vcnRoIGFuZFxuICogZmFydGhlc3Qgc291dGguXG4gKlxuICogYEB0dXJmL2NlbnRlci1vZi1tYXNzYCBpbWFnaW5lcyB0aGF0IHRoZSBkYXRhc2V0IGlzIGEgc2hlZXQgb2YgcGFwZXIuXG4gKiBUaGUgY2VudGVyIG9mIG1hc3MgaXMgd2hlcmUgdGhlIHNoZWV0IHdvdWxkIGJhbGFuY2Ugb24gYSBmaW5nZXJ0aXAuXG4gKlxuICogYEB0dXJmL2NlbnRlci1tZWFuYCB0YWtlcyB0aGUgYXZlcmFnZXMgb2YgYWxsIHRoZSBjb29yZGluYXRlcyBhbmRcbiAqIHByb2R1Y2VzIGEgdmFsdWUgdGhhdCByZXNwZWN0cyB0aGF0LiBVbmxpa2UgYEB0dXJmL2NlbnRlcmAsIGl0IGlzXG4gKiBzZW5zaXRpdmUgdG8gY2x1c3RlcnMgYW5kIG91dGxpZXJzLiBJdCBsYW5kcyBpbiB0aGUgc3RhdGlzdGljYWwgbWlkZGxlIG9mIGFcbiAqIGRhdGFzZXQsIG5vdCB0aGUgZ2VvZ3JhcGhpY2FsLiBJdCBjYW4gYWxzbyBiZSB3ZWlnaHRlZCwgbWVhbmluZyBjZXJ0YWluXG4gKiBwb2ludHMgYXJlIG1vcmUgaW1wb3J0YW50IHRoYW4gb3RoZXJzLlxuICpcbiAqIGBAdHVyZi9jZW50ZXItbWVkaWFuYCB0YWtlcyB0aGUgbWVhbiBjZW50ZXIgYW5kIHRyaWVzIHRvIGZpbmQsIGl0ZXJhdGl2ZWx5LFxuICogYSBuZXcgcG9pbnQgdGhhdCByZXF1aXJlcyB0aGUgbGVhc3QgYW1vdW50IG9mIHRyYXZlbCBmcm9tIGFsbCB0aGUgcG9pbnRzIGluXG4gKiB0aGUgZGF0YXNldC4gSXQgaXMgbm90IGFzIHNlbnNpdGl2ZSB0byBvdXRsaWVycyBhcyBgQHR1cmYvY2VudGVyLW1lYW5gLCBidXQgaXQgaXNcbiAqIGF0dHJhY3RlZCB0byBjbHVzdGVyZWQgZGF0YS4gSXQsIHRvbywgY2FuIGJlIHdlaWdodGVkLlxuICpcbiAqICoqQmlibGlvZ3JhcGh5KipcbiAqXG4gKiBIYXJvbGQgVy4gS3VobiBhbmQgUm9iZXJ0IEUuIEt1ZW5uZSwg4oCcQW4gRWZmaWNpZW50IEFsZ29yaXRobSBmb3IgdGhlXG4gKiBOdW1lcmljYWwgU29sdXRpb24gb2YgdGhlIEdlbmVyYWxpemVkIFdlYmVyIFByb2JsZW0gaW4gU3BhdGlhbFxuICogRWNvbm9taWNzLOKAnSBfSm91cm5hbCBvZiBSZWdpb25hbCBTY2llbmNlXyA0LCBuby4gMiAoMTk2Mik6IDIx4oCTMzMsXG4gKiBkb2k6e0BsaW5rIGh0dHBzOi8vZG9pLm9yZy8xMC4xMTExL2ouMTQ2Ny05Nzg3LjE5NjIudGIwMDkwMi54fS5cbiAqXG4gKiBKYW1lcyBFLiBCdXJ0LCBHZXJhbGQgTS4gQmFyYmVyLCBhbmQgRGF2aWQgTC4gUmlnYnksIF9FbGVtZW50YXJ5XG4gKiBTdGF0aXN0aWNzIGZvciBHZW9ncmFwaGVyc18sIDNyZCBlZC4sIE5ldyBZb3JrOiBUaGUgR3VpbGZvcmRcbiAqIFByZXNzLCAyMDA5LCAxNTDigJMxNTEuXG4gKlxuICogQG5hbWUgY2VudGVyTWVkaWFuXG4gKiBAcGFyYW0ge0ZlYXR1cmVDb2xsZWN0aW9uPGFueT59IGZlYXR1cmVzIEFueSBHZW9KU09OIEZlYXR1cmUgQ29sbGVjdGlvblxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMud2VpZ2h0XSB0aGUgcHJvcGVydHkgbmFtZSB1c2VkIHRvIHdlaWdodCB0aGUgY2VudGVyXG4gKiBAcGFyYW0ge251bWJlcn0gW29wdGlvbnMudG9sZXJhbmNlPTAuMDAxXSB0aGUgZGlmZmVyZW5jZSBpbiBkaXN0YW5jZSBiZXR3ZWVuIGNhbmRpZGF0ZSBtZWRpYW5zIGF0IHdoaWNoIHBvaW50IHRoZSBhbGdvcmlnaGltIHN0b3BzIGl0ZXJhdGluZy5cbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5jb3VudGVyPTEwXSBob3cgbWFueSBhdHRlbXB0cyB0byBmaW5kIHRoZSBtZWRpYW4sIHNob3VsZCB0aGUgdG9sZXJhbmNlIGJlIGluc3VmZmljaWVudC5cbiAqIEByZXR1cm5zIHtGZWF0dXJlPFBvaW50Pn0gVGhlIG1lZGlhbiBjZW50ZXIgb2YgdGhlIGNvbGxlY3Rpb25cbiAqIEBleGFtcGxlXG4gKiB2YXIgcG9pbnRzID0gdHVyZi5wb2ludHMoW1swLCAwXSwgWzEsIDBdLCBbMCwgMV0sIFs1LCA4XV0pO1xuICogdmFyIG1lZGlhbkNlbnRlciA9IHR1cmYuY2VudGVyTWVkaWFuKHBvaW50cyk7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW3BvaW50cywgbWVkaWFuQ2VudGVyXVxuICovXG5mdW5jdGlvbiBjZW50ZXJNZWRpYW4oZmVhdHVyZXMsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIC8vIE9wdGlvbmFsIHBhcmFtc1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIGlmICghaXNPYmplY3Qob3B0aW9ucykpXG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIm9wdGlvbnMgaXMgaW52YWxpZFwiKTtcbiAgICB2YXIgY291bnRlciA9IG9wdGlvbnMuY291bnRlciB8fCAxMDtcbiAgICBpZiAoIWlzTnVtYmVyKGNvdW50ZXIpKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJjb3VudGVyIG11c3QgYmUgYSBudW1iZXJcIik7XG4gICAgdmFyIHdlaWdodFRlcm0gPSBvcHRpb25zLndlaWdodDtcbiAgICAvLyBDYWxjdWxhdGUgbWVhbiBjZW50ZXI6XG4gICAgdmFyIG1lYW5DZW50ZXIgPSBjZW50ZXJNZWFuKGZlYXR1cmVzLCB7IHdlaWdodDogb3B0aW9ucy53ZWlnaHQgfSk7XG4gICAgLy8gQ2FsY3VsYXRlIGNlbnRlciBvZiBldmVyeSBmZWF0dXJlOlxuICAgIHZhciBjZW50cm9pZHMgPSBmZWF0dXJlQ29sbGVjdGlvbihbXSk7XG4gICAgZmVhdHVyZUVhY2goZmVhdHVyZXMsIGZ1bmN0aW9uIChmZWF0dXJlKSB7XG4gICAgICAgIHZhciBfYTtcbiAgICAgICAgY2VudHJvaWRzLmZlYXR1cmVzLnB1c2goY2VudHJvaWQoZmVhdHVyZSwge1xuICAgICAgICAgICAgcHJvcGVydGllczogeyB3ZWlnaHQ6IChfYSA9IGZlYXR1cmUucHJvcGVydGllcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW3dlaWdodFRlcm1dIH0sXG4gICAgICAgIH0pKTtcbiAgICB9KTtcbiAgICB2YXIgcHJvcGVydGllcyA9IHtcbiAgICAgICAgdG9sZXJhbmNlOiBvcHRpb25zLnRvbGVyYW5jZSxcbiAgICAgICAgbWVkaWFuQ2FuZGlkYXRlczogW10sXG4gICAgfTtcbiAgICByZXR1cm4gZmluZE1lZGlhbihtZWFuQ2VudGVyLmdlb21ldHJ5LmNvb3JkaW5hdGVzLCBbMCwgMF0sIGNlbnRyb2lkcywgcHJvcGVydGllcywgY291bnRlcik7XG59XG4vKipcbiAqIFJlY3Vyc2l2ZSBmdW5jdGlvbiB0byBmaW5kIG5ldyBjYW5kaWRhdGUgbWVkaWFucy5cbiAqXG4gKiBAcHJpdmF0ZVxuICogQHBhcmFtIHtQb3NpdGlvbn0gY2FuZGlkYXRlTWVkaWFuIGN1cnJlbnQgY2FuZGlkYXRlIG1lZGlhblxuICogQHBhcmFtIHtQb3NpdGlvbn0gcHJldmlvdXNDYW5kaWRhdGUgdGhlIHByZXZpb3VzIGNhbmRpZGF0ZSBtZWRpYW5cbiAqIEBwYXJhbSB7RmVhdHVyZUNvbGxlY3Rpb248UG9pbnQ+fSBjZW50cm9pZHMgdGhlIGNvbGxlY3Rpb24gb2YgY2VudHJvaWRzIHdob3NlIG1lZGlhbiB3ZSBhcmUgZGV0ZXJtaW5pbmdcbiAqIEBwYXJhbSB7bnVtYmVyfSBjb3VudGVyIGhvdyBtYW55IGF0dGVtcHRzIHRvIHRyeSBiZWZvcmUgcXVpdHRpbmcuXG4gKiBAcmV0dXJucyB7RmVhdHVyZTxQb2ludD59IHRoZSBtZWRpYW4gY2VudGVyIG9mIHRoZSBkYXRhc2V0LlxuICovXG5mdW5jdGlvbiBmaW5kTWVkaWFuKGNhbmRpZGF0ZU1lZGlhbiwgcHJldmlvdXNDYW5kaWRhdGUsIGNlbnRyb2lkcywgcHJvcGVydGllcywgY291bnRlcikge1xuICAgIHZhciB0b2xlcmFuY2UgPSBwcm9wZXJ0aWVzLnRvbGVyYW5jZSB8fCAwLjAwMTtcbiAgICB2YXIgY2FuZGlkYXRlWHN1bSA9IDA7XG4gICAgdmFyIGNhbmRpZGF0ZVlzdW0gPSAwO1xuICAgIHZhciBrU3VtID0gMDtcbiAgICB2YXIgY2VudHJvaWRDb3VudCA9IDA7XG4gICAgZmVhdHVyZUVhY2goY2VudHJvaWRzLCBmdW5jdGlvbiAodGhlQ2VudHJvaWQpIHtcbiAgICAgICAgdmFyIF9hO1xuICAgICAgICB2YXIgd2VpZ2h0VmFsdWUgPSAoX2EgPSB0aGVDZW50cm9pZC5wcm9wZXJ0aWVzKSA9PT0gbnVsbCB8fCBfYSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2Eud2VpZ2h0O1xuICAgICAgICB2YXIgd2VpZ2h0ID0gd2VpZ2h0VmFsdWUgPT09IHVuZGVmaW5lZCB8fCB3ZWlnaHRWYWx1ZSA9PT0gbnVsbCA/IDEgOiB3ZWlnaHRWYWx1ZTtcbiAgICAgICAgd2VpZ2h0ID0gTnVtYmVyKHdlaWdodCk7XG4gICAgICAgIGlmICghaXNOdW1iZXIod2VpZ2h0KSlcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIndlaWdodCB2YWx1ZSBtdXN0IGJlIGEgbnVtYmVyXCIpO1xuICAgICAgICBpZiAod2VpZ2h0ID4gMCkge1xuICAgICAgICAgICAgY2VudHJvaWRDb3VudCArPSAxO1xuICAgICAgICAgICAgdmFyIGRpc3RhbmNlRnJvbUNhbmRpZGF0ZSA9IHdlaWdodCAqIGRpc3RhbmNlKHRoZUNlbnRyb2lkLCBjYW5kaWRhdGVNZWRpYW4pO1xuICAgICAgICAgICAgaWYgKGRpc3RhbmNlRnJvbUNhbmRpZGF0ZSA9PT0gMClcbiAgICAgICAgICAgICAgICBkaXN0YW5jZUZyb21DYW5kaWRhdGUgPSAxO1xuICAgICAgICAgICAgdmFyIGsgPSB3ZWlnaHQgLyBkaXN0YW5jZUZyb21DYW5kaWRhdGU7XG4gICAgICAgICAgICBjYW5kaWRhdGVYc3VtICs9IHRoZUNlbnRyb2lkLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdICogaztcbiAgICAgICAgICAgIGNhbmRpZGF0ZVlzdW0gKz0gdGhlQ2VudHJvaWQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV0gKiBrO1xuICAgICAgICAgICAga1N1bSArPSBrO1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgaWYgKGNlbnRyb2lkQ291bnQgPCAxKVxuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJubyBmZWF0dXJlcyB0byBtZWFzdXJlXCIpO1xuICAgIHZhciBjYW5kaWRhdGVYID0gY2FuZGlkYXRlWHN1bSAvIGtTdW07XG4gICAgdmFyIGNhbmRpZGF0ZVkgPSBjYW5kaWRhdGVZc3VtIC8ga1N1bTtcbiAgICBpZiAoY2VudHJvaWRDb3VudCA9PT0gMSB8fFxuICAgICAgICBjb3VudGVyID09PSAwIHx8XG4gICAgICAgIChNYXRoLmFicyhjYW5kaWRhdGVYIC0gcHJldmlvdXNDYW5kaWRhdGVbMF0pIDwgdG9sZXJhbmNlICYmXG4gICAgICAgICAgICBNYXRoLmFicyhjYW5kaWRhdGVZIC0gcHJldmlvdXNDYW5kaWRhdGVbMV0pIDwgdG9sZXJhbmNlKSkge1xuICAgICAgICByZXR1cm4gcG9pbnQoW2NhbmRpZGF0ZVgsIGNhbmRpZGF0ZVldLCB7XG4gICAgICAgICAgICBtZWRpYW5DYW5kaWRhdGVzOiBwcm9wZXJ0aWVzLm1lZGlhbkNhbmRpZGF0ZXMsXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcHJvcGVydGllcy5tZWRpYW5DYW5kaWRhdGVzLnB1c2goW2NhbmRpZGF0ZVgsIGNhbmRpZGF0ZVldKTtcbiAgICAgICAgcmV0dXJuIGZpbmRNZWRpYW4oW2NhbmRpZGF0ZVgsIGNhbmRpZGF0ZVldLCBjYW5kaWRhdGVNZWRpYW4sIGNlbnRyb2lkcywgcHJvcGVydGllcywgY291bnRlciAtIDEpO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IGNlbnRlck1lZGlhbjtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+center-median@6.5.0/node_modules/@turf/center-median/dist/es/index.js\n");

/***/ })

};
;