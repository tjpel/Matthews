"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+collect@6.5.0";
exports.ids = ["vendor-chunks/@turf+collect@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+collect@6.5.0/node_modules/@turf/collect/dist/es/index.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+collect@6.5.0/node_modules/@turf/collect/dist/es/index.js ***!
  \********************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_bbox__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/bbox */ \"(ssr)/./node_modules/.pnpm/@turf+bbox@6.5.0/node_modules/@turf/bbox/dist/es/index.js\");\n/* harmony import */ var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/boolean-point-in-polygon */ \"(ssr)/./node_modules/.pnpm/@turf+boolean-point-in-polygon@6.5.0/node_modules/@turf/boolean-point-in-polygon/dist/es/index.js\");\n/* harmony import */ var rbush__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rbush */ \"(ssr)/./node_modules/.pnpm/rbush@2.0.2/node_modules/rbush/index.js\");\n\n\n\n/**\n * Merges a specified property from a FeatureCollection of points into a\n * FeatureCollection of polygons. Given an `inProperty` on points and an `outProperty`\n * for polygons, this finds every point that lies within each polygon, collects the\n * `inProperty` values from those points, and adds them as an array to `outProperty`\n * on the polygon.\n *\n * @name collect\n * @param {FeatureCollection<Polygon>} polygons polygons with values on which to aggregate\n * @param {FeatureCollection<Point>} points points to be aggregated\n * @param {string} inProperty property to be nested from\n * @param {string} outProperty property to be nested into\n * @returns {FeatureCollection<Polygon>} polygons with properties listed based on `outField`\n * @example\n * var poly1 = turf.polygon([[[0,0],[10,0],[10,10],[0,10],[0,0]]]);\n * var poly2 = turf.polygon([[[10,0],[20,10],[20,20],[20,0],[10,0]]]);\n * var polyFC = turf.featureCollection([poly1, poly2]);\n * var pt1 = turf.point([5,5], {population: 200});\n * var pt2 = turf.point([1,3], {population: 600});\n * var pt3 = turf.point([14,2], {population: 100});\n * var pt4 = turf.point([13,1], {population: 200});\n * var pt5 = turf.point([19,7], {population: 300});\n * var pointFC = turf.featureCollection([pt1, pt2, pt3, pt4, pt5]);\n * var collected = turf.collect(polyFC, pointFC, 'population', 'values');\n * var values = collected.features[0].properties.values\n * //=values => [200, 600]\n *\n * //addToMap\n * var addToMap = [pointFC, collected]\n */\nfunction collect(polygons, points, inProperty, outProperty) {\n    var rtree = rbush__WEBPACK_IMPORTED_MODULE_2__(6);\n    var treeItems = points.features.map(function (item) {\n        var _a;\n        return {\n            minX: item.geometry.coordinates[0],\n            minY: item.geometry.coordinates[1],\n            maxX: item.geometry.coordinates[0],\n            maxY: item.geometry.coordinates[1],\n            property: (_a = item.properties) === null || _a === void 0 ? void 0 : _a[inProperty],\n        };\n    });\n    rtree.load(treeItems);\n    polygons.features.forEach(function (poly) {\n        if (!poly.properties) {\n            poly.properties = {};\n        }\n        var bbox = (0,_turf_bbox__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(poly);\n        var potentialPoints = rtree.search({\n            minX: bbox[0],\n            minY: bbox[1],\n            maxX: bbox[2],\n            maxY: bbox[3],\n        });\n        var values = [];\n        potentialPoints.forEach(function (pt) {\n            if ((0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_1__[\"default\"])([pt.minX, pt.minY], poly)) {\n                values.push(pt.property);\n            }\n        });\n        poly.properties[outProperty] = values;\n    });\n    return polygons;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (collect);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY29sbGVjdEA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvY29sbGVjdC9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0M7QUFDaUM7QUFDekM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsNEJBQTRCO0FBQ3ZDLFdBQVcsMEJBQTBCO0FBQ3JDLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVE7QUFDbkIsYUFBYSw0QkFBNEI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQ0FBZ0MsZ0JBQWdCO0FBQ2hELGdDQUFnQyxnQkFBZ0I7QUFDaEQsaUNBQWlDLGdCQUFnQjtBQUNqRCxpQ0FBaUMsZ0JBQWdCO0FBQ2pELGlDQUFpQyxnQkFBZ0I7QUFDakQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsZ0JBQWdCLGtDQUFLO0FBQ3JCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLHNEQUFRO0FBQzNCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGdCQUFnQiwwRUFBcUI7QUFDckM7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsaUVBQWUsT0FBTyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitjb2xsZWN0QDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9jb2xsZWN0L2Rpc3QvZXMvaW5kZXguanM/OTJmNyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgdHVyZmJib3ggZnJvbSBcIkB0dXJmL2Jib3hcIjtcbmltcG9ydCBib29sZWFuUG9pbnRJblBvbHlnb24gZnJvbSBcIkB0dXJmL2Jvb2xlYW4tcG9pbnQtaW4tcG9seWdvblwiO1xuaW1wb3J0IHJidXNoIGZyb20gXCJyYnVzaFwiO1xuLyoqXG4gKiBNZXJnZXMgYSBzcGVjaWZpZWQgcHJvcGVydHkgZnJvbSBhIEZlYXR1cmVDb2xsZWN0aW9uIG9mIHBvaW50cyBpbnRvIGFcbiAqIEZlYXR1cmVDb2xsZWN0aW9uIG9mIHBvbHlnb25zLiBHaXZlbiBhbiBgaW5Qcm9wZXJ0eWAgb24gcG9pbnRzIGFuZCBhbiBgb3V0UHJvcGVydHlgXG4gKiBmb3IgcG9seWdvbnMsIHRoaXMgZmluZHMgZXZlcnkgcG9pbnQgdGhhdCBsaWVzIHdpdGhpbiBlYWNoIHBvbHlnb24sIGNvbGxlY3RzIHRoZVxuICogYGluUHJvcGVydHlgIHZhbHVlcyBmcm9tIHRob3NlIHBvaW50cywgYW5kIGFkZHMgdGhlbSBhcyBhbiBhcnJheSB0byBgb3V0UHJvcGVydHlgXG4gKiBvbiB0aGUgcG9seWdvbi5cbiAqXG4gKiBAbmFtZSBjb2xsZWN0XG4gKiBAcGFyYW0ge0ZlYXR1cmVDb2xsZWN0aW9uPFBvbHlnb24+fSBwb2x5Z29ucyBwb2x5Z29ucyB3aXRoIHZhbHVlcyBvbiB3aGljaCB0byBhZ2dyZWdhdGVcbiAqIEBwYXJhbSB7RmVhdHVyZUNvbGxlY3Rpb248UG9pbnQ+fSBwb2ludHMgcG9pbnRzIHRvIGJlIGFnZ3JlZ2F0ZWRcbiAqIEBwYXJhbSB7c3RyaW5nfSBpblByb3BlcnR5IHByb3BlcnR5IHRvIGJlIG5lc3RlZCBmcm9tXG4gKiBAcGFyYW0ge3N0cmluZ30gb3V0UHJvcGVydHkgcHJvcGVydHkgdG8gYmUgbmVzdGVkIGludG9cbiAqIEByZXR1cm5zIHtGZWF0dXJlQ29sbGVjdGlvbjxQb2x5Z29uPn0gcG9seWdvbnMgd2l0aCBwcm9wZXJ0aWVzIGxpc3RlZCBiYXNlZCBvbiBgb3V0RmllbGRgXG4gKiBAZXhhbXBsZVxuICogdmFyIHBvbHkxID0gdHVyZi5wb2x5Z29uKFtbWzAsMF0sWzEwLDBdLFsxMCwxMF0sWzAsMTBdLFswLDBdXV0pO1xuICogdmFyIHBvbHkyID0gdHVyZi5wb2x5Z29uKFtbWzEwLDBdLFsyMCwxMF0sWzIwLDIwXSxbMjAsMF0sWzEwLDBdXV0pO1xuICogdmFyIHBvbHlGQyA9IHR1cmYuZmVhdHVyZUNvbGxlY3Rpb24oW3BvbHkxLCBwb2x5Ml0pO1xuICogdmFyIHB0MSA9IHR1cmYucG9pbnQoWzUsNV0sIHtwb3B1bGF0aW9uOiAyMDB9KTtcbiAqIHZhciBwdDIgPSB0dXJmLnBvaW50KFsxLDNdLCB7cG9wdWxhdGlvbjogNjAwfSk7XG4gKiB2YXIgcHQzID0gdHVyZi5wb2ludChbMTQsMl0sIHtwb3B1bGF0aW9uOiAxMDB9KTtcbiAqIHZhciBwdDQgPSB0dXJmLnBvaW50KFsxMywxXSwge3BvcHVsYXRpb246IDIwMH0pO1xuICogdmFyIHB0NSA9IHR1cmYucG9pbnQoWzE5LDddLCB7cG9wdWxhdGlvbjogMzAwfSk7XG4gKiB2YXIgcG9pbnRGQyA9IHR1cmYuZmVhdHVyZUNvbGxlY3Rpb24oW3B0MSwgcHQyLCBwdDMsIHB0NCwgcHQ1XSk7XG4gKiB2YXIgY29sbGVjdGVkID0gdHVyZi5jb2xsZWN0KHBvbHlGQywgcG9pbnRGQywgJ3BvcHVsYXRpb24nLCAndmFsdWVzJyk7XG4gKiB2YXIgdmFsdWVzID0gY29sbGVjdGVkLmZlYXR1cmVzWzBdLnByb3BlcnRpZXMudmFsdWVzXG4gKiAvLz12YWx1ZXMgPT4gWzIwMCwgNjAwXVxuICpcbiAqIC8vYWRkVG9NYXBcbiAqIHZhciBhZGRUb01hcCA9IFtwb2ludEZDLCBjb2xsZWN0ZWRdXG4gKi9cbmZ1bmN0aW9uIGNvbGxlY3QocG9seWdvbnMsIHBvaW50cywgaW5Qcm9wZXJ0eSwgb3V0UHJvcGVydHkpIHtcbiAgICB2YXIgcnRyZWUgPSByYnVzaCg2KTtcbiAgICB2YXIgdHJlZUl0ZW1zID0gcG9pbnRzLmZlYXR1cmVzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBtaW5YOiBpdGVtLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdLFxuICAgICAgICAgICAgbWluWTogaXRlbS5nZW9tZXRyeS5jb29yZGluYXRlc1sxXSxcbiAgICAgICAgICAgIG1heFg6IGl0ZW0uZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF0sXG4gICAgICAgICAgICBtYXhZOiBpdGVtLmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdLFxuICAgICAgICAgICAgcHJvcGVydHk6IChfYSA9IGl0ZW0ucHJvcGVydGllcykgPT09IG51bGwgfHwgX2EgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9hW2luUHJvcGVydHldLFxuICAgICAgICB9O1xuICAgIH0pO1xuICAgIHJ0cmVlLmxvYWQodHJlZUl0ZW1zKTtcbiAgICBwb2x5Z29ucy5mZWF0dXJlcy5mb3JFYWNoKGZ1bmN0aW9uIChwb2x5KSB7XG4gICAgICAgIGlmICghcG9seS5wcm9wZXJ0aWVzKSB7XG4gICAgICAgICAgICBwb2x5LnByb3BlcnRpZXMgPSB7fTtcbiAgICAgICAgfVxuICAgICAgICB2YXIgYmJveCA9IHR1cmZiYm94KHBvbHkpO1xuICAgICAgICB2YXIgcG90ZW50aWFsUG9pbnRzID0gcnRyZWUuc2VhcmNoKHtcbiAgICAgICAgICAgIG1pblg6IGJib3hbMF0sXG4gICAgICAgICAgICBtaW5ZOiBiYm94WzFdLFxuICAgICAgICAgICAgbWF4WDogYmJveFsyXSxcbiAgICAgICAgICAgIG1heFk6IGJib3hbM10sXG4gICAgICAgIH0pO1xuICAgICAgICB2YXIgdmFsdWVzID0gW107XG4gICAgICAgIHBvdGVudGlhbFBvaW50cy5mb3JFYWNoKGZ1bmN0aW9uIChwdCkge1xuICAgICAgICAgICAgaWYgKGJvb2xlYW5Qb2ludEluUG9seWdvbihbcHQubWluWCwgcHQubWluWV0sIHBvbHkpKSB7XG4gICAgICAgICAgICAgICAgdmFsdWVzLnB1c2gocHQucHJvcGVydHkpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgcG9seS5wcm9wZXJ0aWVzW291dFByb3BlcnR5XSA9IHZhbHVlcztcbiAgICB9KTtcbiAgICByZXR1cm4gcG9seWdvbnM7XG59XG5leHBvcnQgZGVmYXVsdCBjb2xsZWN0O1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+collect@6.5.0/node_modules/@turf/collect/dist/es/index.js\n");

/***/ })

};
;