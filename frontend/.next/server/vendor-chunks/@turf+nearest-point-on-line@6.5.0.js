"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+nearest-point-on-line@6.5.0";
exports.ids = ["vendor-chunks/@turf+nearest-point-on-line@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+nearest-point-on-line@6.5.0/node_modules/@turf/nearest-point-on-line/dist/es/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+nearest-point-on-line@6.5.0/node_modules/@turf/nearest-point-on-line/dist/es/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_bearing__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/bearing */ \"(ssr)/./node_modules/.pnpm/@turf+bearing@6.5.0/node_modules/@turf/bearing/dist/es/index.js\");\n/* harmony import */ var _turf_distance__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/distance */ \"(ssr)/./node_modules/.pnpm/@turf+distance@6.5.0/node_modules/@turf/distance/dist/es/index.js\");\n/* harmony import */ var _turf_destination__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/destination */ \"(ssr)/./node_modules/.pnpm/@turf+destination@6.5.0/node_modules/@turf/destination/dist/es/index.js\");\n/* harmony import */ var _turf_line_intersect__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/line-intersect */ \"(ssr)/./node_modules/.pnpm/@turf+line-intersect@6.5.0/node_modules/@turf/line-intersect/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n\n\n\n\n\n\n\n/**\n * Takes a {@link Point} and a {@link LineString} and calculates the closest Point on the (Multi)LineString.\n *\n * @name nearestPointOnLine\n * @param {Geometry|Feature<LineString|MultiLineString>} lines lines to snap to\n * @param {Geometry|Feature<Point>|number[]} pt point to snap from\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @returns {Feature<Point>} closest point on the `line` to `point`. The properties object will contain three values: `index`: closest point was found on nth line part, `dist`: distance between pt and the closest point, `location`: distance along the line between start and the closest point.\n * @example\n * var line = turf.lineString([\n *     [-77.031669, 38.878605],\n *     [-77.029609, 38.881946],\n *     [-77.020339, 38.884084],\n *     [-77.025661, 38.885821],\n *     [-77.021884, 38.889563],\n *     [-77.019824, 38.892368]\n * ]);\n * var pt = turf.point([-77.037076, 38.884017]);\n *\n * var snapped = turf.nearestPointOnLine(line, pt, {units: 'miles'});\n *\n * //addToMap\n * var addToMap = [line, pt, snapped];\n * snapped.properties['marker-color'] = '#00f';\n */\nfunction nearestPointOnLine(lines, pt, options) {\n    if (options === void 0) { options = {}; }\n    var closestPt = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.point)([Infinity, Infinity], {\n        dist: Infinity,\n    });\n    var length = 0.0;\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_4__.flattenEach)(lines, function (line) {\n        var coords = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_6__.getCoords)(line);\n        for (var i = 0; i < coords.length - 1; i++) {\n            //start\n            var start = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.point)(coords[i]);\n            start.properties.dist = (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(pt, start, options);\n            //stop\n            var stop_1 = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.point)(coords[i + 1]);\n            stop_1.properties.dist = (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(pt, stop_1, options);\n            // sectionLength\n            var sectionLength = (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(start, stop_1, options);\n            //perpendicular\n            var heightDistance = Math.max(start.properties.dist, stop_1.properties.dist);\n            var direction = (0,_turf_bearing__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(start, stop_1);\n            var perpendicularPt1 = (0,_turf_destination__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(pt, heightDistance, direction + 90, options);\n            var perpendicularPt2 = (0,_turf_destination__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(pt, heightDistance, direction - 90, options);\n            var intersect = (0,_turf_line_intersect__WEBPACK_IMPORTED_MODULE_3__[\"default\"])((0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.lineString)([\n                perpendicularPt1.geometry.coordinates,\n                perpendicularPt2.geometry.coordinates,\n            ]), (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_5__.lineString)([start.geometry.coordinates, stop_1.geometry.coordinates]));\n            var intersectPt = null;\n            if (intersect.features.length > 0) {\n                intersectPt = intersect.features[0];\n                intersectPt.properties.dist = (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(pt, intersectPt, options);\n                intersectPt.properties.location =\n                    length + (0,_turf_distance__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(start, intersectPt, options);\n            }\n            if (start.properties.dist < closestPt.properties.dist) {\n                closestPt = start;\n                closestPt.properties.index = i;\n                closestPt.properties.location = length;\n            }\n            if (stop_1.properties.dist < closestPt.properties.dist) {\n                closestPt = stop_1;\n                closestPt.properties.index = i + 1;\n                closestPt.properties.location = length + sectionLength;\n            }\n            if (intersectPt &&\n                intersectPt.properties.dist < closestPt.properties.dist) {\n                closestPt = intersectPt;\n                closestPt.properties.index = i;\n            }\n            // update length\n            length += sectionLength;\n        }\n    });\n    return closestPt;\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nearestPointOnLine);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrbmVhcmVzdC1wb2ludC1vbi1saW5lQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9uZWFyZXN0LXBvaW50LW9uLWxpbmUvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7OztBQUFvQztBQUNFO0FBQ007QUFDTTtBQUNUO0FBQ1U7QUFDUDtBQUM1QztBQUNBLFlBQVksYUFBYSxPQUFPLGtCQUFrQjtBQUNsRDtBQUNBO0FBQ0EsV0FBVyw4Q0FBOEM7QUFDekQsV0FBVyxrQ0FBa0M7QUFDN0MsV0FBVyxRQUFRLFdBQVc7QUFDOUIsV0FBVyxRQUFRO0FBQ25CLGFBQWEsZ0JBQWdCO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvREFBb0QsZUFBZTtBQUNuRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUIsb0JBQW9CLG9EQUFLO0FBQ3pCO0FBQ0EsS0FBSztBQUNMO0FBQ0EsSUFBSSx1REFBVztBQUNmLHFCQUFxQiwwREFBUztBQUM5Qix3QkFBd0IsdUJBQXVCO0FBQy9DO0FBQ0Esd0JBQXdCLG9EQUFLO0FBQzdCLG9DQUFvQywwREFBUTtBQUM1QztBQUNBLHlCQUF5QixvREFBSztBQUM5QixxQ0FBcUMsMERBQVE7QUFDN0M7QUFDQSxnQ0FBZ0MsMERBQVE7QUFDeEM7QUFDQTtBQUNBLDRCQUE0Qix5REFBTztBQUNuQyxtQ0FBbUMsNkRBQVc7QUFDOUMsbUNBQW1DLDZEQUFXO0FBQzlDLDRCQUE0QixnRUFBYyxDQUFDLHlEQUFVO0FBQ3JEO0FBQ0E7QUFDQSxnQkFBZ0IseURBQVU7QUFDMUI7QUFDQTtBQUNBO0FBQ0EsOENBQThDLDBEQUFRO0FBQ3REO0FBQ0EsNkJBQTZCLDBEQUFRO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQSxpRUFBZSxrQkFBa0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21mdmFsdWUtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrbmVhcmVzdC1wb2ludC1vbi1saW5lQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9uZWFyZXN0LXBvaW50LW9uLWxpbmUvZGlzdC9lcy9pbmRleC5qcz9iODliIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBiZWFyaW5nIGZyb20gXCJAdHVyZi9iZWFyaW5nXCI7XG5pbXBvcnQgZGlzdGFuY2UgZnJvbSBcIkB0dXJmL2Rpc3RhbmNlXCI7XG5pbXBvcnQgZGVzdGluYXRpb24gZnJvbSBcIkB0dXJmL2Rlc3RpbmF0aW9uXCI7XG5pbXBvcnQgbGluZUludGVyc2VjdHMgZnJvbSBcIkB0dXJmL2xpbmUtaW50ZXJzZWN0XCI7XG5pbXBvcnQgeyBmbGF0dGVuRWFjaCB9IGZyb20gXCJAdHVyZi9tZXRhXCI7XG5pbXBvcnQgeyBwb2ludCwgbGluZVN0cmluZywgfSBmcm9tIFwiQHR1cmYvaGVscGVyc1wiO1xuaW1wb3J0IHsgZ2V0Q29vcmRzIH0gZnJvbSBcIkB0dXJmL2ludmFyaWFudFwiO1xuLyoqXG4gKiBUYWtlcyBhIHtAbGluayBQb2ludH0gYW5kIGEge0BsaW5rIExpbmVTdHJpbmd9IGFuZCBjYWxjdWxhdGVzIHRoZSBjbG9zZXN0IFBvaW50IG9uIHRoZSAoTXVsdGkpTGluZVN0cmluZy5cbiAqXG4gKiBAbmFtZSBuZWFyZXN0UG9pbnRPbkxpbmVcbiAqIEBwYXJhbSB7R2VvbWV0cnl8RmVhdHVyZTxMaW5lU3RyaW5nfE11bHRpTGluZVN0cmluZz59IGxpbmVzIGxpbmVzIHRvIHNuYXAgdG9cbiAqIEBwYXJhbSB7R2VvbWV0cnl8RmVhdHVyZTxQb2ludD58bnVtYmVyW119IHB0IHBvaW50IHRvIHNuYXAgZnJvbVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMudW5pdHM9J2tpbG9tZXRlcnMnXSBjYW4gYmUgZGVncmVlcywgcmFkaWFucywgbWlsZXMsIG9yIGtpbG9tZXRlcnNcbiAqIEByZXR1cm5zIHtGZWF0dXJlPFBvaW50Pn0gY2xvc2VzdCBwb2ludCBvbiB0aGUgYGxpbmVgIHRvIGBwb2ludGAuIFRoZSBwcm9wZXJ0aWVzIG9iamVjdCB3aWxsIGNvbnRhaW4gdGhyZWUgdmFsdWVzOiBgaW5kZXhgOiBjbG9zZXN0IHBvaW50IHdhcyBmb3VuZCBvbiBudGggbGluZSBwYXJ0LCBgZGlzdGA6IGRpc3RhbmNlIGJldHdlZW4gcHQgYW5kIHRoZSBjbG9zZXN0IHBvaW50LCBgbG9jYXRpb25gOiBkaXN0YW5jZSBhbG9uZyB0aGUgbGluZSBiZXR3ZWVuIHN0YXJ0IGFuZCB0aGUgY2xvc2VzdCBwb2ludC5cbiAqIEBleGFtcGxlXG4gKiB2YXIgbGluZSA9IHR1cmYubGluZVN0cmluZyhbXG4gKiAgICAgWy03Ny4wMzE2NjksIDM4Ljg3ODYwNV0sXG4gKiAgICAgWy03Ny4wMjk2MDksIDM4Ljg4MTk0Nl0sXG4gKiAgICAgWy03Ny4wMjAzMzksIDM4Ljg4NDA4NF0sXG4gKiAgICAgWy03Ny4wMjU2NjEsIDM4Ljg4NTgyMV0sXG4gKiAgICAgWy03Ny4wMjE4ODQsIDM4Ljg4OTU2M10sXG4gKiAgICAgWy03Ny4wMTk4MjQsIDM4Ljg5MjM2OF1cbiAqIF0pO1xuICogdmFyIHB0ID0gdHVyZi5wb2ludChbLTc3LjAzNzA3NiwgMzguODg0MDE3XSk7XG4gKlxuICogdmFyIHNuYXBwZWQgPSB0dXJmLm5lYXJlc3RQb2ludE9uTGluZShsaW5lLCBwdCwge3VuaXRzOiAnbWlsZXMnfSk7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW2xpbmUsIHB0LCBzbmFwcGVkXTtcbiAqIHNuYXBwZWQucHJvcGVydGllc1snbWFya2VyLWNvbG9yJ10gPSAnIzAwZic7XG4gKi9cbmZ1bmN0aW9uIG5lYXJlc3RQb2ludE9uTGluZShsaW5lcywgcHQsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciBjbG9zZXN0UHQgPSBwb2ludChbSW5maW5pdHksIEluZmluaXR5XSwge1xuICAgICAgICBkaXN0OiBJbmZpbml0eSxcbiAgICB9KTtcbiAgICB2YXIgbGVuZ3RoID0gMC4wO1xuICAgIGZsYXR0ZW5FYWNoKGxpbmVzLCBmdW5jdGlvbiAobGluZSkge1xuICAgICAgICB2YXIgY29vcmRzID0gZ2V0Q29vcmRzKGxpbmUpO1xuICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGNvb3Jkcy5sZW5ndGggLSAxOyBpKyspIHtcbiAgICAgICAgICAgIC8vc3RhcnRcbiAgICAgICAgICAgIHZhciBzdGFydCA9IHBvaW50KGNvb3Jkc1tpXSk7XG4gICAgICAgICAgICBzdGFydC5wcm9wZXJ0aWVzLmRpc3QgPSBkaXN0YW5jZShwdCwgc3RhcnQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgLy9zdG9wXG4gICAgICAgICAgICB2YXIgc3RvcF8xID0gcG9pbnQoY29vcmRzW2kgKyAxXSk7XG4gICAgICAgICAgICBzdG9wXzEucHJvcGVydGllcy5kaXN0ID0gZGlzdGFuY2UocHQsIHN0b3BfMSwgb3B0aW9ucyk7XG4gICAgICAgICAgICAvLyBzZWN0aW9uTGVuZ3RoXG4gICAgICAgICAgICB2YXIgc2VjdGlvbkxlbmd0aCA9IGRpc3RhbmNlKHN0YXJ0LCBzdG9wXzEsIG9wdGlvbnMpO1xuICAgICAgICAgICAgLy9wZXJwZW5kaWN1bGFyXG4gICAgICAgICAgICB2YXIgaGVpZ2h0RGlzdGFuY2UgPSBNYXRoLm1heChzdGFydC5wcm9wZXJ0aWVzLmRpc3QsIHN0b3BfMS5wcm9wZXJ0aWVzLmRpc3QpO1xuICAgICAgICAgICAgdmFyIGRpcmVjdGlvbiA9IGJlYXJpbmcoc3RhcnQsIHN0b3BfMSk7XG4gICAgICAgICAgICB2YXIgcGVycGVuZGljdWxhclB0MSA9IGRlc3RpbmF0aW9uKHB0LCBoZWlnaHREaXN0YW5jZSwgZGlyZWN0aW9uICsgOTAsIG9wdGlvbnMpO1xuICAgICAgICAgICAgdmFyIHBlcnBlbmRpY3VsYXJQdDIgPSBkZXN0aW5hdGlvbihwdCwgaGVpZ2h0RGlzdGFuY2UsIGRpcmVjdGlvbiAtIDkwLCBvcHRpb25zKTtcbiAgICAgICAgICAgIHZhciBpbnRlcnNlY3QgPSBsaW5lSW50ZXJzZWN0cyhsaW5lU3RyaW5nKFtcbiAgICAgICAgICAgICAgICBwZXJwZW5kaWN1bGFyUHQxLmdlb21ldHJ5LmNvb3JkaW5hdGVzLFxuICAgICAgICAgICAgICAgIHBlcnBlbmRpY3VsYXJQdDIuZ2VvbWV0cnkuY29vcmRpbmF0ZXMsXG4gICAgICAgICAgICBdKSwgbGluZVN0cmluZyhbc3RhcnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXMsIHN0b3BfMS5nZW9tZXRyeS5jb29yZGluYXRlc10pKTtcbiAgICAgICAgICAgIHZhciBpbnRlcnNlY3RQdCA9IG51bGw7XG4gICAgICAgICAgICBpZiAoaW50ZXJzZWN0LmZlYXR1cmVzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgICAgICAgICBpbnRlcnNlY3RQdCA9IGludGVyc2VjdC5mZWF0dXJlc1swXTtcbiAgICAgICAgICAgICAgICBpbnRlcnNlY3RQdC5wcm9wZXJ0aWVzLmRpc3QgPSBkaXN0YW5jZShwdCwgaW50ZXJzZWN0UHQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgICAgIGludGVyc2VjdFB0LnByb3BlcnRpZXMubG9jYXRpb24gPVxuICAgICAgICAgICAgICAgICAgICBsZW5ndGggKyBkaXN0YW5jZShzdGFydCwgaW50ZXJzZWN0UHQsIG9wdGlvbnMpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKHN0YXJ0LnByb3BlcnRpZXMuZGlzdCA8IGNsb3Nlc3RQdC5wcm9wZXJ0aWVzLmRpc3QpIHtcbiAgICAgICAgICAgICAgICBjbG9zZXN0UHQgPSBzdGFydDtcbiAgICAgICAgICAgICAgICBjbG9zZXN0UHQucHJvcGVydGllcy5pbmRleCA9IGk7XG4gICAgICAgICAgICAgICAgY2xvc2VzdFB0LnByb3BlcnRpZXMubG9jYXRpb24gPSBsZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoc3RvcF8xLnByb3BlcnRpZXMuZGlzdCA8IGNsb3Nlc3RQdC5wcm9wZXJ0aWVzLmRpc3QpIHtcbiAgICAgICAgICAgICAgICBjbG9zZXN0UHQgPSBzdG9wXzE7XG4gICAgICAgICAgICAgICAgY2xvc2VzdFB0LnByb3BlcnRpZXMuaW5kZXggPSBpICsgMTtcbiAgICAgICAgICAgICAgICBjbG9zZXN0UHQucHJvcGVydGllcy5sb2NhdGlvbiA9IGxlbmd0aCArIHNlY3Rpb25MZW5ndGg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoaW50ZXJzZWN0UHQgJiZcbiAgICAgICAgICAgICAgICBpbnRlcnNlY3RQdC5wcm9wZXJ0aWVzLmRpc3QgPCBjbG9zZXN0UHQucHJvcGVydGllcy5kaXN0KSB7XG4gICAgICAgICAgICAgICAgY2xvc2VzdFB0ID0gaW50ZXJzZWN0UHQ7XG4gICAgICAgICAgICAgICAgY2xvc2VzdFB0LnByb3BlcnRpZXMuaW5kZXggPSBpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgLy8gdXBkYXRlIGxlbmd0aFxuICAgICAgICAgICAgbGVuZ3RoICs9IHNlY3Rpb25MZW5ndGg7XG4gICAgICAgIH1cbiAgICB9KTtcbiAgICByZXR1cm4gY2xvc2VzdFB0O1xufVxuZXhwb3J0IGRlZmF1bHQgbmVhcmVzdFBvaW50T25MaW5lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+nearest-point-on-line@6.5.0/node_modules/@turf/nearest-point-on-line/dist/es/index.js\n");

/***/ })

};
;