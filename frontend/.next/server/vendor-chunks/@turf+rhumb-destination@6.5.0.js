"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+rhumb-destination@6.5.0";
exports.ids = ["vendor-chunks/@turf+rhumb-destination@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+rhumb-destination@6.5.0/node_modules/@turf/rhumb-destination/dist/es/index.js":
/*!****************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+rhumb-destination@6.5.0/node_modules/@turf/rhumb-destination/dist/es/index.js ***!
  \****************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n// https://en.wikipedia.org/wiki/Rhumb_line\n\n\n/**\n * Returns the destination {@link Point} having travelled the given distance along a Rhumb line from the\n * origin Point with the (varant) given bearing.\n *\n * @name rhumbDestination\n * @param {Coord} origin starting point\n * @param {number} distance distance from the starting point\n * @param {number} bearing varant bearing angle ranging from -180 to 180 degrees from north\n * @param {Object} [options={}] Optional parameters\n * @param {string} [options.units='kilometers'] can be degrees, radians, miles, or kilometers\n * @param {Object} [options.properties={}] translate properties to destination point\n * @returns {Feature<Point>} Destination point.\n * @example\n * var pt = turf.point([-75.343, 39.984], {\"marker-color\": \"F00\"});\n * var distance = 50;\n * var bearing = 90;\n * var options = {units: 'miles'};\n *\n * var destination = turf.rhumbDestination(pt, distance, bearing, options);\n *\n * //addToMap\n * var addToMap = [pt, destination]\n * destination.properties['marker-color'] = '#00F';\n */\nfunction rhumbDestination(origin, distance, bearing, options) {\n    if (options === void 0) { options = {}; }\n    var wasNegativeDistance = distance < 0;\n    var distanceInMeters = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.convertLength)(Math.abs(distance), options.units, \"meters\");\n    if (wasNegativeDistance)\n        distanceInMeters = -Math.abs(distanceInMeters);\n    var coords = (0,_turf_invariant__WEBPACK_IMPORTED_MODULE_1__.getCoord)(origin);\n    var destination = calculateRhumbDestination(coords, distanceInMeters, bearing);\n    // compensate the crossing of the 180th meridian (https://macwright.org/2016/09/26/the-180th-meridian.html)\n    // solution from https://github.com/mapbox/mapbox-gl-js/issues/3250#issuecomment-294887678\n    destination[0] +=\n        destination[0] - coords[0] > 180\n            ? -360\n            : coords[0] - destination[0] > 180\n                ? 360\n                : 0;\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.point)(destination, options.properties);\n}\n/**\n * Returns the destination point having travelled along a rhumb line from origin point the given\n * distance on the  given bearing.\n * Adapted from Geodesy: http://www.movable-type.co.uk/scripts/latlong.html#rhumblines\n *\n * @private\n * @param   {Array<number>} origin - point\n * @param   {number} distance - Distance travelled, in same units as earth radius (default: metres).\n * @param   {number} bearing - Bearing in degrees from north.\n * @param   {number} [radius=6371e3] - (Mean) radius of earth (defaults to radius in metres).\n * @returns {Array<number>} Destination point.\n */\nfunction calculateRhumbDestination(origin, distance, bearing, radius) {\n    // φ => phi\n    // λ => lambda\n    // ψ => psi\n    // Δ => Delta\n    // δ => delta\n    // θ => theta\n    radius = radius === undefined ? _turf_helpers__WEBPACK_IMPORTED_MODULE_0__.earthRadius : Number(radius);\n    var delta = distance / radius; // angular distance in radians\n    var lambda1 = (origin[0] * Math.PI) / 180; // to radians, but without normalize to 𝜋\n    var phi1 = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(origin[1]);\n    var theta = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.degreesToRadians)(bearing);\n    var DeltaPhi = delta * Math.cos(theta);\n    var phi2 = phi1 + DeltaPhi;\n    // check for some daft bugger going past the pole, normalise latitude if so\n    if (Math.abs(phi2) > Math.PI / 2) {\n        phi2 = phi2 > 0 ? Math.PI - phi2 : -Math.PI - phi2;\n    }\n    var DeltaPsi = Math.log(Math.tan(phi2 / 2 + Math.PI / 4) / Math.tan(phi1 / 2 + Math.PI / 4));\n    // E-W course becomes ill-conditioned with 0/0\n    var q = Math.abs(DeltaPsi) > 10e-12 ? DeltaPhi / DeltaPsi : Math.cos(phi1);\n    var DeltaLambda = (delta * Math.sin(theta)) / q;\n    var lambda2 = lambda1 + DeltaLambda;\n    return [\n        (((lambda2 * 180) / Math.PI + 540) % 360) - 180,\n        (phi2 * 180) / Math.PI,\n    ]; // normalise to −180..+180°\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (rhumbDestination);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrcmh1bWItZGVzdGluYXRpb25ANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL3JodW1iLWRlc3RpbmF0aW9uL2Rpc3QvZXMvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDcUY7QUFDMUM7QUFDM0M7QUFDQSw0QkFBNEIsYUFBYTtBQUN6QztBQUNBO0FBQ0E7QUFDQSxXQUFXLE9BQU87QUFDbEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUTtBQUNuQixXQUFXLFFBQVEsV0FBVztBQUM5QixXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRLHNCQUFzQjtBQUN6QyxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBLDJDQUEyQyxzQkFBc0I7QUFDakU7QUFDQTtBQUNBLGtCQUFrQjtBQUNsQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0EsMkJBQTJCLDREQUFhO0FBQ3hDO0FBQ0E7QUFDQSxpQkFBaUIseURBQVE7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBSztBQUNoQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZUFBZTtBQUM1QixhQUFhLFFBQVE7QUFDckIsYUFBYSxRQUFRO0FBQ3JCLGFBQWEsUUFBUTtBQUNyQixhQUFhLGVBQWU7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxzREFBVztBQUMvQyxtQ0FBbUM7QUFDbkMsK0NBQStDO0FBQy9DLGVBQWUsK0RBQWdCO0FBQy9CLGdCQUFnQiwrREFBZ0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLGlFQUFlLGdCQUFnQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZityaHVtYi1kZXN0aW5hdGlvbkA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvcmh1bWItZGVzdGluYXRpb24vZGlzdC9lcy9pbmRleC5qcz9iOTgwIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGh0dHBzOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL1JodW1iX2xpbmVcbmltcG9ydCB7IGNvbnZlcnRMZW5ndGgsIGRlZ3JlZXNUb1JhZGlhbnMsIGVhcnRoUmFkaXVzLCBwb2ludCwgfSBmcm9tIFwiQHR1cmYvaGVscGVyc1wiO1xuaW1wb3J0IHsgZ2V0Q29vcmQgfSBmcm9tIFwiQHR1cmYvaW52YXJpYW50XCI7XG4vKipcbiAqIFJldHVybnMgdGhlIGRlc3RpbmF0aW9uIHtAbGluayBQb2ludH0gaGF2aW5nIHRyYXZlbGxlZCB0aGUgZ2l2ZW4gZGlzdGFuY2UgYWxvbmcgYSBSaHVtYiBsaW5lIGZyb20gdGhlXG4gKiBvcmlnaW4gUG9pbnQgd2l0aCB0aGUgKHZhcmFudCkgZ2l2ZW4gYmVhcmluZy5cbiAqXG4gKiBAbmFtZSByaHVtYkRlc3RpbmF0aW9uXG4gKiBAcGFyYW0ge0Nvb3JkfSBvcmlnaW4gc3RhcnRpbmcgcG9pbnRcbiAqIEBwYXJhbSB7bnVtYmVyfSBkaXN0YW5jZSBkaXN0YW5jZSBmcm9tIHRoZSBzdGFydGluZyBwb2ludFxuICogQHBhcmFtIHtudW1iZXJ9IGJlYXJpbmcgdmFyYW50IGJlYXJpbmcgYW5nbGUgcmFuZ2luZyBmcm9tIC0xODAgdG8gMTgwIGRlZ3JlZXMgZnJvbSBub3J0aFxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zPXt9XSBPcHRpb25hbCBwYXJhbWV0ZXJzXG4gKiBAcGFyYW0ge3N0cmluZ30gW29wdGlvbnMudW5pdHM9J2tpbG9tZXRlcnMnXSBjYW4gYmUgZGVncmVlcywgcmFkaWFucywgbWlsZXMsIG9yIGtpbG9tZXRlcnNcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5wcm9wZXJ0aWVzPXt9XSB0cmFuc2xhdGUgcHJvcGVydGllcyB0byBkZXN0aW5hdGlvbiBwb2ludFxuICogQHJldHVybnMge0ZlYXR1cmU8UG9pbnQ+fSBEZXN0aW5hdGlvbiBwb2ludC5cbiAqIEBleGFtcGxlXG4gKiB2YXIgcHQgPSB0dXJmLnBvaW50KFstNzUuMzQzLCAzOS45ODRdLCB7XCJtYXJrZXItY29sb3JcIjogXCJGMDBcIn0pO1xuICogdmFyIGRpc3RhbmNlID0gNTA7XG4gKiB2YXIgYmVhcmluZyA9IDkwO1xuICogdmFyIG9wdGlvbnMgPSB7dW5pdHM6ICdtaWxlcyd9O1xuICpcbiAqIHZhciBkZXN0aW5hdGlvbiA9IHR1cmYucmh1bWJEZXN0aW5hdGlvbihwdCwgZGlzdGFuY2UsIGJlYXJpbmcsIG9wdGlvbnMpO1xuICpcbiAqIC8vYWRkVG9NYXBcbiAqIHZhciBhZGRUb01hcCA9IFtwdCwgZGVzdGluYXRpb25dXG4gKiBkZXN0aW5hdGlvbi5wcm9wZXJ0aWVzWydtYXJrZXItY29sb3InXSA9ICcjMDBGJztcbiAqL1xuZnVuY3Rpb24gcmh1bWJEZXN0aW5hdGlvbihvcmlnaW4sIGRpc3RhbmNlLCBiZWFyaW5nLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICB2YXIgd2FzTmVnYXRpdmVEaXN0YW5jZSA9IGRpc3RhbmNlIDwgMDtcbiAgICB2YXIgZGlzdGFuY2VJbk1ldGVycyA9IGNvbnZlcnRMZW5ndGgoTWF0aC5hYnMoZGlzdGFuY2UpLCBvcHRpb25zLnVuaXRzLCBcIm1ldGVyc1wiKTtcbiAgICBpZiAod2FzTmVnYXRpdmVEaXN0YW5jZSlcbiAgICAgICAgZGlzdGFuY2VJbk1ldGVycyA9IC1NYXRoLmFicyhkaXN0YW5jZUluTWV0ZXJzKTtcbiAgICB2YXIgY29vcmRzID0gZ2V0Q29vcmQob3JpZ2luKTtcbiAgICB2YXIgZGVzdGluYXRpb24gPSBjYWxjdWxhdGVSaHVtYkRlc3RpbmF0aW9uKGNvb3JkcywgZGlzdGFuY2VJbk1ldGVycywgYmVhcmluZyk7XG4gICAgLy8gY29tcGVuc2F0ZSB0aGUgY3Jvc3Npbmcgb2YgdGhlIDE4MHRoIG1lcmlkaWFuIChodHRwczovL21hY3dyaWdodC5vcmcvMjAxNi8wOS8yNi90aGUtMTgwdGgtbWVyaWRpYW4uaHRtbClcbiAgICAvLyBzb2x1dGlvbiBmcm9tIGh0dHBzOi8vZ2l0aHViLmNvbS9tYXBib3gvbWFwYm94LWdsLWpzL2lzc3Vlcy8zMjUwI2lzc3VlY29tbWVudC0yOTQ4ODc2NzhcbiAgICBkZXN0aW5hdGlvblswXSArPVxuICAgICAgICBkZXN0aW5hdGlvblswXSAtIGNvb3Jkc1swXSA+IDE4MFxuICAgICAgICAgICAgPyAtMzYwXG4gICAgICAgICAgICA6IGNvb3Jkc1swXSAtIGRlc3RpbmF0aW9uWzBdID4gMTgwXG4gICAgICAgICAgICAgICAgPyAzNjBcbiAgICAgICAgICAgICAgICA6IDA7XG4gICAgcmV0dXJuIHBvaW50KGRlc3RpbmF0aW9uLCBvcHRpb25zLnByb3BlcnRpZXMpO1xufVxuLyoqXG4gKiBSZXR1cm5zIHRoZSBkZXN0aW5hdGlvbiBwb2ludCBoYXZpbmcgdHJhdmVsbGVkIGFsb25nIGEgcmh1bWIgbGluZSBmcm9tIG9yaWdpbiBwb2ludCB0aGUgZ2l2ZW5cbiAqIGRpc3RhbmNlIG9uIHRoZSAgZ2l2ZW4gYmVhcmluZy5cbiAqIEFkYXB0ZWQgZnJvbSBHZW9kZXN5OiBodHRwOi8vd3d3Lm1vdmFibGUtdHlwZS5jby51ay9zY3JpcHRzL2xhdGxvbmcuaHRtbCNyaHVtYmxpbmVzXG4gKlxuICogQHByaXZhdGVcbiAqIEBwYXJhbSAgIHtBcnJheTxudW1iZXI+fSBvcmlnaW4gLSBwb2ludFxuICogQHBhcmFtICAge251bWJlcn0gZGlzdGFuY2UgLSBEaXN0YW5jZSB0cmF2ZWxsZWQsIGluIHNhbWUgdW5pdHMgYXMgZWFydGggcmFkaXVzIChkZWZhdWx0OiBtZXRyZXMpLlxuICogQHBhcmFtICAge251bWJlcn0gYmVhcmluZyAtIEJlYXJpbmcgaW4gZGVncmVlcyBmcm9tIG5vcnRoLlxuICogQHBhcmFtICAge251bWJlcn0gW3JhZGl1cz02MzcxZTNdIC0gKE1lYW4pIHJhZGl1cyBvZiBlYXJ0aCAoZGVmYXVsdHMgdG8gcmFkaXVzIGluIG1ldHJlcykuXG4gKiBAcmV0dXJucyB7QXJyYXk8bnVtYmVyPn0gRGVzdGluYXRpb24gcG9pbnQuXG4gKi9cbmZ1bmN0aW9uIGNhbGN1bGF0ZVJodW1iRGVzdGluYXRpb24ob3JpZ2luLCBkaXN0YW5jZSwgYmVhcmluZywgcmFkaXVzKSB7XG4gICAgLy8gz4YgPT4gcGhpXG4gICAgLy8gzrsgPT4gbGFtYmRhXG4gICAgLy8gz4ggPT4gcHNpXG4gICAgLy8gzpQgPT4gRGVsdGFcbiAgICAvLyDOtCA9PiBkZWx0YVxuICAgIC8vIM64ID0+IHRoZXRhXG4gICAgcmFkaXVzID0gcmFkaXVzID09PSB1bmRlZmluZWQgPyBlYXJ0aFJhZGl1cyA6IE51bWJlcihyYWRpdXMpO1xuICAgIHZhciBkZWx0YSA9IGRpc3RhbmNlIC8gcmFkaXVzOyAvLyBhbmd1bGFyIGRpc3RhbmNlIGluIHJhZGlhbnNcbiAgICB2YXIgbGFtYmRhMSA9IChvcmlnaW5bMF0gKiBNYXRoLlBJKSAvIDE4MDsgLy8gdG8gcmFkaWFucywgYnV0IHdpdGhvdXQgbm9ybWFsaXplIHRvIPCdnItcbiAgICB2YXIgcGhpMSA9IGRlZ3JlZXNUb1JhZGlhbnMob3JpZ2luWzFdKTtcbiAgICB2YXIgdGhldGEgPSBkZWdyZWVzVG9SYWRpYW5zKGJlYXJpbmcpO1xuICAgIHZhciBEZWx0YVBoaSA9IGRlbHRhICogTWF0aC5jb3ModGhldGEpO1xuICAgIHZhciBwaGkyID0gcGhpMSArIERlbHRhUGhpO1xuICAgIC8vIGNoZWNrIGZvciBzb21lIGRhZnQgYnVnZ2VyIGdvaW5nIHBhc3QgdGhlIHBvbGUsIG5vcm1hbGlzZSBsYXRpdHVkZSBpZiBzb1xuICAgIGlmIChNYXRoLmFicyhwaGkyKSA+IE1hdGguUEkgLyAyKSB7XG4gICAgICAgIHBoaTIgPSBwaGkyID4gMCA/IE1hdGguUEkgLSBwaGkyIDogLU1hdGguUEkgLSBwaGkyO1xuICAgIH1cbiAgICB2YXIgRGVsdGFQc2kgPSBNYXRoLmxvZyhNYXRoLnRhbihwaGkyIC8gMiArIE1hdGguUEkgLyA0KSAvIE1hdGgudGFuKHBoaTEgLyAyICsgTWF0aC5QSSAvIDQpKTtcbiAgICAvLyBFLVcgY291cnNlIGJlY29tZXMgaWxsLWNvbmRpdGlvbmVkIHdpdGggMC8wXG4gICAgdmFyIHEgPSBNYXRoLmFicyhEZWx0YVBzaSkgPiAxMGUtMTIgPyBEZWx0YVBoaSAvIERlbHRhUHNpIDogTWF0aC5jb3MocGhpMSk7XG4gICAgdmFyIERlbHRhTGFtYmRhID0gKGRlbHRhICogTWF0aC5zaW4odGhldGEpKSAvIHE7XG4gICAgdmFyIGxhbWJkYTIgPSBsYW1iZGExICsgRGVsdGFMYW1iZGE7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgKCgobGFtYmRhMiAqIDE4MCkgLyBNYXRoLlBJICsgNTQwKSAlIDM2MCkgLSAxODAsXG4gICAgICAgIChwaGkyICogMTgwKSAvIE1hdGguUEksXG4gICAgXTsgLy8gbm9ybWFsaXNlIHRvIOKIkjE4MC4uKzE4MMKwXG59XG5leHBvcnQgZGVmYXVsdCByaHVtYkRlc3RpbmF0aW9uO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+rhumb-destination@6.5.0/node_modules/@turf/rhumb-destination/dist/es/index.js\n");

/***/ })

};
;