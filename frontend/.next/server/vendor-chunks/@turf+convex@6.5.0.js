"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+convex@6.5.0";
exports.ids = ["vendor-chunks/@turf+convex@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+convex@6.5.0/node_modules/@turf/convex/dist/es/index.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+convex@6.5.0/node_modules/@turf/convex/dist/es/index.js ***!
  \******************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ convex)\n/* harmony export */ });\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var concaveman__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! concaveman */ \"(ssr)/./node_modules/.pnpm/concaveman@1.2.1/node_modules/concaveman/index.js\");\n\n\n\n/**\n * Takes a {@link Feature} or a {@link FeatureCollection} and returns a convex hull {@link Polygon}.\n *\n * Internally this uses\n * the [convex-hull](https://github.com/mikolalysenko/convex-hull) module that implements a\n * [monotone chain hull](http://en.wikibooks.org/wiki/Algorithm_Implementation/Geometry/Convex_hull/Monotone_chain).\n *\n * @name convex\n * @param {GeoJSON} geojson input Feature or FeatureCollection\n * @param {Object} [options={}] Optional parameters\n * @param {number} [options.concavity=Infinity] 1 - thin shape. Infinity - convex hull.\n * @param {Object} [options.properties={}] Translate Properties to Feature\n * @returns {Feature<Polygon>} a convex hull\n * @example\n * var points = turf.featureCollection([\n *   turf.point([10.195312, 43.755225]),\n *   turf.point([10.404052, 43.8424511]),\n *   turf.point([10.579833, 43.659924]),\n *   turf.point([10.360107, 43.516688]),\n *   turf.point([10.14038, 43.588348]),\n *   turf.point([10.195312, 43.755225])\n * ]);\n *\n * var hull = turf.convex(points);\n *\n * //addToMap\n * var addToMap = [points, hull]\n */\nfunction convex(geojson, options) {\n    if (options === void 0) { options = {}; }\n    // Default parameters\n    options.concavity = options.concavity || Infinity;\n    // Container\n    var points = [];\n    // Convert all points to flat 2D coordinate Array\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.coordEach)(geojson, function (coord) {\n        points.push([coord[0], coord[1]]);\n    });\n    if (!points.length) {\n        return null;\n    }\n    var convexHull = concaveman__WEBPACK_IMPORTED_MODULE_2__(points, options.concavity);\n    // Convex hull should have at least 3 different vertices in order to create a valid polygon\n    if (convexHull.length > 3) {\n        return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_0__.polygon)([convexHull]);\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrY29udmV4QDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9jb252ZXgvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXlDO0FBQ0Y7QUFDSDtBQUNwQztBQUNBLFlBQVksZUFBZSxNQUFNLHlCQUF5QiwyQkFBMkIsY0FBYztBQUNuRztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFNBQVM7QUFDcEIsV0FBVyxRQUFRLFdBQVc7QUFDOUIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsUUFBUSxzQkFBc0I7QUFDekMsYUFBYSxrQkFBa0I7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ2U7QUFDZiw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUkscURBQVM7QUFDYjtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsdUNBQVU7QUFDL0I7QUFDQTtBQUNBLGVBQWUsc0RBQU87QUFDdEI7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZitjb252ZXhANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL2NvbnZleC9kaXN0L2VzL2luZGV4LmpzPzliZTEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcG9seWdvbiwgfSBmcm9tIFwiQHR1cmYvaGVscGVyc1wiO1xuaW1wb3J0IHsgY29vcmRFYWNoIH0gZnJvbSBcIkB0dXJmL21ldGFcIjtcbmltcG9ydCBjb25jYXZlbWFuIGZyb20gXCJjb25jYXZlbWFuXCI7XG4vKipcbiAqIFRha2VzIGEge0BsaW5rIEZlYXR1cmV9IG9yIGEge0BsaW5rIEZlYXR1cmVDb2xsZWN0aW9ufSBhbmQgcmV0dXJucyBhIGNvbnZleCBodWxsIHtAbGluayBQb2x5Z29ufS5cbiAqXG4gKiBJbnRlcm5hbGx5IHRoaXMgdXNlc1xuICogdGhlIFtjb252ZXgtaHVsbF0oaHR0cHM6Ly9naXRodWIuY29tL21pa29sYWx5c2Vua28vY29udmV4LWh1bGwpIG1vZHVsZSB0aGF0IGltcGxlbWVudHMgYVxuICogW21vbm90b25lIGNoYWluIGh1bGxdKGh0dHA6Ly9lbi53aWtpYm9va3Mub3JnL3dpa2kvQWxnb3JpdGhtX0ltcGxlbWVudGF0aW9uL0dlb21ldHJ5L0NvbnZleF9odWxsL01vbm90b25lX2NoYWluKS5cbiAqXG4gKiBAbmFtZSBjb252ZXhcbiAqIEBwYXJhbSB7R2VvSlNPTn0gZ2VvanNvbiBpbnB1dCBGZWF0dXJlIG9yIEZlYXR1cmVDb2xsZWN0aW9uXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnM9e31dIE9wdGlvbmFsIHBhcmFtZXRlcnNcbiAqIEBwYXJhbSB7bnVtYmVyfSBbb3B0aW9ucy5jb25jYXZpdHk9SW5maW5pdHldIDEgLSB0aGluIHNoYXBlLiBJbmZpbml0eSAtIGNvbnZleCBodWxsLlxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zLnByb3BlcnRpZXM9e31dIFRyYW5zbGF0ZSBQcm9wZXJ0aWVzIHRvIEZlYXR1cmVcbiAqIEByZXR1cm5zIHtGZWF0dXJlPFBvbHlnb24+fSBhIGNvbnZleCBodWxsXG4gKiBAZXhhbXBsZVxuICogdmFyIHBvaW50cyA9IHR1cmYuZmVhdHVyZUNvbGxlY3Rpb24oW1xuICogICB0dXJmLnBvaW50KFsxMC4xOTUzMTIsIDQzLjc1NTIyNV0pLFxuICogICB0dXJmLnBvaW50KFsxMC40MDQwNTIsIDQzLjg0MjQ1MTFdKSxcbiAqICAgdHVyZi5wb2ludChbMTAuNTc5ODMzLCA0My42NTk5MjRdKSxcbiAqICAgdHVyZi5wb2ludChbMTAuMzYwMTA3LCA0My41MTY2ODhdKSxcbiAqICAgdHVyZi5wb2ludChbMTAuMTQwMzgsIDQzLjU4ODM0OF0pLFxuICogICB0dXJmLnBvaW50KFsxMC4xOTUzMTIsIDQzLjc1NTIyNV0pXG4gKiBdKTtcbiAqXG4gKiB2YXIgaHVsbCA9IHR1cmYuY29udmV4KHBvaW50cyk7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW3BvaW50cywgaHVsbF1cbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29udmV4KGdlb2pzb24sIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIC8vIERlZmF1bHQgcGFyYW1ldGVyc1xuICAgIG9wdGlvbnMuY29uY2F2aXR5ID0gb3B0aW9ucy5jb25jYXZpdHkgfHwgSW5maW5pdHk7XG4gICAgLy8gQ29udGFpbmVyXG4gICAgdmFyIHBvaW50cyA9IFtdO1xuICAgIC8vIENvbnZlcnQgYWxsIHBvaW50cyB0byBmbGF0IDJEIGNvb3JkaW5hdGUgQXJyYXlcbiAgICBjb29yZEVhY2goZ2VvanNvbiwgZnVuY3Rpb24gKGNvb3JkKSB7XG4gICAgICAgIHBvaW50cy5wdXNoKFtjb29yZFswXSwgY29vcmRbMV1dKTtcbiAgICB9KTtcbiAgICBpZiAoIXBvaW50cy5sZW5ndGgpIHtcbiAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgfVxuICAgIHZhciBjb252ZXhIdWxsID0gY29uY2F2ZW1hbihwb2ludHMsIG9wdGlvbnMuY29uY2F2aXR5KTtcbiAgICAvLyBDb252ZXggaHVsbCBzaG91bGQgaGF2ZSBhdCBsZWFzdCAzIGRpZmZlcmVudCB2ZXJ0aWNlcyBpbiBvcmRlciB0byBjcmVhdGUgYSB2YWxpZCBwb2x5Z29uXG4gICAgaWYgKGNvbnZleEh1bGwubGVuZ3RoID4gMykge1xuICAgICAgICByZXR1cm4gcG9seWdvbihbY29udmV4SHVsbF0pO1xuICAgIH1cbiAgICByZXR1cm4gbnVsbDtcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+convex@6.5.0/node_modules/@turf/convex/dist/es/index.js\n");

/***/ })

};
;