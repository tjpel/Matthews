"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/skmeans@0.9.7";
exports.ids = ["vendor-chunks/skmeans@0.9.7"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/distance.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/distance.js ***!
  \*************************************************************************************/
/***/ ((module) => {

eval("\n\nmodule.exports = {\n\t/**\n  * Euclidean distance\n  */\n\teudist: function eudist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar d = (v1[i] || 0) - (v2[i] || 0);\n\t\t\tsum += d * d;\n\t\t}\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\tmandist: function mandist(v1, v2, sqrt) {\n\t\tvar len = v1.length;\n\t\tvar sum = 0;\n\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tsum += Math.abs((v1[i] || 0) - (v2[i] || 0));\n\t\t}\n\n\t\t// Square root not really needed\n\t\treturn sqrt ? Math.sqrt(sum) : sum;\n\t},\n\n\n\t/**\n  * Unidimensional distance\n  */\n\tdist: function dist(v1, v2, sqrt) {\n\t\tvar d = Math.abs(v1 - v2);\n\t\treturn sqrt ? d : d * d;\n\t}\n};\n//# sourceMappingURL=distance.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ttZWFuc0AwLjkuNy9ub2RlX21vZHVsZXMvc2ttZWFucy9kaXN0L25vZGUvZGlzdGFuY2UuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEVBQUU7QUFDRjtBQUNBO0FBQ0E7O0FBRUEsa0JBQWtCLFNBQVM7QUFDM0I7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsRUFBRTs7O0FBR0Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9za21lYW5zQDAuOS43L25vZGVfbW9kdWxlcy9za21lYW5zL2Rpc3Qvbm9kZS9kaXN0YW5jZS5qcz85MWVhIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcblx0LyoqXG4gICogRXVjbGlkZWFuIGRpc3RhbmNlXG4gICovXG5cdGV1ZGlzdDogZnVuY3Rpb24gZXVkaXN0KHYxLCB2Miwgc3FydCkge1xuXHRcdHZhciBsZW4gPSB2MS5sZW5ndGg7XG5cdFx0dmFyIHN1bSA9IDA7XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0XHR2YXIgZCA9ICh2MVtpXSB8fCAwKSAtICh2MltpXSB8fCAwKTtcblx0XHRcdHN1bSArPSBkICogZDtcblx0XHR9XG5cdFx0Ly8gU3F1YXJlIHJvb3Qgbm90IHJlYWxseSBuZWVkZWRcblx0XHRyZXR1cm4gc3FydCA/IE1hdGguc3FydChzdW0pIDogc3VtO1xuXHR9LFxuXHRtYW5kaXN0OiBmdW5jdGlvbiBtYW5kaXN0KHYxLCB2Miwgc3FydCkge1xuXHRcdHZhciBsZW4gPSB2MS5sZW5ndGg7XG5cdFx0dmFyIHN1bSA9IDA7XG5cblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0XHRzdW0gKz0gTWF0aC5hYnMoKHYxW2ldIHx8IDApIC0gKHYyW2ldIHx8IDApKTtcblx0XHR9XG5cblx0XHQvLyBTcXVhcmUgcm9vdCBub3QgcmVhbGx5IG5lZWRlZFxuXHRcdHJldHVybiBzcXJ0ID8gTWF0aC5zcXJ0KHN1bSkgOiBzdW07XG5cdH0sXG5cblxuXHQvKipcbiAgKiBVbmlkaW1lbnNpb25hbCBkaXN0YW5jZVxuICAqL1xuXHRkaXN0OiBmdW5jdGlvbiBkaXN0KHYxLCB2Miwgc3FydCkge1xuXHRcdHZhciBkID0gTWF0aC5hYnModjEgLSB2Mik7XG5cdFx0cmV0dXJuIHNxcnQgPyBkIDogZCAqIGQ7XG5cdH1cbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1kaXN0YW5jZS5qcy5tYXBcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/distance.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/kinit.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/kinit.js ***!
  \**********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\nvar Distance = __webpack_require__(/*! ./distance.js */ \"(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/distance.js\"),\n    eudist = Distance.eudist,\n    dist = Distance.dist;\n\nmodule.exports = {\n\tkmrand: function kmrand(data, k) {\n\t\tvar map = {},\n\t\t    ks = [],\n\t\t    t = k << 2;\n\t\tvar len = data.length;\n\t\tvar multi = data[0].length > 0;\n\n\t\twhile (ks.length < k && t-- > 0) {\n\t\t\tvar d = data[Math.floor(Math.random() * len)];\n\t\t\tvar key = multi ? d.join(\"_\") : \"\" + d;\n\t\t\tif (!map[key]) {\n\t\t\t\tmap[key] = true;\n\t\t\t\tks.push(d);\n\t\t\t}\n\t\t}\n\n\t\tif (ks.length < k) throw new Error(\"Error initializating clusters\");else return ks;\n\t},\n\n\n\t/**\n  * K-means++ initial centroid selection\n  */\n\tkmpp: function kmpp(data, k) {\n\t\tvar distance = data[0].length ? eudist : dist;\n\t\tvar ks = [],\n\t\t    len = data.length;\n\t\tvar multi = data[0].length > 0;\n\t\tvar map = {};\n\n\t\t// First random centroid\n\t\tvar c = data[Math.floor(Math.random() * len)];\n\t\tvar key = multi ? c.join(\"_\") : \"\" + c;\n\t\tks.push(c);\n\t\tmap[key] = true;\n\n\t\t// Retrieve next centroids\n\t\twhile (ks.length < k) {\n\t\t\t// Min Distances between current centroids and data points\n\t\t\tvar dists = [],\n\t\t\t    lk = ks.length;\n\t\t\tvar dsum = 0,\n\t\t\t    prs = [];\n\n\t\t\tfor (var i = 0; i < len; i++) {\n\t\t\t\tvar min = Infinity;\n\t\t\t\tfor (var j = 0; j < lk; j++) {\n\t\t\t\t\tvar _dist = distance(data[i], ks[j]);\n\t\t\t\t\tif (_dist <= min) min = _dist;\n\t\t\t\t}\n\t\t\t\tdists[i] = min;\n\t\t\t}\n\n\t\t\t// Sum all min distances\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tdsum += dists[_i];\n\t\t\t}\n\n\t\t\t// Probabilities and cummulative prob (cumsum)\n\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\tprs[_i2] = { i: _i2, v: data[_i2], pr: dists[_i2] / dsum, cs: 0 };\n\t\t\t}\n\n\t\t\t// Sort Probabilities\n\t\t\tprs.sort(function (a, b) {\n\t\t\t\treturn a.pr - b.pr;\n\t\t\t});\n\n\t\t\t// Cummulative Probabilities\n\t\t\tprs[0].cs = prs[0].pr;\n\t\t\tfor (var _i3 = 1; _i3 < len; _i3++) {\n\t\t\t\tprs[_i3].cs = prs[_i3 - 1].cs + prs[_i3].pr;\n\t\t\t}\n\n\t\t\t// Randomize\n\t\t\tvar rnd = Math.random();\n\n\t\t\t// Gets only the items whose cumsum >= rnd\n\t\t\tvar idx = 0;\n\t\t\twhile (idx < len - 1 && prs[idx++].cs < rnd) {}\n\t\t\tks.push(prs[idx - 1].v);\n\t\t\t/*\n   let done = false;\n   while(!done) {\n   \t// this is our new centroid\n   \tc = prs[idx-1].v\n   \tkey = multi? c.join(\"_\") : `${c}`;\n   \tif(!map[key]) {\n   \t\tmap[key] = true;\n   \t\tks.push(c);\n   \t\tdone = true;\n   \t}\n   \telse {\n   \t\tidx++;\n   \t}\n   }\n   */\n\t\t}\n\n\t\treturn ks;\n\t}\n};\n//# sourceMappingURL=kinit.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ttZWFuc0AwLjkuNy9ub2RlX21vZHVsZXMvc2ttZWFucy9kaXN0L25vZGUva2luaXQuanMiLCJtYXBwaW5ncyI6IkFBQWE7O0FBRWIsZUFBZSxtQkFBTyxDQUFDLDBHQUFlO0FBQ3RDO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLHNFQUFzRTtBQUN0RSxFQUFFOzs7QUFHRjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxtQkFBbUIsU0FBUztBQUM1QjtBQUNBLG9CQUFvQixRQUFRO0FBQzVCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxvQkFBb0IsVUFBVTtBQUM5QjtBQUNBOztBQUVBO0FBQ0EscUJBQXFCLFdBQVc7QUFDaEMsaUJBQWlCO0FBQ2pCOztBQUVBO0FBQ0E7QUFDQTtBQUNBLElBQUk7O0FBRUo7QUFDQTtBQUNBLHFCQUFxQixXQUFXO0FBQ2hDO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsRUFBRTtBQUNwQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9za21lYW5zQDAuOS43L25vZGVfbW9kdWxlcy9za21lYW5zL2Rpc3Qvbm9kZS9raW5pdC5qcz8wY2QxIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuXG52YXIgRGlzdGFuY2UgPSByZXF1aXJlKFwiLi9kaXN0YW5jZS5qc1wiKSxcbiAgICBldWRpc3QgPSBEaXN0YW5jZS5ldWRpc3QsXG4gICAgZGlzdCA9IERpc3RhbmNlLmRpc3Q7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuXHRrbXJhbmQ6IGZ1bmN0aW9uIGttcmFuZChkYXRhLCBrKSB7XG5cdFx0dmFyIG1hcCA9IHt9LFxuXHRcdCAgICBrcyA9IFtdLFxuXHRcdCAgICB0ID0gayA8PCAyO1xuXHRcdHZhciBsZW4gPSBkYXRhLmxlbmd0aDtcblx0XHR2YXIgbXVsdGkgPSBkYXRhWzBdLmxlbmd0aCA+IDA7XG5cblx0XHR3aGlsZSAoa3MubGVuZ3RoIDwgayAmJiB0LS0gPiAwKSB7XG5cdFx0XHR2YXIgZCA9IGRhdGFbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogbGVuKV07XG5cdFx0XHR2YXIga2V5ID0gbXVsdGkgPyBkLmpvaW4oXCJfXCIpIDogXCJcIiArIGQ7XG5cdFx0XHRpZiAoIW1hcFtrZXldKSB7XG5cdFx0XHRcdG1hcFtrZXldID0gdHJ1ZTtcblx0XHRcdFx0a3MucHVzaChkKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoa3MubGVuZ3RoIDwgaykgdGhyb3cgbmV3IEVycm9yKFwiRXJyb3IgaW5pdGlhbGl6YXRpbmcgY2x1c3RlcnNcIik7ZWxzZSByZXR1cm4ga3M7XG5cdH0sXG5cblxuXHQvKipcbiAgKiBLLW1lYW5zKysgaW5pdGlhbCBjZW50cm9pZCBzZWxlY3Rpb25cbiAgKi9cblx0a21wcDogZnVuY3Rpb24ga21wcChkYXRhLCBrKSB7XG5cdFx0dmFyIGRpc3RhbmNlID0gZGF0YVswXS5sZW5ndGggPyBldWRpc3QgOiBkaXN0O1xuXHRcdHZhciBrcyA9IFtdLFxuXHRcdCAgICBsZW4gPSBkYXRhLmxlbmd0aDtcblx0XHR2YXIgbXVsdGkgPSBkYXRhWzBdLmxlbmd0aCA+IDA7XG5cdFx0dmFyIG1hcCA9IHt9O1xuXG5cdFx0Ly8gRmlyc3QgcmFuZG9tIGNlbnRyb2lkXG5cdFx0dmFyIGMgPSBkYXRhW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGxlbildO1xuXHRcdHZhciBrZXkgPSBtdWx0aSA/IGMuam9pbihcIl9cIikgOiBcIlwiICsgYztcblx0XHRrcy5wdXNoKGMpO1xuXHRcdG1hcFtrZXldID0gdHJ1ZTtcblxuXHRcdC8vIFJldHJpZXZlIG5leHQgY2VudHJvaWRzXG5cdFx0d2hpbGUgKGtzLmxlbmd0aCA8IGspIHtcblx0XHRcdC8vIE1pbiBEaXN0YW5jZXMgYmV0d2VlbiBjdXJyZW50IGNlbnRyb2lkcyBhbmQgZGF0YSBwb2ludHNcblx0XHRcdHZhciBkaXN0cyA9IFtdLFxuXHRcdFx0ICAgIGxrID0ga3MubGVuZ3RoO1xuXHRcdFx0dmFyIGRzdW0gPSAwLFxuXHRcdFx0ICAgIHBycyA9IFtdO1xuXG5cdFx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0XHRcdHZhciBtaW4gPSBJbmZpbml0eTtcblx0XHRcdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBsazsgaisrKSB7XG5cdFx0XHRcdFx0dmFyIF9kaXN0ID0gZGlzdGFuY2UoZGF0YVtpXSwga3Nbal0pO1xuXHRcdFx0XHRcdGlmIChfZGlzdCA8PSBtaW4pIG1pbiA9IF9kaXN0O1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRpc3RzW2ldID0gbWluO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdW0gYWxsIG1pbiBkaXN0YW5jZXNcblx0XHRcdGZvciAodmFyIF9pID0gMDsgX2kgPCBsZW47IF9pKyspIHtcblx0XHRcdFx0ZHN1bSArPSBkaXN0c1tfaV07XG5cdFx0XHR9XG5cblx0XHRcdC8vIFByb2JhYmlsaXRpZXMgYW5kIGN1bW11bGF0aXZlIHByb2IgKGN1bXN1bSlcblx0XHRcdGZvciAodmFyIF9pMiA9IDA7IF9pMiA8IGxlbjsgX2kyKyspIHtcblx0XHRcdFx0cHJzW19pMl0gPSB7IGk6IF9pMiwgdjogZGF0YVtfaTJdLCBwcjogZGlzdHNbX2kyXSAvIGRzdW0sIGNzOiAwIH07XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNvcnQgUHJvYmFiaWxpdGllc1xuXHRcdFx0cHJzLnNvcnQoZnVuY3Rpb24gKGEsIGIpIHtcblx0XHRcdFx0cmV0dXJuIGEucHIgLSBiLnByO1xuXHRcdFx0fSk7XG5cblx0XHRcdC8vIEN1bW11bGF0aXZlIFByb2JhYmlsaXRpZXNcblx0XHRcdHByc1swXS5jcyA9IHByc1swXS5wcjtcblx0XHRcdGZvciAodmFyIF9pMyA9IDE7IF9pMyA8IGxlbjsgX2kzKyspIHtcblx0XHRcdFx0cHJzW19pM10uY3MgPSBwcnNbX2kzIC0gMV0uY3MgKyBwcnNbX2kzXS5wcjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUmFuZG9taXplXG5cdFx0XHR2YXIgcm5kID0gTWF0aC5yYW5kb20oKTtcblxuXHRcdFx0Ly8gR2V0cyBvbmx5IHRoZSBpdGVtcyB3aG9zZSBjdW1zdW0gPj0gcm5kXG5cdFx0XHR2YXIgaWR4ID0gMDtcblx0XHRcdHdoaWxlIChpZHggPCBsZW4gLSAxICYmIHByc1tpZHgrK10uY3MgPCBybmQpIHt9XG5cdFx0XHRrcy5wdXNoKHByc1tpZHggLSAxXS52KTtcblx0XHRcdC8qXG4gICBsZXQgZG9uZSA9IGZhbHNlO1xuICAgd2hpbGUoIWRvbmUpIHtcbiAgIFx0Ly8gdGhpcyBpcyBvdXIgbmV3IGNlbnRyb2lkXG4gICBcdGMgPSBwcnNbaWR4LTFdLnZcbiAgIFx0a2V5ID0gbXVsdGk/IGMuam9pbihcIl9cIikgOiBgJHtjfWA7XG4gICBcdGlmKCFtYXBba2V5XSkge1xuICAgXHRcdG1hcFtrZXldID0gdHJ1ZTtcbiAgIFx0XHRrcy5wdXNoKGMpO1xuICAgXHRcdGRvbmUgPSB0cnVlO1xuICAgXHR9XG4gICBcdGVsc2Uge1xuICAgXHRcdGlkeCsrO1xuICAgXHR9XG4gICB9XG4gICAqL1xuXHRcdH1cblxuXHRcdHJldHVybiBrcztcblx0fVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWtpbml0LmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/kinit.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/main.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/main.js ***!
  \*********************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\n\n/*jshint esversion: 6 */\n\nvar Distance = __webpack_require__(/*! ./distance.js */ \"(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/distance.js\"),\n    ClusterInit = __webpack_require__(/*! ./kinit.js */ \"(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/kinit.js\"),\n    eudist = Distance.eudist,\n    mandist = Distance.mandist,\n    dist = Distance.dist,\n    kmrand = ClusterInit.kmrand,\n    kmpp = ClusterInit.kmpp;\n\nvar MAX = 10000;\n\n/**\n * Inits an array with values\n */\nfunction init(len, val, v) {\n\tv = v || [];\n\tfor (var i = 0; i < len; i++) {\n\t\tv[i] = val;\n\t}return v;\n}\n\nfunction skmeans(data, k, initial, maxit) {\n\tvar ks = [],\n\t    old = [],\n\t    idxs = [],\n\t    dist = [];\n\tvar conv = false,\n\t    it = maxit || MAX;\n\tvar len = data.length,\n\t    vlen = data[0].length,\n\t    multi = vlen > 0;\n\tvar count = [];\n\n\tif (!initial) {\n\t\tvar _idxs = {};\n\t\twhile (ks.length < k) {\n\t\t\tvar idx = Math.floor(Math.random() * len);\n\t\t\tif (!_idxs[idx]) {\n\t\t\t\t_idxs[idx] = true;\n\t\t\t\tks.push(data[idx]);\n\t\t\t}\n\t\t}\n\t} else if (initial == \"kmrand\") {\n\t\tks = kmrand(data, k);\n\t} else if (initial == \"kmpp\") {\n\t\tks = kmpp(data, k);\n\t} else {\n\t\tks = initial;\n\t}\n\n\tdo {\n\t\t// Reset k count\n\t\tinit(k, 0, count);\n\n\t\t// For each value in data, find the nearest centroid\n\t\tfor (var i = 0; i < len; i++) {\n\t\t\tvar min = Infinity,\n\t\t\t    _idx = 0;\n\t\t\tfor (var j = 0; j < k; j++) {\n\t\t\t\t// Multidimensional or unidimensional\n\t\t\t\tvar dist = multi ? eudist(data[i], ks[j]) : Math.abs(data[i] - ks[j]);\n\t\t\t\tif (dist <= min) {\n\t\t\t\t\tmin = dist;\n\t\t\t\t\t_idx = j;\n\t\t\t\t}\n\t\t\t}\n\t\t\tidxs[i] = _idx; // Index of the selected centroid for that value\n\t\t\tcount[_idx]++; // Number of values for this centroid\n\t\t}\n\n\t\t// Recalculate centroids\n\t\tvar sum = [],\n\t\t    old = [],\n\t\t    dif = 0;\n\t\tfor (var _j = 0; _j < k; _j++) {\n\t\t\t// Multidimensional or unidimensional\n\t\t\tsum[_j] = multi ? init(vlen, 0, sum[_j]) : 0;\n\t\t\told[_j] = ks[_j];\n\t\t}\n\n\t\t// If multidimensional\n\t\tif (multi) {\n\t\t\tfor (var _j2 = 0; _j2 < k; _j2++) {\n\t\t\t\tks[_j2] = [];\n\t\t\t} // Sum values and count for each centroid\n\t\t\tfor (var _i = 0; _i < len; _i++) {\n\t\t\t\tvar _idx2 = idxs[_i],\n\t\t\t\t    // Centroid for that item\n\t\t\t\tvsum = sum[_idx2],\n\t\t\t\t    // Sum values for this centroid\n\t\t\t\tvect = data[_i]; // Current vector\n\n\t\t\t\t// Accumulate value on the centroid for current vector\n\t\t\t\tfor (var h = 0; h < vlen; h++) {\n\t\t\t\t\tvsum[h] += vect[h];\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Calculate the average for each centroid\n\t\t\tconv = true;\n\t\t\tfor (var _j3 = 0; _j3 < k; _j3++) {\n\t\t\t\tvar ksj = ks[_j3],\n\t\t\t\t    // Current centroid\n\t\t\t\tsumj = sum[_j3],\n\t\t\t\t    // Accumulated centroid values\n\t\t\t\toldj = old[_j3],\n\t\t\t\t    // Old centroid value\n\t\t\t\tcj = count[_j3]; // Number of elements for this centroid\n\n\t\t\t\t// New average\n\t\t\t\tfor (var _h = 0; _h < vlen; _h++) {\n\t\t\t\t\tksj[_h] = sumj[_h] / cj || 0; // New centroid\n\t\t\t\t}\n\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tif (conv) {\n\t\t\t\t\tfor (var _h2 = 0; _h2 < vlen; _h2++) {\n\t\t\t\t\t\tif (oldj[_h2] != ksj[_h2]) {\n\t\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// If unidimensional\n\t\telse {\n\t\t\t\t// Sum values and count for each centroid\n\t\t\t\tfor (var _i2 = 0; _i2 < len; _i2++) {\n\t\t\t\t\tvar _idx3 = idxs[_i2];\n\t\t\t\t\tsum[_idx3] += data[_i2];\n\t\t\t\t}\n\t\t\t\t// Calculate the average for each centroid\n\t\t\t\tfor (var _j4 = 0; _j4 < k; _j4++) {\n\t\t\t\t\tks[_j4] = sum[_j4] / count[_j4] || 0; // New centroid\n\t\t\t\t}\n\t\t\t\t// Find if centroids have moved\n\t\t\t\tconv = true;\n\t\t\t\tfor (var _j5 = 0; _j5 < k; _j5++) {\n\t\t\t\t\tif (old[_j5] != ks[_j5]) {\n\t\t\t\t\t\tconv = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\tconv = conv || --it <= 0;\n\t} while (!conv);\n\n\treturn {\n\t\tit: MAX - it,\n\t\tk: k,\n\t\tidxs: idxs,\n\t\tcentroids: ks\n\t};\n}\n\nmodule.exports = skmeans;\n//# sourceMappingURL=main.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vc2ttZWFuc0AwLjkuNy9ub2RlX21vZHVsZXMvc2ttZWFucy9kaXN0L25vZGUvbWFpbi5qcyIsIm1hcHBpbmdzIjoiQUFBYTs7QUFFYjs7QUFFQSxlQUFlLG1CQUFPLENBQUMsMEdBQWU7QUFDdEMsa0JBQWtCLG1CQUFPLENBQUMsb0dBQVk7QUFDdEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCLFNBQVM7QUFDMUI7QUFDQSxFQUFFO0FBQ0Y7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQSxHQUFHO0FBQ0g7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQSxrQkFBa0IsU0FBUztBQUMzQjtBQUNBO0FBQ0EsbUJBQW1CLE9BQU87QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkIsa0JBQWtCO0FBQ2xCOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLFFBQVE7QUFDM0I7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHFCQUFxQixTQUFTO0FBQzlCO0FBQ0EsS0FBSztBQUNMLG9CQUFvQixVQUFVO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBLG9CQUFvQixVQUFVO0FBQzlCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsU0FBUztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUI7O0FBRXJCO0FBQ0EscUJBQXFCLFdBQVc7QUFDaEMsbUNBQW1DO0FBQ25DOztBQUVBO0FBQ0E7QUFDQSx1QkFBdUIsWUFBWTtBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFdBQVc7QUFDakM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsU0FBUztBQUMvQiwyQ0FBMkM7QUFDM0M7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLFNBQVM7QUFDL0I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9za21lYW5zQDAuOS43L25vZGVfbW9kdWxlcy9za21lYW5zL2Rpc3Qvbm9kZS9tYWluLmpzPzRlNzUiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qanNoaW50IGVzdmVyc2lvbjogNiAqL1xuXG52YXIgRGlzdGFuY2UgPSByZXF1aXJlKFwiLi9kaXN0YW5jZS5qc1wiKSxcbiAgICBDbHVzdGVySW5pdCA9IHJlcXVpcmUoXCIuL2tpbml0LmpzXCIpLFxuICAgIGV1ZGlzdCA9IERpc3RhbmNlLmV1ZGlzdCxcbiAgICBtYW5kaXN0ID0gRGlzdGFuY2UubWFuZGlzdCxcbiAgICBkaXN0ID0gRGlzdGFuY2UuZGlzdCxcbiAgICBrbXJhbmQgPSBDbHVzdGVySW5pdC5rbXJhbmQsXG4gICAga21wcCA9IENsdXN0ZXJJbml0LmttcHA7XG5cbnZhciBNQVggPSAxMDAwMDtcblxuLyoqXG4gKiBJbml0cyBhbiBhcnJheSB3aXRoIHZhbHVlc1xuICovXG5mdW5jdGlvbiBpbml0KGxlbiwgdmFsLCB2KSB7XG5cdHYgPSB2IHx8IFtdO1xuXHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0dltpXSA9IHZhbDtcblx0fXJldHVybiB2O1xufVxuXG5mdW5jdGlvbiBza21lYW5zKGRhdGEsIGssIGluaXRpYWwsIG1heGl0KSB7XG5cdHZhciBrcyA9IFtdLFxuXHQgICAgb2xkID0gW10sXG5cdCAgICBpZHhzID0gW10sXG5cdCAgICBkaXN0ID0gW107XG5cdHZhciBjb252ID0gZmFsc2UsXG5cdCAgICBpdCA9IG1heGl0IHx8IE1BWDtcblx0dmFyIGxlbiA9IGRhdGEubGVuZ3RoLFxuXHQgICAgdmxlbiA9IGRhdGFbMF0ubGVuZ3RoLFxuXHQgICAgbXVsdGkgPSB2bGVuID4gMDtcblx0dmFyIGNvdW50ID0gW107XG5cblx0aWYgKCFpbml0aWFsKSB7XG5cdFx0dmFyIF9pZHhzID0ge307XG5cdFx0d2hpbGUgKGtzLmxlbmd0aCA8IGspIHtcblx0XHRcdHZhciBpZHggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBsZW4pO1xuXHRcdFx0aWYgKCFfaWR4c1tpZHhdKSB7XG5cdFx0XHRcdF9pZHhzW2lkeF0gPSB0cnVlO1xuXHRcdFx0XHRrcy5wdXNoKGRhdGFbaWR4XSk7XG5cdFx0XHR9XG5cdFx0fVxuXHR9IGVsc2UgaWYgKGluaXRpYWwgPT0gXCJrbXJhbmRcIikge1xuXHRcdGtzID0ga21yYW5kKGRhdGEsIGspO1xuXHR9IGVsc2UgaWYgKGluaXRpYWwgPT0gXCJrbXBwXCIpIHtcblx0XHRrcyA9IGttcHAoZGF0YSwgayk7XG5cdH0gZWxzZSB7XG5cdFx0a3MgPSBpbml0aWFsO1xuXHR9XG5cblx0ZG8ge1xuXHRcdC8vIFJlc2V0IGsgY291bnRcblx0XHRpbml0KGssIDAsIGNvdW50KTtcblxuXHRcdC8vIEZvciBlYWNoIHZhbHVlIGluIGRhdGEsIGZpbmQgdGhlIG5lYXJlc3QgY2VudHJvaWRcblx0XHRmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG5cdFx0XHR2YXIgbWluID0gSW5maW5pdHksXG5cdFx0XHQgICAgX2lkeCA9IDA7XG5cdFx0XHRmb3IgKHZhciBqID0gMDsgaiA8IGs7IGorKykge1xuXHRcdFx0XHQvLyBNdWx0aWRpbWVuc2lvbmFsIG9yIHVuaWRpbWVuc2lvbmFsXG5cdFx0XHRcdHZhciBkaXN0ID0gbXVsdGkgPyBldWRpc3QoZGF0YVtpXSwga3Nbal0pIDogTWF0aC5hYnMoZGF0YVtpXSAtIGtzW2pdKTtcblx0XHRcdFx0aWYgKGRpc3QgPD0gbWluKSB7XG5cdFx0XHRcdFx0bWluID0gZGlzdDtcblx0XHRcdFx0XHRfaWR4ID0gajtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWR4c1tpXSA9IF9pZHg7IC8vIEluZGV4IG9mIHRoZSBzZWxlY3RlZCBjZW50cm9pZCBmb3IgdGhhdCB2YWx1ZVxuXHRcdFx0Y291bnRbX2lkeF0rKzsgLy8gTnVtYmVyIG9mIHZhbHVlcyBmb3IgdGhpcyBjZW50cm9pZFxuXHRcdH1cblxuXHRcdC8vIFJlY2FsY3VsYXRlIGNlbnRyb2lkc1xuXHRcdHZhciBzdW0gPSBbXSxcblx0XHQgICAgb2xkID0gW10sXG5cdFx0ICAgIGRpZiA9IDA7XG5cdFx0Zm9yICh2YXIgX2ogPSAwOyBfaiA8IGs7IF9qKyspIHtcblx0XHRcdC8vIE11bHRpZGltZW5zaW9uYWwgb3IgdW5pZGltZW5zaW9uYWxcblx0XHRcdHN1bVtfal0gPSBtdWx0aSA/IGluaXQodmxlbiwgMCwgc3VtW19qXSkgOiAwO1xuXHRcdFx0b2xkW19qXSA9IGtzW19qXTtcblx0XHR9XG5cblx0XHQvLyBJZiBtdWx0aWRpbWVuc2lvbmFsXG5cdFx0aWYgKG11bHRpKSB7XG5cdFx0XHRmb3IgKHZhciBfajIgPSAwOyBfajIgPCBrOyBfajIrKykge1xuXHRcdFx0XHRrc1tfajJdID0gW107XG5cdFx0XHR9IC8vIFN1bSB2YWx1ZXMgYW5kIGNvdW50IGZvciBlYWNoIGNlbnRyb2lkXG5cdFx0XHRmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGVuOyBfaSsrKSB7XG5cdFx0XHRcdHZhciBfaWR4MiA9IGlkeHNbX2ldLFxuXHRcdFx0XHQgICAgLy8gQ2VudHJvaWQgZm9yIHRoYXQgaXRlbVxuXHRcdFx0XHR2c3VtID0gc3VtW19pZHgyXSxcblx0XHRcdFx0ICAgIC8vIFN1bSB2YWx1ZXMgZm9yIHRoaXMgY2VudHJvaWRcblx0XHRcdFx0dmVjdCA9IGRhdGFbX2ldOyAvLyBDdXJyZW50IHZlY3RvclxuXG5cdFx0XHRcdC8vIEFjY3VtdWxhdGUgdmFsdWUgb24gdGhlIGNlbnRyb2lkIGZvciBjdXJyZW50IHZlY3RvclxuXHRcdFx0XHRmb3IgKHZhciBoID0gMDsgaCA8IHZsZW47IGgrKykge1xuXHRcdFx0XHRcdHZzdW1baF0gKz0gdmVjdFtoXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0Ly8gQ2FsY3VsYXRlIHRoZSBhdmVyYWdlIGZvciBlYWNoIGNlbnRyb2lkXG5cdFx0XHRjb252ID0gdHJ1ZTtcblx0XHRcdGZvciAodmFyIF9qMyA9IDA7IF9qMyA8IGs7IF9qMysrKSB7XG5cdFx0XHRcdHZhciBrc2ogPSBrc1tfajNdLFxuXHRcdFx0XHQgICAgLy8gQ3VycmVudCBjZW50cm9pZFxuXHRcdFx0XHRzdW1qID0gc3VtW19qM10sXG5cdFx0XHRcdCAgICAvLyBBY2N1bXVsYXRlZCBjZW50cm9pZCB2YWx1ZXNcblx0XHRcdFx0b2xkaiA9IG9sZFtfajNdLFxuXHRcdFx0XHQgICAgLy8gT2xkIGNlbnRyb2lkIHZhbHVlXG5cdFx0XHRcdGNqID0gY291bnRbX2ozXTsgLy8gTnVtYmVyIG9mIGVsZW1lbnRzIGZvciB0aGlzIGNlbnRyb2lkXG5cblx0XHRcdFx0Ly8gTmV3IGF2ZXJhZ2Vcblx0XHRcdFx0Zm9yICh2YXIgX2ggPSAwOyBfaCA8IHZsZW47IF9oKyspIHtcblx0XHRcdFx0XHRrc2pbX2hdID0gc3VtaltfaF0gLyBjaiB8fCAwOyAvLyBOZXcgY2VudHJvaWRcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEZpbmQgaWYgY2VudHJvaWRzIGhhdmUgbW92ZWRcblx0XHRcdFx0aWYgKGNvbnYpIHtcblx0XHRcdFx0XHRmb3IgKHZhciBfaDIgPSAwOyBfaDIgPCB2bGVuOyBfaDIrKykge1xuXHRcdFx0XHRcdFx0aWYgKG9sZGpbX2gyXSAhPSBrc2pbX2gyXSkge1xuXHRcdFx0XHRcdFx0XHRjb252ID0gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHQvLyBJZiB1bmlkaW1lbnNpb25hbFxuXHRcdGVsc2Uge1xuXHRcdFx0XHQvLyBTdW0gdmFsdWVzIGFuZCBjb3VudCBmb3IgZWFjaCBjZW50cm9pZFxuXHRcdFx0XHRmb3IgKHZhciBfaTIgPSAwOyBfaTIgPCBsZW47IF9pMisrKSB7XG5cdFx0XHRcdFx0dmFyIF9pZHgzID0gaWR4c1tfaTJdO1xuXHRcdFx0XHRcdHN1bVtfaWR4M10gKz0gZGF0YVtfaTJdO1xuXHRcdFx0XHR9XG5cdFx0XHRcdC8vIENhbGN1bGF0ZSB0aGUgYXZlcmFnZSBmb3IgZWFjaCBjZW50cm9pZFxuXHRcdFx0XHRmb3IgKHZhciBfajQgPSAwOyBfajQgPCBrOyBfajQrKykge1xuXHRcdFx0XHRcdGtzW19qNF0gPSBzdW1bX2o0XSAvIGNvdW50W19qNF0gfHwgMDsgLy8gTmV3IGNlbnRyb2lkXG5cdFx0XHRcdH1cblx0XHRcdFx0Ly8gRmluZCBpZiBjZW50cm9pZHMgaGF2ZSBtb3ZlZFxuXHRcdFx0XHRjb252ID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICh2YXIgX2o1ID0gMDsgX2o1IDwgazsgX2o1KyspIHtcblx0XHRcdFx0XHRpZiAob2xkW19qNV0gIT0ga3NbX2o1XSkge1xuXHRcdFx0XHRcdFx0Y29udiA9IGZhbHNlO1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRjb252ID0gY29udiB8fCAtLWl0IDw9IDA7XG5cdH0gd2hpbGUgKCFjb252KTtcblxuXHRyZXR1cm4ge1xuXHRcdGl0OiBNQVggLSBpdCxcblx0XHRrOiBrLFxuXHRcdGlkeHM6IGlkeHMsXG5cdFx0Y2VudHJvaWRzOiBrc1xuXHR9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHNrbWVhbnM7XG4vLyMgc291cmNlTWFwcGluZ1VSTD1tYWluLmpzLm1hcFxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/skmeans@0.9.7/node_modules/skmeans/dist/node/main.js\n");

/***/ })

};
;