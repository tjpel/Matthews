"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+nearest-point-to-line@6.5.0";
exports.ids = ["vendor-chunks/@turf+nearest-point-to-line@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+nearest-point-to-line@6.5.0/node_modules/@turf/nearest-point-to-line/dist/es/index.js":
/*!************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+nearest-point-to-line@6.5.0/node_modules/@turf/nearest-point-to-line/dist/es/index.js ***!
  \************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_invariant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/invariant */ \"(ssr)/./node_modules/.pnpm/@turf+invariant@6.5.0/node_modules/@turf/invariant/dist/es/index.js\");\n/* harmony import */ var _turf_meta__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/meta */ \"(ssr)/./node_modules/.pnpm/@turf+meta@6.5.0/node_modules/@turf/meta/dist/es/index.js\");\n/* harmony import */ var _turf_point_to_line_distance__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/point-to-line-distance */ \"(ssr)/./node_modules/.pnpm/@turf+point-to-line-distance@6.5.0/node_modules/@turf/point-to-line-distance/dist/es/index.js\");\n/* harmony import */ var object_assign__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! object-assign */ \"(ssr)/./node_modules/.pnpm/object-assign@4.1.1/node_modules/object-assign/index.js\");\n\n\n\n\n/**\n * Returns the closest {@link Point|point}, of a {@link FeatureCollection|collection} of points,\n * to a {@link LineString|line}. The returned point has a `dist` property indicating its distance to the line.\n *\n * @name nearestPointToLine\n * @param {FeatureCollection|GeometryCollection<Point>} points Point Collection\n * @param {Feature|Geometry<LineString>} line Line Feature\n * @param {Object} [options] Optional parameters\n * @param {string} [options.units='kilometers'] unit of the output distance property\n * (eg: degrees, radians, miles, or kilometers)\n * @param {Object} [options.properties={}] Translate Properties to Point\n * @returns {Feature<Point>} the closest point\n * @example\n * var pt1 = turf.point([0, 0]);\n * var pt2 = turf.point([0.5, 0.5]);\n * var points = turf.featureCollection([pt1, pt2]);\n * var line = turf.lineString([[1,1], [-1,1]]);\n *\n * var nearest = turf.nearestPointToLine(points, line);\n *\n * //addToMap\n * var addToMap = [nearest, line];\n */\nfunction nearestPointToLine(points, line, options) {\n    if (options === void 0) { options = {}; }\n    var units = options.units;\n    var properties = options.properties || {};\n    // validation\n    var pts = normalize(points);\n    if (!pts.features.length) {\n        throw new Error(\"points must contain features\");\n    }\n    if (!line) {\n        throw new Error(\"line is required\");\n    }\n    if ((0,_turf_invariant__WEBPACK_IMPORTED_MODULE_0__.getType)(line) !== \"LineString\") {\n        throw new Error(\"line must be a LineString\");\n    }\n    var dist = Infinity;\n    var pt = null;\n    (0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.featureEach)(pts, function (point) {\n        var d = (0,_turf_point_to_line_distance__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(point, line, { units: units });\n        if (d < dist) {\n            dist = d;\n            pt = point;\n        }\n    });\n    /**\n     * Translate Properties to final Point, priorities:\n     * 1. options.properties\n     * 2. inherent Point properties\n     * 3. dist custom properties created by NearestPointToLine\n     */\n    if (pt) {\n        pt.properties = object_assign__WEBPACK_IMPORTED_MODULE_3__({ dist: dist }, pt.properties, properties);\n    }\n    // if (pt) { pt.properties = objectAssign({dist}, pt.properties, properties); }\n    return pt;\n}\n/**\n * Convert Collection to FeatureCollection\n *\n * @private\n * @param {FeatureCollection|GeometryCollection} points Points\n * @returns {FeatureCollection<Point>} points\n */\nfunction normalize(points) {\n    var features = [];\n    var type = points.geometry ? points.geometry.type : points.type;\n    switch (type) {\n        case \"GeometryCollection\":\n            (0,_turf_meta__WEBPACK_IMPORTED_MODULE_1__.geomEach)(points, function (geom) {\n                if (geom.type === \"Point\") {\n                    features.push({ type: \"Feature\", properties: {}, geometry: geom });\n                }\n            });\n            return { type: \"FeatureCollection\", features: features };\n        case \"FeatureCollection\":\n            points.features = points.features.filter(function (feature) {\n                return feature.geometry.type === \"Point\";\n            });\n            return points;\n        default:\n            throw new Error(\"points must be a Point Collection\");\n    }\n}\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (nearestPointToLine);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrbmVhcmVzdC1wb2ludC10by1saW5lQDYuNS4wL25vZGVfbW9kdWxlcy9AdHVyZi9uZWFyZXN0LXBvaW50LXRvLWxpbmUvZGlzdC9lcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUEwQztBQUNTO0FBQ1k7QUFDdEI7QUFDekM7QUFDQSx3QkFBd0Isa0JBQWtCLFFBQVEsb0NBQW9DO0FBQ3RGLFNBQVMsc0JBQXNCO0FBQy9CO0FBQ0E7QUFDQSxXQUFXLDZDQUE2QztBQUN4RCxXQUFXLDhCQUE4QjtBQUN6QyxXQUFXLFFBQVE7QUFDbkIsV0FBVyxRQUFRO0FBQ25CO0FBQ0EsV0FBVyxRQUFRLHNCQUFzQjtBQUN6QyxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw4QkFBOEI7QUFDOUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxRQUFRLHdEQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLHVEQUFXO0FBQ2YsZ0JBQWdCLHdFQUFtQixnQkFBZ0IsY0FBYztBQUNqRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QiwwQ0FBWSxHQUFHLFlBQVk7QUFDbkQ7QUFDQSxpQkFBaUIsOEJBQThCLEtBQUs7QUFDcEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsV0FBVyxzQ0FBc0M7QUFDakQsYUFBYSwwQkFBMEI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxvREFBUTtBQUNwQjtBQUNBLG9DQUFvQywrQkFBK0Isa0JBQWtCO0FBQ3JGO0FBQ0EsYUFBYTtBQUNiLHFCQUFxQjtBQUNyQjtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlFQUFlLGtCQUFrQixFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbWZ2YWx1ZS1mcm9udGVuZC8uL25vZGVfbW9kdWxlcy8ucG5wbS9AdHVyZituZWFyZXN0LXBvaW50LXRvLWxpbmVANi41LjAvbm9kZV9tb2R1bGVzL0B0dXJmL25lYXJlc3QtcG9pbnQtdG8tbGluZS9kaXN0L2VzL2luZGV4LmpzPzk2MGUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZ2V0VHlwZSB9IGZyb20gXCJAdHVyZi9pbnZhcmlhbnRcIjtcbmltcG9ydCB7IGZlYXR1cmVFYWNoLCBnZW9tRWFjaCB9IGZyb20gXCJAdHVyZi9tZXRhXCI7XG5pbXBvcnQgcG9pbnRUb0xpbmVEaXN0YW5jZSBmcm9tIFwiQHR1cmYvcG9pbnQtdG8tbGluZS1kaXN0YW5jZVwiO1xuaW1wb3J0IG9iamVjdEFzc2lnbiBmcm9tIFwib2JqZWN0LWFzc2lnblwiO1xuLyoqXG4gKiBSZXR1cm5zIHRoZSBjbG9zZXN0IHtAbGluayBQb2ludHxwb2ludH0sIG9mIGEge0BsaW5rIEZlYXR1cmVDb2xsZWN0aW9ufGNvbGxlY3Rpb259IG9mIHBvaW50cyxcbiAqIHRvIGEge0BsaW5rIExpbmVTdHJpbmd8bGluZX0uIFRoZSByZXR1cm5lZCBwb2ludCBoYXMgYSBgZGlzdGAgcHJvcGVydHkgaW5kaWNhdGluZyBpdHMgZGlzdGFuY2UgdG8gdGhlIGxpbmUuXG4gKlxuICogQG5hbWUgbmVhcmVzdFBvaW50VG9MaW5lXG4gKiBAcGFyYW0ge0ZlYXR1cmVDb2xsZWN0aW9ufEdlb21ldHJ5Q29sbGVjdGlvbjxQb2ludD59IHBvaW50cyBQb2ludCBDb2xsZWN0aW9uXG4gKiBAcGFyYW0ge0ZlYXR1cmV8R2VvbWV0cnk8TGluZVN0cmluZz59IGxpbmUgTGluZSBGZWF0dXJlXG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIE9wdGlvbmFsIHBhcmFtZXRlcnNcbiAqIEBwYXJhbSB7c3RyaW5nfSBbb3B0aW9ucy51bml0cz0na2lsb21ldGVycyddIHVuaXQgb2YgdGhlIG91dHB1dCBkaXN0YW5jZSBwcm9wZXJ0eVxuICogKGVnOiBkZWdyZWVzLCByYWRpYW5zLCBtaWxlcywgb3Iga2lsb21ldGVycylcbiAqIEBwYXJhbSB7T2JqZWN0fSBbb3B0aW9ucy5wcm9wZXJ0aWVzPXt9XSBUcmFuc2xhdGUgUHJvcGVydGllcyB0byBQb2ludFxuICogQHJldHVybnMge0ZlYXR1cmU8UG9pbnQ+fSB0aGUgY2xvc2VzdCBwb2ludFxuICogQGV4YW1wbGVcbiAqIHZhciBwdDEgPSB0dXJmLnBvaW50KFswLCAwXSk7XG4gKiB2YXIgcHQyID0gdHVyZi5wb2ludChbMC41LCAwLjVdKTtcbiAqIHZhciBwb2ludHMgPSB0dXJmLmZlYXR1cmVDb2xsZWN0aW9uKFtwdDEsIHB0Ml0pO1xuICogdmFyIGxpbmUgPSB0dXJmLmxpbmVTdHJpbmcoW1sxLDFdLCBbLTEsMV1dKTtcbiAqXG4gKiB2YXIgbmVhcmVzdCA9IHR1cmYubmVhcmVzdFBvaW50VG9MaW5lKHBvaW50cywgbGluZSk7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW25lYXJlc3QsIGxpbmVdO1xuICovXG5mdW5jdGlvbiBuZWFyZXN0UG9pbnRUb0xpbmUocG9pbnRzLCBsaW5lLCBvcHRpb25zKSB7XG4gICAgaWYgKG9wdGlvbnMgPT09IHZvaWQgMCkgeyBvcHRpb25zID0ge307IH1cbiAgICB2YXIgdW5pdHMgPSBvcHRpb25zLnVuaXRzO1xuICAgIHZhciBwcm9wZXJ0aWVzID0gb3B0aW9ucy5wcm9wZXJ0aWVzIHx8IHt9O1xuICAgIC8vIHZhbGlkYXRpb25cbiAgICB2YXIgcHRzID0gbm9ybWFsaXplKHBvaW50cyk7XG4gICAgaWYgKCFwdHMuZmVhdHVyZXMubGVuZ3RoKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcInBvaW50cyBtdXN0IGNvbnRhaW4gZmVhdHVyZXNcIik7XG4gICAgfVxuICAgIGlmICghbGluZSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJsaW5lIGlzIHJlcXVpcmVkXCIpO1xuICAgIH1cbiAgICBpZiAoZ2V0VHlwZShsaW5lKSAhPT0gXCJMaW5lU3RyaW5nXCIpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwibGluZSBtdXN0IGJlIGEgTGluZVN0cmluZ1wiKTtcbiAgICB9XG4gICAgdmFyIGRpc3QgPSBJbmZpbml0eTtcbiAgICB2YXIgcHQgPSBudWxsO1xuICAgIGZlYXR1cmVFYWNoKHB0cywgZnVuY3Rpb24gKHBvaW50KSB7XG4gICAgICAgIHZhciBkID0gcG9pbnRUb0xpbmVEaXN0YW5jZShwb2ludCwgbGluZSwgeyB1bml0czogdW5pdHMgfSk7XG4gICAgICAgIGlmIChkIDwgZGlzdCkge1xuICAgICAgICAgICAgZGlzdCA9IGQ7XG4gICAgICAgICAgICBwdCA9IHBvaW50O1xuICAgICAgICB9XG4gICAgfSk7XG4gICAgLyoqXG4gICAgICogVHJhbnNsYXRlIFByb3BlcnRpZXMgdG8gZmluYWwgUG9pbnQsIHByaW9yaXRpZXM6XG4gICAgICogMS4gb3B0aW9ucy5wcm9wZXJ0aWVzXG4gICAgICogMi4gaW5oZXJlbnQgUG9pbnQgcHJvcGVydGllc1xuICAgICAqIDMuIGRpc3QgY3VzdG9tIHByb3BlcnRpZXMgY3JlYXRlZCBieSBOZWFyZXN0UG9pbnRUb0xpbmVcbiAgICAgKi9cbiAgICBpZiAocHQpIHtcbiAgICAgICAgcHQucHJvcGVydGllcyA9IG9iamVjdEFzc2lnbih7IGRpc3Q6IGRpc3QgfSwgcHQucHJvcGVydGllcywgcHJvcGVydGllcyk7XG4gICAgfVxuICAgIC8vIGlmIChwdCkgeyBwdC5wcm9wZXJ0aWVzID0gb2JqZWN0QXNzaWduKHtkaXN0fSwgcHQucHJvcGVydGllcywgcHJvcGVydGllcyk7IH1cbiAgICByZXR1cm4gcHQ7XG59XG4vKipcbiAqIENvbnZlcnQgQ29sbGVjdGlvbiB0byBGZWF0dXJlQ29sbGVjdGlvblxuICpcbiAqIEBwcml2YXRlXG4gKiBAcGFyYW0ge0ZlYXR1cmVDb2xsZWN0aW9ufEdlb21ldHJ5Q29sbGVjdGlvbn0gcG9pbnRzIFBvaW50c1xuICogQHJldHVybnMge0ZlYXR1cmVDb2xsZWN0aW9uPFBvaW50Pn0gcG9pbnRzXG4gKi9cbmZ1bmN0aW9uIG5vcm1hbGl6ZShwb2ludHMpIHtcbiAgICB2YXIgZmVhdHVyZXMgPSBbXTtcbiAgICB2YXIgdHlwZSA9IHBvaW50cy5nZW9tZXRyeSA/IHBvaW50cy5nZW9tZXRyeS50eXBlIDogcG9pbnRzLnR5cGU7XG4gICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgXCJHZW9tZXRyeUNvbGxlY3Rpb25cIjpcbiAgICAgICAgICAgIGdlb21FYWNoKHBvaW50cywgZnVuY3Rpb24gKGdlb20pIHtcbiAgICAgICAgICAgICAgICBpZiAoZ2VvbS50eXBlID09PSBcIlBvaW50XCIpIHtcbiAgICAgICAgICAgICAgICAgICAgZmVhdHVyZXMucHVzaCh7IHR5cGU6IFwiRmVhdHVyZVwiLCBwcm9wZXJ0aWVzOiB7fSwgZ2VvbWV0cnk6IGdlb20gfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4geyB0eXBlOiBcIkZlYXR1cmVDb2xsZWN0aW9uXCIsIGZlYXR1cmVzOiBmZWF0dXJlcyB9O1xuICAgICAgICBjYXNlIFwiRmVhdHVyZUNvbGxlY3Rpb25cIjpcbiAgICAgICAgICAgIHBvaW50cy5mZWF0dXJlcyA9IHBvaW50cy5mZWF0dXJlcy5maWx0ZXIoZnVuY3Rpb24gKGZlYXR1cmUpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZmVhdHVyZS5nZW9tZXRyeS50eXBlID09PSBcIlBvaW50XCI7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiBwb2ludHM7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJwb2ludHMgbXVzdCBiZSBhIFBvaW50IENvbGxlY3Rpb25cIik7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgbmVhcmVzdFBvaW50VG9MaW5lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+nearest-point-to-line@6.5.0/node_modules/@turf/nearest-point-to-line/dist/es/index.js\n");

/***/ })

};
;