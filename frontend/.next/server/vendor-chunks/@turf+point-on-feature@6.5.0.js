"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@turf+point-on-feature@6.5.0";
exports.ids = ["vendor-chunks/@turf+point-on-feature@6.5.0"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@turf+point-on-feature@6.5.0/node_modules/@turf/point-on-feature/dist/es/index.js":
/*!**************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@turf+point-on-feature@6.5.0/node_modules/@turf/point-on-feature/dist/es/index.js ***!
  \**************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var _turf_explode__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @turf/explode */ \"(ssr)/./node_modules/.pnpm/@turf+explode@6.5.0/node_modules/@turf/explode/dist/es/index.js\");\n/* harmony import */ var _turf_center__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @turf/center */ \"(ssr)/./node_modules/.pnpm/@turf+center@6.5.0/node_modules/@turf/center/dist/es/index.js\");\n/* harmony import */ var _turf_nearest_point__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @turf/nearest-point */ \"(ssr)/./node_modules/.pnpm/@turf+nearest-point@6.5.0/node_modules/@turf/nearest-point/dist/es/index.js\");\n/* harmony import */ var _turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @turf/boolean-point-in-polygon */ \"(ssr)/./node_modules/.pnpm/@turf+boolean-point-in-polygon@6.5.0/node_modules/@turf/boolean-point-in-polygon/dist/es/index.js\");\n/* harmony import */ var _turf_helpers__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @turf/helpers */ \"(ssr)/./node_modules/.pnpm/@turf+helpers@6.5.0/node_modules/@turf/helpers/dist/es/index.js\");\n\n\n\n\n\n\n/**\n * Takes a Feature or FeatureCollection and returns a {@link Point} guaranteed to be on the surface of the feature.\n *\n * * Given a {@link Polygon}, the point will be in the area of the polygon\n * * Given a {@link LineString}, the point will be along the string\n * * Given a {@link Point}, the point will the same as the input\n *\n * @name pointOnFeature\n * @param {GeoJSON} geojson any Feature or FeatureCollection\n * @returns {Feature<Point>} a point on the surface of `input`\n * @example\n * var polygon = turf.polygon([[\n *   [116, -36],\n *   [131, -32],\n *   [146, -43],\n *   [155, -25],\n *   [133, -9],\n *   [111, -22],\n *   [116, -36]\n * ]]);\n *\n * var pointOnPolygon = turf.pointOnFeature(polygon);\n *\n * //addToMap\n * var addToMap = [polygon, pointOnPolygon];\n */\nfunction pointOnFeature(geojson) {\n  // normalize\n  var fc = normalize(geojson);\n\n  // get centroid\n  var cent = (0,_turf_center__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(fc);\n\n  // check to see if centroid is on surface\n  var onSurface = false;\n  var i = 0;\n  while (!onSurface && i < fc.features.length) {\n    var geom = fc.features[i].geometry;\n    var x, y, x1, y1, x2, y2, k;\n    var onLine = false;\n    if (geom.type === \"Point\") {\n      if (\n        cent.geometry.coordinates[0] === geom.coordinates[0] &&\n        cent.geometry.coordinates[1] === geom.coordinates[1]\n      ) {\n        onSurface = true;\n      }\n    } else if (geom.type === \"MultiPoint\") {\n      var onMultiPoint = false;\n      k = 0;\n      while (!onMultiPoint && k < geom.coordinates.length) {\n        if (\n          cent.geometry.coordinates[0] === geom.coordinates[k][0] &&\n          cent.geometry.coordinates[1] === geom.coordinates[k][1]\n        ) {\n          onSurface = true;\n          onMultiPoint = true;\n        }\n        k++;\n      }\n    } else if (geom.type === \"LineString\") {\n      k = 0;\n      while (!onLine && k < geom.coordinates.length - 1) {\n        x = cent.geometry.coordinates[0];\n        y = cent.geometry.coordinates[1];\n        x1 = geom.coordinates[k][0];\n        y1 = geom.coordinates[k][1];\n        x2 = geom.coordinates[k + 1][0];\n        y2 = geom.coordinates[k + 1][1];\n        if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n          onLine = true;\n          onSurface = true;\n        }\n        k++;\n      }\n    } else if (geom.type === \"MultiLineString\") {\n      var j = 0;\n      while (j < geom.coordinates.length) {\n        onLine = false;\n        k = 0;\n        var line = geom.coordinates[j];\n        while (!onLine && k < line.length - 1) {\n          x = cent.geometry.coordinates[0];\n          y = cent.geometry.coordinates[1];\n          x1 = line[k][0];\n          y1 = line[k][1];\n          x2 = line[k + 1][0];\n          y2 = line[k + 1][1];\n          if (pointOnSegment(x, y, x1, y1, x2, y2)) {\n            onLine = true;\n            onSurface = true;\n          }\n          k++;\n        }\n        j++;\n      }\n    } else if (geom.type === \"Polygon\" || geom.type === \"MultiPolygon\") {\n      if ((0,_turf_boolean_point_in_polygon__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(cent, geom)) {\n        onSurface = true;\n      }\n    }\n    i++;\n  }\n  if (onSurface) {\n    return cent;\n  } else {\n    var vertices = (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)([]);\n    for (i = 0; i < fc.features.length; i++) {\n      vertices.features = vertices.features.concat(\n        (0,_turf_explode__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(fc.features[i]).features\n      );\n    }\n    // Remove distanceToPoint properties from nearestPoint()\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.point)((0,_turf_nearest_point__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(cent, vertices).geometry.coordinates);\n  }\n}\n\n/**\n * Normalizes any GeoJSON to a FeatureCollection\n *\n * @private\n * @name normalize\n * @param {GeoJSON} geojson Any GeoJSON\n * @returns {FeatureCollection} FeatureCollection\n */\nfunction normalize(geojson) {\n  if (geojson.type !== \"FeatureCollection\") {\n    if (geojson.type !== \"Feature\") {\n      return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)([(0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.feature)(geojson)]);\n    }\n    return (0,_turf_helpers__WEBPACK_IMPORTED_MODULE_4__.featureCollection)([geojson]);\n  }\n  return geojson;\n}\n\nfunction pointOnSegment(x, y, x1, y1, x2, y2) {\n  var ab = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  var ap = Math.sqrt((x - x1) * (x - x1) + (y - y1) * (y - y1));\n  var pb = Math.sqrt((x2 - x) * (x2 - x) + (y2 - y) * (y2 - y));\n  return ab === ap + pb;\n}\n\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (pointOnFeature);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrcG9pbnQtb24tZmVhdHVyZUA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvcG9pbnQtb24tZmVhdHVyZS9kaXN0L2VzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFvQztBQUNBO0FBQ1c7QUFDb0I7QUFDRDs7QUFFbEU7QUFDQSx1REFBdUQsYUFBYTtBQUNwRTtBQUNBLGNBQWMsY0FBYztBQUM1QixjQUFjLGlCQUFpQjtBQUMvQixjQUFjLFlBQVk7QUFDMUI7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLGFBQWEsd0RBQVE7O0FBRXJCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTixVQUFVLDBFQUFxQjtBQUMvQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLElBQUk7QUFDSixtQkFBbUIsZ0VBQWlCO0FBQ3BDLGdCQUFnQix3QkFBd0I7QUFDeEM7QUFDQSxRQUFRLHlEQUFPO0FBQ2Y7QUFDQTtBQUNBO0FBQ0EsV0FBVyxvREFBSyxDQUFDLCtEQUFZO0FBQzdCO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsU0FBUztBQUNwQixhQUFhLG1CQUFtQjtBQUNoQztBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsZ0VBQWlCLEVBQUUsc0RBQU87QUFDdkM7QUFDQSxXQUFXLGdFQUFpQjtBQUM1QjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLGlFQUFlLGNBQWMsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL21mdmFsdWUtZnJvbnRlbmQvLi9ub2RlX21vZHVsZXMvLnBucG0vQHR1cmYrcG9pbnQtb24tZmVhdHVyZUA2LjUuMC9ub2RlX21vZHVsZXMvQHR1cmYvcG9pbnQtb24tZmVhdHVyZS9kaXN0L2VzL2luZGV4LmpzP2IyYjQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cGxvZGUgZnJvbSAnQHR1cmYvZXhwbG9kZSc7XG5pbXBvcnQgY2VudHJvaWQgZnJvbSAnQHR1cmYvY2VudGVyJztcbmltcG9ydCBuZWFyZXN0UG9pbnQgZnJvbSAnQHR1cmYvbmVhcmVzdC1wb2ludCc7XG5pbXBvcnQgYm9vbGVhblBvaW50SW5Qb2x5Z29uIGZyb20gJ0B0dXJmL2Jvb2xlYW4tcG9pbnQtaW4tcG9seWdvbic7XG5pbXBvcnQgeyBmZWF0dXJlQ29sbGVjdGlvbiwgcG9pbnQsIGZlYXR1cmUgfSBmcm9tICdAdHVyZi9oZWxwZXJzJztcblxuLyoqXG4gKiBUYWtlcyBhIEZlYXR1cmUgb3IgRmVhdHVyZUNvbGxlY3Rpb24gYW5kIHJldHVybnMgYSB7QGxpbmsgUG9pbnR9IGd1YXJhbnRlZWQgdG8gYmUgb24gdGhlIHN1cmZhY2Ugb2YgdGhlIGZlYXR1cmUuXG4gKlxuICogKiBHaXZlbiBhIHtAbGluayBQb2x5Z29ufSwgdGhlIHBvaW50IHdpbGwgYmUgaW4gdGhlIGFyZWEgb2YgdGhlIHBvbHlnb25cbiAqICogR2l2ZW4gYSB7QGxpbmsgTGluZVN0cmluZ30sIHRoZSBwb2ludCB3aWxsIGJlIGFsb25nIHRoZSBzdHJpbmdcbiAqICogR2l2ZW4gYSB7QGxpbmsgUG9pbnR9LCB0aGUgcG9pbnQgd2lsbCB0aGUgc2FtZSBhcyB0aGUgaW5wdXRcbiAqXG4gKiBAbmFtZSBwb2ludE9uRmVhdHVyZVxuICogQHBhcmFtIHtHZW9KU09OfSBnZW9qc29uIGFueSBGZWF0dXJlIG9yIEZlYXR1cmVDb2xsZWN0aW9uXG4gKiBAcmV0dXJucyB7RmVhdHVyZTxQb2ludD59IGEgcG9pbnQgb24gdGhlIHN1cmZhY2Ugb2YgYGlucHV0YFxuICogQGV4YW1wbGVcbiAqIHZhciBwb2x5Z29uID0gdHVyZi5wb2x5Z29uKFtbXG4gKiAgIFsxMTYsIC0zNl0sXG4gKiAgIFsxMzEsIC0zMl0sXG4gKiAgIFsxNDYsIC00M10sXG4gKiAgIFsxNTUsIC0yNV0sXG4gKiAgIFsxMzMsIC05XSxcbiAqICAgWzExMSwgLTIyXSxcbiAqICAgWzExNiwgLTM2XVxuICogXV0pO1xuICpcbiAqIHZhciBwb2ludE9uUG9seWdvbiA9IHR1cmYucG9pbnRPbkZlYXR1cmUocG9seWdvbik7XG4gKlxuICogLy9hZGRUb01hcFxuICogdmFyIGFkZFRvTWFwID0gW3BvbHlnb24sIHBvaW50T25Qb2x5Z29uXTtcbiAqL1xuZnVuY3Rpb24gcG9pbnRPbkZlYXR1cmUoZ2VvanNvbikge1xuICAvLyBub3JtYWxpemVcbiAgdmFyIGZjID0gbm9ybWFsaXplKGdlb2pzb24pO1xuXG4gIC8vIGdldCBjZW50cm9pZFxuICB2YXIgY2VudCA9IGNlbnRyb2lkKGZjKTtcblxuICAvLyBjaGVjayB0byBzZWUgaWYgY2VudHJvaWQgaXMgb24gc3VyZmFjZVxuICB2YXIgb25TdXJmYWNlID0gZmFsc2U7XG4gIHZhciBpID0gMDtcbiAgd2hpbGUgKCFvblN1cmZhY2UgJiYgaSA8IGZjLmZlYXR1cmVzLmxlbmd0aCkge1xuICAgIHZhciBnZW9tID0gZmMuZmVhdHVyZXNbaV0uZ2VvbWV0cnk7XG4gICAgdmFyIHgsIHksIHgxLCB5MSwgeDIsIHkyLCBrO1xuICAgIHZhciBvbkxpbmUgPSBmYWxzZTtcbiAgICBpZiAoZ2VvbS50eXBlID09PSBcIlBvaW50XCIpIHtcbiAgICAgIGlmIChcbiAgICAgICAgY2VudC5nZW9tZXRyeS5jb29yZGluYXRlc1swXSA9PT0gZ2VvbS5jb29yZGluYXRlc1swXSAmJlxuICAgICAgICBjZW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzFdID09PSBnZW9tLmNvb3JkaW5hdGVzWzFdXG4gICAgICApIHtcbiAgICAgICAgb25TdXJmYWNlID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9IGVsc2UgaWYgKGdlb20udHlwZSA9PT0gXCJNdWx0aVBvaW50XCIpIHtcbiAgICAgIHZhciBvbk11bHRpUG9pbnQgPSBmYWxzZTtcbiAgICAgIGsgPSAwO1xuICAgICAgd2hpbGUgKCFvbk11bHRpUG9pbnQgJiYgayA8IGdlb20uY29vcmRpbmF0ZXMubGVuZ3RoKSB7XG4gICAgICAgIGlmIChcbiAgICAgICAgICBjZW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdID09PSBnZW9tLmNvb3JkaW5hdGVzW2tdWzBdICYmXG4gICAgICAgICAgY2VudC5nZW9tZXRyeS5jb29yZGluYXRlc1sxXSA9PT0gZ2VvbS5jb29yZGluYXRlc1trXVsxXVxuICAgICAgICApIHtcbiAgICAgICAgICBvblN1cmZhY2UgPSB0cnVlO1xuICAgICAgICAgIG9uTXVsdGlQb2ludCA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaysrO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZ2VvbS50eXBlID09PSBcIkxpbmVTdHJpbmdcIikge1xuICAgICAgayA9IDA7XG4gICAgICB3aGlsZSAoIW9uTGluZSAmJiBrIDwgZ2VvbS5jb29yZGluYXRlcy5sZW5ndGggLSAxKSB7XG4gICAgICAgIHggPSBjZW50Lmdlb21ldHJ5LmNvb3JkaW5hdGVzWzBdO1xuICAgICAgICB5ID0gY2VudC5nZW9tZXRyeS5jb29yZGluYXRlc1sxXTtcbiAgICAgICAgeDEgPSBnZW9tLmNvb3JkaW5hdGVzW2tdWzBdO1xuICAgICAgICB5MSA9IGdlb20uY29vcmRpbmF0ZXNba11bMV07XG4gICAgICAgIHgyID0gZ2VvbS5jb29yZGluYXRlc1trICsgMV1bMF07XG4gICAgICAgIHkyID0gZ2VvbS5jb29yZGluYXRlc1trICsgMV1bMV07XG4gICAgICAgIGlmIChwb2ludE9uU2VnbWVudCh4LCB5LCB4MSwgeTEsIHgyLCB5MikpIHtcbiAgICAgICAgICBvbkxpbmUgPSB0cnVlO1xuICAgICAgICAgIG9uU3VyZmFjZSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgaysrO1xuICAgICAgfVxuICAgIH0gZWxzZSBpZiAoZ2VvbS50eXBlID09PSBcIk11bHRpTGluZVN0cmluZ1wiKSB7XG4gICAgICB2YXIgaiA9IDA7XG4gICAgICB3aGlsZSAoaiA8IGdlb20uY29vcmRpbmF0ZXMubGVuZ3RoKSB7XG4gICAgICAgIG9uTGluZSA9IGZhbHNlO1xuICAgICAgICBrID0gMDtcbiAgICAgICAgdmFyIGxpbmUgPSBnZW9tLmNvb3JkaW5hdGVzW2pdO1xuICAgICAgICB3aGlsZSAoIW9uTGluZSAmJiBrIDwgbGluZS5sZW5ndGggLSAxKSB7XG4gICAgICAgICAgeCA9IGNlbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMF07XG4gICAgICAgICAgeSA9IGNlbnQuZ2VvbWV0cnkuY29vcmRpbmF0ZXNbMV07XG4gICAgICAgICAgeDEgPSBsaW5lW2tdWzBdO1xuICAgICAgICAgIHkxID0gbGluZVtrXVsxXTtcbiAgICAgICAgICB4MiA9IGxpbmVbayArIDFdWzBdO1xuICAgICAgICAgIHkyID0gbGluZVtrICsgMV1bMV07XG4gICAgICAgICAgaWYgKHBvaW50T25TZWdtZW50KHgsIHksIHgxLCB5MSwgeDIsIHkyKSkge1xuICAgICAgICAgICAgb25MaW5lID0gdHJ1ZTtcbiAgICAgICAgICAgIG9uU3VyZmFjZSA9IHRydWU7XG4gICAgICAgICAgfVxuICAgICAgICAgIGsrKztcbiAgICAgICAgfVxuICAgICAgICBqKys7XG4gICAgICB9XG4gICAgfSBlbHNlIGlmIChnZW9tLnR5cGUgPT09IFwiUG9seWdvblwiIHx8IGdlb20udHlwZSA9PT0gXCJNdWx0aVBvbHlnb25cIikge1xuICAgICAgaWYgKGJvb2xlYW5Qb2ludEluUG9seWdvbihjZW50LCBnZW9tKSkge1xuICAgICAgICBvblN1cmZhY2UgPSB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICBpKys7XG4gIH1cbiAgaWYgKG9uU3VyZmFjZSkge1xuICAgIHJldHVybiBjZW50O1xuICB9IGVsc2Uge1xuICAgIHZhciB2ZXJ0aWNlcyA9IGZlYXR1cmVDb2xsZWN0aW9uKFtdKTtcbiAgICBmb3IgKGkgPSAwOyBpIDwgZmMuZmVhdHVyZXMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZlcnRpY2VzLmZlYXR1cmVzID0gdmVydGljZXMuZmVhdHVyZXMuY29uY2F0KFxuICAgICAgICBleHBsb2RlKGZjLmZlYXR1cmVzW2ldKS5mZWF0dXJlc1xuICAgICAgKTtcbiAgICB9XG4gICAgLy8gUmVtb3ZlIGRpc3RhbmNlVG9Qb2ludCBwcm9wZXJ0aWVzIGZyb20gbmVhcmVzdFBvaW50KClcbiAgICByZXR1cm4gcG9pbnQobmVhcmVzdFBvaW50KGNlbnQsIHZlcnRpY2VzKS5nZW9tZXRyeS5jb29yZGluYXRlcyk7XG4gIH1cbn1cblxuLyoqXG4gKiBOb3JtYWxpemVzIGFueSBHZW9KU09OIHRvIGEgRmVhdHVyZUNvbGxlY3Rpb25cbiAqXG4gKiBAcHJpdmF0ZVxuICogQG5hbWUgbm9ybWFsaXplXG4gKiBAcGFyYW0ge0dlb0pTT059IGdlb2pzb24gQW55IEdlb0pTT05cbiAqIEByZXR1cm5zIHtGZWF0dXJlQ29sbGVjdGlvbn0gRmVhdHVyZUNvbGxlY3Rpb25cbiAqL1xuZnVuY3Rpb24gbm9ybWFsaXplKGdlb2pzb24pIHtcbiAgaWYgKGdlb2pzb24udHlwZSAhPT0gXCJGZWF0dXJlQ29sbGVjdGlvblwiKSB7XG4gICAgaWYgKGdlb2pzb24udHlwZSAhPT0gXCJGZWF0dXJlXCIpIHtcbiAgICAgIHJldHVybiBmZWF0dXJlQ29sbGVjdGlvbihbZmVhdHVyZShnZW9qc29uKV0pO1xuICAgIH1cbiAgICByZXR1cm4gZmVhdHVyZUNvbGxlY3Rpb24oW2dlb2pzb25dKTtcbiAgfVxuICByZXR1cm4gZ2VvanNvbjtcbn1cblxuZnVuY3Rpb24gcG9pbnRPblNlZ21lbnQoeCwgeSwgeDEsIHkxLCB4MiwgeTIpIHtcbiAgdmFyIGFiID0gTWF0aC5zcXJ0KCh4MiAtIHgxKSAqICh4MiAtIHgxKSArICh5MiAtIHkxKSAqICh5MiAtIHkxKSk7XG4gIHZhciBhcCA9IE1hdGguc3FydCgoeCAtIHgxKSAqICh4IC0geDEpICsgKHkgLSB5MSkgKiAoeSAtIHkxKSk7XG4gIHZhciBwYiA9IE1hdGguc3FydCgoeDIgLSB4KSAqICh4MiAtIHgpICsgKHkyIC0geSkgKiAoeTIgLSB5KSk7XG4gIHJldHVybiBhYiA9PT0gYXAgKyBwYjtcbn1cblxuZXhwb3J0IGRlZmF1bHQgcG9pbnRPbkZlYXR1cmU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@turf+point-on-feature@6.5.0/node_modules/@turf/point-on-feature/dist/es/index.js\n");

/***/ })

};
;